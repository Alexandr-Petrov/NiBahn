
Project1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000002d6  00800100  00002d36  00002dca  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00002d36  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000000cf  008003d6  008003d6  000030a0  2**0
                  ALLOC
  3 .stab         0000252c  00000000  00000000  000030a0  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00001566  00000000  00000000  000055cc  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .comment      00000011  00000000  00000000  00006b32  2**0
                  CONTENTS, READONLY
  6 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00006b44  2**2
                  CONTENTS, READONLY
  7 .debug_info   00000780  00000000  00000000  00006b80  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00000718  00000000  00000000  00007300  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   0000001a  00000000  00000000  00007a18  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000027d  00000000  00000000  00007a32  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 49 00 	jmp	0x92	; 0x92 <__ctors_end>
       4:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
       8:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
       c:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
      10:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
      14:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
      18:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
      1c:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
      20:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
      24:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
      28:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
      2c:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
      30:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
      34:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
      38:	0c 94 a1 08 	jmp	0x1142	; 0x1142 <__vector_14>
      3c:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
      40:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
      44:	0c 94 5b 09 	jmp	0x12b6	; 0x12b6 <__vector_17>
      48:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
      4c:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
      50:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
      54:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
      58:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
      5c:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
      60:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
      64:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
      68:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
      6c:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
      70:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
      74:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
      78:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
      7c:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
      80:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
      84:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
      88:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>

0000008c <__trampolines_end>:
      8c:	32 2e       	mov	r3, r18
      8e:	31 31       	cpi	r19, 0x11	; 17
	...

00000091 <bot_lib_revision>:
	...

00000092 <__ctors_end>:
      92:	11 24       	eor	r1, r1
      94:	1f be       	out	0x3f, r1	; 63
      96:	cf ef       	ldi	r28, 0xFF	; 255
      98:	d0 e1       	ldi	r29, 0x10	; 16
      9a:	de bf       	out	0x3e, r29	; 62
      9c:	cd bf       	out	0x3d, r28	; 61

0000009e <__do_copy_data>:
      9e:	13 e0       	ldi	r17, 0x03	; 3
      a0:	a0 e0       	ldi	r26, 0x00	; 0
      a2:	b1 e0       	ldi	r27, 0x01	; 1
      a4:	e6 e3       	ldi	r30, 0x36	; 54
      a6:	fd e2       	ldi	r31, 0x2D	; 45
      a8:	00 e0       	ldi	r16, 0x00	; 0
      aa:	0b bf       	out	0x3b, r16	; 59
      ac:	02 c0       	rjmp	.+4      	; 0xb2 <__do_copy_data+0x14>
      ae:	07 90       	elpm	r0, Z+
      b0:	0d 92       	st	X+, r0
      b2:	a6 3d       	cpi	r26, 0xD6	; 214
      b4:	b1 07       	cpc	r27, r17
      b6:	d9 f7       	brne	.-10     	; 0xae <__do_copy_data+0x10>

000000b8 <__do_clear_bss>:
      b8:	24 e0       	ldi	r18, 0x04	; 4
      ba:	a6 ed       	ldi	r26, 0xD6	; 214
      bc:	b3 e0       	ldi	r27, 0x03	; 3
      be:	01 c0       	rjmp	.+2      	; 0xc2 <.do_clear_bss_start>

000000c0 <.do_clear_bss_loop>:
      c0:	1d 92       	st	X+, r1

000000c2 <.do_clear_bss_start>:
      c2:	a5 3a       	cpi	r26, 0xA5	; 165
      c4:	b2 07       	cpc	r27, r18
      c6:	e1 f7       	brne	.-8      	; 0xc0 <.do_clear_bss_loop>
      c8:	0e 94 1d 03 	call	0x63a	; 0x63a <main>
      cc:	0c 94 99 16 	jmp	0x2d32	; 0x2d32 <_exit>

000000d0 <__bad_interrupt>:
      d0:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000d4 <findDirection>:
#include "main.h"
void findDirection()
{
      d4:	cf 93       	push	r28
      d6:	df 93       	push	r29
      d8:	cd b7       	in	r28, 0x3d	; 61
      da:	de b7       	in	r29, 0x3e	; 62
      dc:	a8 97       	sbiw	r28, 0x28	; 40
      de:	0f b6       	in	r0, 0x3f	; 63
      e0:	f8 94       	cli
      e2:	de bf       	out	0x3e, r29	; 62
      e4:	0f be       	out	0x3f, r0	; 63
      e6:	cd bf       	out	0x3d, r28	; 61
	char text[20] = "";
      e8:	1a 82       	std	Y+2, r1	; 0x02
      ea:	19 82       	std	Y+1, r1	; 0x01
      ec:	22 e1       	ldi	r18, 0x12	; 18
      ee:	ce 01       	movw	r24, r28
      f0:	03 96       	adiw	r24, 0x03	; 3
      f2:	fc 01       	movw	r30, r24
      f4:	32 2f       	mov	r19, r18
      f6:	11 92       	st	Z+, r1
      f8:	3a 95       	dec	r19
      fa:	e9 f7       	brne	.-6      	; 0xf6 <findDirection+0x22>
	char output[20] = "";
      fc:	1e 8a       	std	Y+22, r1	; 0x16
      fe:	1d 8a       	std	Y+21, r1	; 0x15
     100:	22 e1       	ldi	r18, 0x12	; 18
     102:	ce 01       	movw	r24, r28
     104:	47 96       	adiw	r24, 0x17	; 23
     106:	fc 01       	movw	r30, r24
     108:	32 2f       	mov	r19, r18
     10a:	11 92       	st	Z+, r1
     10c:	3a 95       	dec	r19
     10e:	e9 f7       	brne	.-6      	; 0x10a <findDirection+0x36>
	copro_update();
     110:	0e 94 c8 0f 	call	0x1f90	; 0x1f90 <copro_update>
	copro_ir_startMeasure();
     114:	0e 94 0c 11 	call	0x2218	; 0x2218 <copro_ir_startMeasure>
	drive();
     118:	0e 94 d3 02 	call	0x5a6	; 0x5a6 <drive>
	showNibo();
     11c:	0e 94 78 03 	call	0x6f0	; 0x6f0 <showNibo>
	static int flag;
	static int timer=0;
	//Tunnel
	if (copro_distance[0]/256 > 50 &&
     120:	80 91 63 04 	lds	r24, 0x0463	; 0x800463 <copro_distance>
     124:	90 91 64 04 	lds	r25, 0x0464	; 0x800464 <copro_distance+0x1>
     128:	81 15       	cp	r24, r1
     12a:	93 43       	sbci	r25, 0x33	; 51
     12c:	c0 f1       	brcs	.+112    	; 0x19e <findDirection+0xca>
		copro_distance[2]/256 > 50 &&
     12e:	80 91 67 04 	lds	r24, 0x0467	; 0x800467 <copro_distance+0x4>
     132:	90 91 68 04 	lds	r25, 0x0468	; 0x800468 <copro_distance+0x5>
	drive();
	showNibo();
	static int flag;
	static int timer=0;
	//Tunnel
	if (copro_distance[0]/256 > 50 &&
     136:	81 15       	cp	r24, r1
     138:	93 43       	sbci	r25, 0x33	; 51
     13a:	88 f1       	brcs	.+98     	; 0x19e <findDirection+0xca>
		copro_distance[2]/256 > 50 &&
		copro_distance[4]/256 > 50 )
     13c:	80 91 6b 04 	lds	r24, 0x046B	; 0x80046b <copro_distance+0x8>
     140:	90 91 6c 04 	lds	r25, 0x046C	; 0x80046c <copro_distance+0x9>
	showNibo();
	static int flag;
	static int timer=0;
	//Tunnel
	if (copro_distance[0]/256 > 50 &&
		copro_distance[2]/256 > 50 &&
     144:	81 15       	cp	r24, r1
     146:	93 43       	sbci	r25, 0x33	; 51
     148:	50 f1       	brcs	.+84     	; 0x19e <findDirection+0xca>
		copro_distance[4]/256 > 50 )
		{
			flag=1;
     14a:	81 e0       	ldi	r24, 0x01	; 1
     14c:	90 e0       	ldi	r25, 0x00	; 0
     14e:	90 93 d7 03 	sts	0x03D7, r25	; 0x8003d7 <__data_end+0x1>
     152:	80 93 d6 03 	sts	0x03D6, r24	; 0x8003d6 <__data_end>
			sprintf(text, "Flag stop: %3i", (int) flag);
     156:	80 91 d6 03 	lds	r24, 0x03D6	; 0x8003d6 <__data_end>
     15a:	90 91 d7 03 	lds	r25, 0x03D7	; 0x8003d7 <__data_end+0x1>
     15e:	29 2f       	mov	r18, r25
     160:	2f 93       	push	r18
     162:	8f 93       	push	r24
     164:	80 e0       	ldi	r24, 0x00	; 0
     166:	91 e0       	ldi	r25, 0x01	; 1
     168:	89 2f       	mov	r24, r25
     16a:	8f 93       	push	r24
     16c:	80 e0       	ldi	r24, 0x00	; 0
     16e:	91 e0       	ldi	r25, 0x01	; 1
     170:	8f 93       	push	r24
     172:	ce 01       	movw	r24, r28
     174:	01 96       	adiw	r24, 0x01	; 1
     176:	9f 93       	push	r25
     178:	8f 93       	push	r24
     17a:	0e 94 b0 13 	call	0x2760	; 0x2760 <sprintf>
     17e:	0f 90       	pop	r0
     180:	0f 90       	pop	r0
     182:	0f 90       	pop	r0
     184:	0f 90       	pop	r0
     186:	0f 90       	pop	r0
     188:	0f 90       	pop	r0
			gfx_move(0,40);
     18a:	68 e2       	ldi	r22, 0x28	; 40
     18c:	80 e0       	ldi	r24, 0x00	; 0
     18e:	0e 94 3b 0a 	call	0x1476	; 0x1476 <gfx_move>
			gfx_print_text(text);
     192:	ce 01       	movw	r24, r28
     194:	01 96       	adiw	r24, 0x01	; 1
     196:	0e 94 a5 0b 	call	0x174a	; 0x174a <gfx_print_text>
			goBack();
     19a:	0e 94 09 03 	call	0x612	; 0x612 <goBack>
		}
	if (copro_distance[0]/256 > 50 &&
     19e:	80 91 63 04 	lds	r24, 0x0463	; 0x800463 <copro_distance>
     1a2:	90 91 64 04 	lds	r25, 0x0464	; 0x800464 <copro_distance+0x1>
     1a6:	81 15       	cp	r24, r1
     1a8:	93 43       	sbci	r25, 0x33	; 51
     1aa:	08 f4       	brcc	.+2      	; 0x1ae <findDirection+0xda>
     1ac:	52 c0       	rjmp	.+164    	; 0x252 <findDirection+0x17e>
		copro_distance[4]/256 > 50)
     1ae:	80 91 6b 04 	lds	r24, 0x046B	; 0x80046b <copro_distance+0x8>
     1b2:	90 91 6c 04 	lds	r25, 0x046C	; 0x80046c <copro_distance+0x9>
			sprintf(text, "Flag stop: %3i", (int) flag);
			gfx_move(0,40);
			gfx_print_text(text);
			goBack();
		}
	if (copro_distance[0]/256 > 50 &&
     1b6:	81 15       	cp	r24, r1
     1b8:	93 43       	sbci	r25, 0x33	; 51
     1ba:	08 f4       	brcc	.+2      	; 0x1be <findDirection+0xea>
     1bc:	4a c0       	rjmp	.+148    	; 0x252 <findDirection+0x17e>
		copro_distance[4]/256 > 50)
			{
				timer++;
     1be:	80 91 d8 03 	lds	r24, 0x03D8	; 0x8003d8 <timer.2345>
     1c2:	90 91 d9 03 	lds	r25, 0x03D9	; 0x8003d9 <timer.2345+0x1>
     1c6:	01 96       	adiw	r24, 0x01	; 1
     1c8:	90 93 d9 03 	sts	0x03D9, r25	; 0x8003d9 <timer.2345+0x1>
     1cc:	80 93 d8 03 	sts	0x03D8, r24	; 0x8003d8 <timer.2345>
				sprintf(text, "Time: %3i", (int) timer);
     1d0:	80 91 d8 03 	lds	r24, 0x03D8	; 0x8003d8 <timer.2345>
     1d4:	90 91 d9 03 	lds	r25, 0x03D9	; 0x8003d9 <timer.2345+0x1>
     1d8:	29 2f       	mov	r18, r25
     1da:	2f 93       	push	r18
     1dc:	8f 93       	push	r24
     1de:	8f e0       	ldi	r24, 0x0F	; 15
     1e0:	91 e0       	ldi	r25, 0x01	; 1
     1e2:	89 2f       	mov	r24, r25
     1e4:	8f 93       	push	r24
     1e6:	8f e0       	ldi	r24, 0x0F	; 15
     1e8:	91 e0       	ldi	r25, 0x01	; 1
     1ea:	8f 93       	push	r24
     1ec:	ce 01       	movw	r24, r28
     1ee:	01 96       	adiw	r24, 0x01	; 1
     1f0:	9f 93       	push	r25
     1f2:	8f 93       	push	r24
     1f4:	0e 94 b0 13 	call	0x2760	; 0x2760 <sprintf>
     1f8:	0f 90       	pop	r0
     1fa:	0f 90       	pop	r0
     1fc:	0f 90       	pop	r0
     1fe:	0f 90       	pop	r0
     200:	0f 90       	pop	r0
     202:	0f 90       	pop	r0
				gfx_move(0, 0);
     204:	60 e0       	ldi	r22, 0x00	; 0
     206:	80 e0       	ldi	r24, 0x00	; 0
     208:	0e 94 3b 0a 	call	0x1476	; 0x1476 <gfx_move>
				gfx_print_text(text);
     20c:	ce 01       	movw	r24, r28
     20e:	01 96       	adiw	r24, 0x01	; 1
     210:	0e 94 a5 0b 	call	0x174a	; 0x174a <gfx_print_text>
				if(flag==1 && timer!=-6)
     214:	80 91 d6 03 	lds	r24, 0x03D6	; 0x8003d6 <__data_end>
     218:	90 91 d7 03 	lds	r25, 0x03D7	; 0x8003d7 <__data_end+0x1>
     21c:	01 97       	sbiw	r24, 0x01	; 1
     21e:	11 f5       	brne	.+68     	; 0x264 <findDirection+0x190>
     220:	80 91 d8 03 	lds	r24, 0x03D8	; 0x8003d8 <timer.2345>
     224:	90 91 d9 03 	lds	r25, 0x03D9	; 0x8003d9 <timer.2345+0x1>
     228:	06 96       	adiw	r24, 0x06	; 6
     22a:	e1 f0       	breq	.+56     	; 0x264 <findDirection+0x190>
				{
					goBack();
     22c:	0e 94 09 03 	call	0x612	; 0x612 <goBack>
					LEDShow('r', 0, 1);
     230:	41 e0       	ldi	r20, 0x01	; 1
     232:	50 e0       	ldi	r21, 0x00	; 0
     234:	60 e0       	ldi	r22, 0x00	; 0
     236:	70 e0       	ldi	r23, 0x00	; 0
     238:	82 e7       	ldi	r24, 0x72	; 114
     23a:	0e 94 40 03 	call	0x680	; 0x680 <LEDShow>
					timer=timer-1;
     23e:	80 91 d8 03 	lds	r24, 0x03D8	; 0x8003d8 <timer.2345>
     242:	90 91 d9 03 	lds	r25, 0x03D9	; 0x8003d9 <timer.2345+0x1>
     246:	01 97       	sbiw	r24, 0x01	; 1
     248:	90 93 d9 03 	sts	0x03D9, r25	; 0x8003d9 <timer.2345+0x1>
     24c:	80 93 d8 03 	sts	0x03D8, r24	; 0x8003d8 <timer.2345>
			{
				timer++;
				sprintf(text, "Time: %3i", (int) timer);
				gfx_move(0, 0);
				gfx_print_text(text);
				if(flag==1 && timer!=-6)
     250:	09 c0       	rjmp	.+18     	; 0x264 <findDirection+0x190>
					timer=timer-1;
				}
			}
	else
	{
		leds_set_status(LEDS_OFF, 0);
     252:	60 e0       	ldi	r22, 0x00	; 0
     254:	80 e0       	ldi	r24, 0x00	; 0
     256:	0e 94 44 11 	call	0x2288	; 0x2288 <leds_set_status>
		leds_set_status(LEDS_OFF, 1);
     25a:	61 e0       	ldi	r22, 0x01	; 1
     25c:	80 e0       	ldi	r24, 0x00	; 0
     25e:	0e 94 44 11 	call	0x2288	; 0x2288 <leds_set_status>
     262:	01 c0       	rjmp	.+2      	; 0x266 <findDirection+0x192>
			{
				timer++;
				sprintf(text, "Time: %3i", (int) timer);
				gfx_move(0, 0);
				gfx_print_text(text);
				if(flag==1 && timer!=-6)
     264:	00 00       	nop
	{
		leds_set_status(LEDS_OFF, 0);
		leds_set_status(LEDS_OFF, 1);
	}
	// exit from the tunnel
	if (copro_distance[0]/256 > 50 &&
     266:	80 91 63 04 	lds	r24, 0x0463	; 0x800463 <copro_distance>
     26a:	90 91 64 04 	lds	r25, 0x0464	; 0x800464 <copro_distance+0x1>
     26e:	81 15       	cp	r24, r1
     270:	93 43       	sbci	r25, 0x33	; 51
     272:	c8 f1       	brcs	.+114    	; 0x2e6 <findDirection+0x212>
		copro_distance[4]/256 < 50 &&
     274:	80 91 6b 04 	lds	r24, 0x046B	; 0x80046b <copro_distance+0x8>
     278:	90 91 6c 04 	lds	r25, 0x046C	; 0x80046c <copro_distance+0x9>
	{
		leds_set_status(LEDS_OFF, 0);
		leds_set_status(LEDS_OFF, 1);
	}
	// exit from the tunnel
	if (copro_distance[0]/256 > 50 &&
     27c:	81 15       	cp	r24, r1
     27e:	92 43       	sbci	r25, 0x32	; 50
     280:	90 f5       	brcc	.+100    	; 0x2e6 <findDirection+0x212>
		copro_distance[4]/256 < 50 &&
		flag==1)
     282:	80 91 d6 03 	lds	r24, 0x03D6	; 0x8003d6 <__data_end>
     286:	90 91 d7 03 	lds	r25, 0x03D7	; 0x8003d7 <__data_end+0x1>
		leds_set_status(LEDS_OFF, 0);
		leds_set_status(LEDS_OFF, 1);
	}
	// exit from the tunnel
	if (copro_distance[0]/256 > 50 &&
		copro_distance[4]/256 < 50 &&
     28a:	01 97       	sbiw	r24, 0x01	; 1
     28c:	61 f5       	brne	.+88     	; 0x2e6 <findDirection+0x212>
		flag==1)
		{
			turnLeft();
     28e:	0e 94 e1 02 	call	0x5c2	; 0x5c2 <turnLeft>
			sprintf(output, "Flag turn: %3i", (int) flag);
     292:	80 91 d6 03 	lds	r24, 0x03D6	; 0x8003d6 <__data_end>
     296:	90 91 d7 03 	lds	r25, 0x03D7	; 0x8003d7 <__data_end+0x1>
     29a:	29 2f       	mov	r18, r25
     29c:	2f 93       	push	r18
     29e:	8f 93       	push	r24
     2a0:	89 e1       	ldi	r24, 0x19	; 25
     2a2:	91 e0       	ldi	r25, 0x01	; 1
     2a4:	89 2f       	mov	r24, r25
     2a6:	8f 93       	push	r24
     2a8:	89 e1       	ldi	r24, 0x19	; 25
     2aa:	91 e0       	ldi	r25, 0x01	; 1
     2ac:	8f 93       	push	r24
     2ae:	ce 01       	movw	r24, r28
     2b0:	45 96       	adiw	r24, 0x15	; 21
     2b2:	29 2f       	mov	r18, r25
     2b4:	2f 93       	push	r18
     2b6:	8f 93       	push	r24
     2b8:	0e 94 b0 13 	call	0x2760	; 0x2760 <sprintf>
     2bc:	0f 90       	pop	r0
     2be:	0f 90       	pop	r0
     2c0:	0f 90       	pop	r0
     2c2:	0f 90       	pop	r0
     2c4:	0f 90       	pop	r0
     2c6:	0f 90       	pop	r0
			gfx_move(0,40);
     2c8:	68 e2       	ldi	r22, 0x28	; 40
     2ca:	80 e0       	ldi	r24, 0x00	; 0
     2cc:	0e 94 3b 0a 	call	0x1476	; 0x1476 <gfx_move>
			gfx_print_text(output);
     2d0:	ce 01       	movw	r24, r28
     2d2:	45 96       	adiw	r24, 0x15	; 21
     2d4:	0e 94 a5 0b 	call	0x174a	; 0x174a <gfx_print_text>
			LEDShow('g', 0, 1);
     2d8:	41 e0       	ldi	r20, 0x01	; 1
     2da:	50 e0       	ldi	r21, 0x00	; 0
     2dc:	60 e0       	ldi	r22, 0x00	; 0
     2de:	70 e0       	ldi	r23, 0x00	; 0
     2e0:	87 e6       	ldi	r24, 0x67	; 103
     2e2:	0e 94 40 03 	call	0x680	; 0x680 <LEDShow>

		}
	if (copro_distance[4]/256 > 50 &&
     2e6:	80 91 6b 04 	lds	r24, 0x046B	; 0x80046b <copro_distance+0x8>
     2ea:	90 91 6c 04 	lds	r25, 0x046C	; 0x80046c <copro_distance+0x9>
     2ee:	81 15       	cp	r24, r1
     2f0:	93 43       	sbci	r25, 0x33	; 51
     2f2:	c8 f1       	brcs	.+114    	; 0x366 <findDirection+0x292>
		copro_distance[0]/256 < 50 &&
     2f4:	80 91 63 04 	lds	r24, 0x0463	; 0x800463 <copro_distance>
     2f8:	90 91 64 04 	lds	r25, 0x0464	; 0x800464 <copro_distance+0x1>
			gfx_move(0,40);
			gfx_print_text(output);
			LEDShow('g', 0, 1);

		}
	if (copro_distance[4]/256 > 50 &&
     2fc:	81 15       	cp	r24, r1
     2fe:	92 43       	sbci	r25, 0x32	; 50
     300:	90 f5       	brcc	.+100    	; 0x366 <findDirection+0x292>
		copro_distance[0]/256 < 50 &&
		flag==1)
     302:	80 91 d6 03 	lds	r24, 0x03D6	; 0x8003d6 <__data_end>
     306:	90 91 d7 03 	lds	r25, 0x03D7	; 0x8003d7 <__data_end+0x1>
			gfx_print_text(output);
			LEDShow('g', 0, 1);

		}
	if (copro_distance[4]/256 > 50 &&
		copro_distance[0]/256 < 50 &&
     30a:	01 97       	sbiw	r24, 0x01	; 1
     30c:	61 f5       	brne	.+88     	; 0x366 <findDirection+0x292>
		flag==1)
		{
			turnRight();
     30e:	0e 94 f5 02 	call	0x5ea	; 0x5ea <turnRight>
			sprintf(output, "Flag turn: %3i", (int) flag);
     312:	80 91 d6 03 	lds	r24, 0x03D6	; 0x8003d6 <__data_end>
     316:	90 91 d7 03 	lds	r25, 0x03D7	; 0x8003d7 <__data_end+0x1>
     31a:	29 2f       	mov	r18, r25
     31c:	2f 93       	push	r18
     31e:	8f 93       	push	r24
     320:	89 e1       	ldi	r24, 0x19	; 25
     322:	91 e0       	ldi	r25, 0x01	; 1
     324:	89 2f       	mov	r24, r25
     326:	8f 93       	push	r24
     328:	89 e1       	ldi	r24, 0x19	; 25
     32a:	91 e0       	ldi	r25, 0x01	; 1
     32c:	8f 93       	push	r24
     32e:	ce 01       	movw	r24, r28
     330:	45 96       	adiw	r24, 0x15	; 21
     332:	29 2f       	mov	r18, r25
     334:	2f 93       	push	r18
     336:	8f 93       	push	r24
     338:	0e 94 b0 13 	call	0x2760	; 0x2760 <sprintf>
     33c:	0f 90       	pop	r0
     33e:	0f 90       	pop	r0
     340:	0f 90       	pop	r0
     342:	0f 90       	pop	r0
     344:	0f 90       	pop	r0
     346:	0f 90       	pop	r0
					gfx_move(0,40);
     348:	68 e2       	ldi	r22, 0x28	; 40
     34a:	80 e0       	ldi	r24, 0x00	; 0
     34c:	0e 94 3b 0a 	call	0x1476	; 0x1476 <gfx_move>
					gfx_print_text(output);
     350:	ce 01       	movw	r24, r28
     352:	45 96       	adiw	r24, 0x15	; 21
     354:	0e 94 a5 0b 	call	0x174a	; 0x174a <gfx_print_text>
					LEDShow('g', 0, 1);
     358:	41 e0       	ldi	r20, 0x01	; 1
     35a:	50 e0       	ldi	r21, 0x00	; 0
     35c:	60 e0       	ldi	r22, 0x00	; 0
     35e:	70 e0       	ldi	r23, 0x00	; 0
     360:	87 e6       	ldi	r24, 0x67	; 103
     362:	0e 94 40 03 	call	0x680	; 0x680 <LEDShow>
		}

	//turn left
	if (copro_distance[0]/256 > 50 &&
     366:	80 91 63 04 	lds	r24, 0x0463	; 0x800463 <copro_distance>
     36a:	90 91 64 04 	lds	r25, 0x0464	; 0x800464 <copro_distance+0x1>
     36e:	81 15       	cp	r24, r1
     370:	93 43       	sbci	r25, 0x33	; 51
     372:	08 f4       	brcc	.+2      	; 0x376 <findDirection+0x2a2>
     374:	3e c0       	rjmp	.+124    	; 0x3f2 <findDirection+0x31e>
		copro_distance[1]/256 > 50 &&
     376:	80 91 65 04 	lds	r24, 0x0465	; 0x800465 <copro_distance+0x2>
     37a:	90 91 66 04 	lds	r25, 0x0466	; 0x800466 <copro_distance+0x3>
					gfx_print_text(output);
					LEDShow('g', 0, 1);
		}

	//turn left
	if (copro_distance[0]/256 > 50 &&
     37e:	81 15       	cp	r24, r1
     380:	93 43       	sbci	r25, 0x33	; 51
     382:	b8 f1       	brcs	.+110    	; 0x3f2 <findDirection+0x31e>
		copro_distance[1]/256 > 50 &&
		copro_distance[2]/256 > 50 &&
     384:	80 91 67 04 	lds	r24, 0x0467	; 0x800467 <copro_distance+0x4>
     388:	90 91 68 04 	lds	r25, 0x0468	; 0x800468 <copro_distance+0x5>
					LEDShow('g', 0, 1);
		}

	//turn left
	if (copro_distance[0]/256 > 50 &&
		copro_distance[1]/256 > 50 &&
     38c:	81 15       	cp	r24, r1
     38e:	93 43       	sbci	r25, 0x33	; 51
     390:	80 f1       	brcs	.+96     	; 0x3f2 <findDirection+0x31e>
		copro_distance[2]/256 > 50 &&
		copro_distance[3]/256 < 50 &&
     392:	80 91 69 04 	lds	r24, 0x0469	; 0x800469 <copro_distance+0x6>
     396:	90 91 6a 04 	lds	r25, 0x046A	; 0x80046a <copro_distance+0x7>
		}

	//turn left
	if (copro_distance[0]/256 > 50 &&
		copro_distance[1]/256 > 50 &&
		copro_distance[2]/256 > 50 &&
     39a:	81 15       	cp	r24, r1
     39c:	92 43       	sbci	r25, 0x32	; 50
     39e:	48 f5       	brcc	.+82     	; 0x3f2 <findDirection+0x31e>
		copro_distance[3]/256 < 50 &&
		copro_distance[4]/256 < 50 &&
     3a0:	80 91 6b 04 	lds	r24, 0x046B	; 0x80046b <copro_distance+0x8>
     3a4:	90 91 6c 04 	lds	r25, 0x046C	; 0x80046c <copro_distance+0x9>

	//turn left
	if (copro_distance[0]/256 > 50 &&
		copro_distance[1]/256 > 50 &&
		copro_distance[2]/256 > 50 &&
		copro_distance[3]/256 < 50 &&
     3a8:	81 15       	cp	r24, r1
     3aa:	92 43       	sbci	r25, 0x32	; 50
     3ac:	10 f5       	brcc	.+68     	; 0x3f2 <findDirection+0x31e>
		copro_distance[4]/256 < 50 &&
		flag==0)
     3ae:	80 91 d6 03 	lds	r24, 0x03D6	; 0x8003d6 <__data_end>
     3b2:	90 91 d7 03 	lds	r25, 0x03D7	; 0x8003d7 <__data_end+0x1>
	//turn left
	if (copro_distance[0]/256 > 50 &&
		copro_distance[1]/256 > 50 &&
		copro_distance[2]/256 > 50 &&
		copro_distance[3]/256 < 50 &&
		copro_distance[4]/256 < 50 &&
     3b6:	89 2b       	or	r24, r25
     3b8:	e1 f4       	brne	.+56     	; 0x3f2 <findDirection+0x31e>
		flag==0)
	{
		LEDShow('r', 5, 7);
     3ba:	47 e0       	ldi	r20, 0x07	; 7
     3bc:	50 e0       	ldi	r21, 0x00	; 0
     3be:	65 e0       	ldi	r22, 0x05	; 5
     3c0:	70 e0       	ldi	r23, 0x00	; 0
     3c2:	82 e7       	ldi	r24, 0x72	; 114
     3c4:	0e 94 40 03 	call	0x680	; 0x680 <LEDShow>
		HindranceShow(40, 50);
     3c8:	62 e3       	ldi	r22, 0x32	; 50
     3ca:	70 e0       	ldi	r23, 0x00	; 0
     3cc:	88 e2       	ldi	r24, 0x28	; 40
     3ce:	90 e0       	ldi	r25, 0x00	; 0
     3d0:	0e 94 a0 03 	call	0x740	; 0x740 <HindranceShow>
		HindranceShow(40, 30);
     3d4:	6e e1       	ldi	r22, 0x1E	; 30
     3d6:	70 e0       	ldi	r23, 0x00	; 0
     3d8:	88 e2       	ldi	r24, 0x28	; 40
     3da:	90 e0       	ldi	r25, 0x00	; 0
     3dc:	0e 94 a0 03 	call	0x740	; 0x740 <HindranceShow>
		HindranceShow(65, 50);
     3e0:	62 e3       	ldi	r22, 0x32	; 50
     3e2:	70 e0       	ldi	r23, 0x00	; 0
     3e4:	81 e4       	ldi	r24, 0x41	; 65
     3e6:	90 e0       	ldi	r25, 0x00	; 0
     3e8:	0e 94 a0 03 	call	0x740	; 0x740 <HindranceShow>
		turnLeft();
     3ec:	0e 94 e1 02 	call	0x5c2	; 0x5c2 <turnLeft>
     3f0:	07 c0       	rjmp	.+14     	; 0x400 <__LOCK_REGION_LENGTH__>
	}
	else
	{
		LEDShow('g', 5, 7);
     3f2:	47 e0       	ldi	r20, 0x07	; 7
     3f4:	50 e0       	ldi	r21, 0x00	; 0
     3f6:	65 e0       	ldi	r22, 0x05	; 5
     3f8:	70 e0       	ldi	r23, 0x00	; 0
     3fa:	87 e6       	ldi	r24, 0x67	; 103
     3fc:	0e 94 40 03 	call	0x680	; 0x680 <LEDShow>
	}

	//turn half left
	if (copro_distance[1]/256 > 50 &&
     400:	80 91 65 04 	lds	r24, 0x0465	; 0x800465 <copro_distance+0x2>
     404:	90 91 66 04 	lds	r25, 0x0466	; 0x800466 <copro_distance+0x3>
     408:	81 15       	cp	r24, r1
     40a:	93 43       	sbci	r25, 0x33	; 51
     40c:	e8 f0       	brcs	.+58     	; 0x448 <__LOCK_REGION_LENGTH__+0x48>
		copro_distance[0]/256 < 50 &&
     40e:	80 91 63 04 	lds	r24, 0x0463	; 0x800463 <copro_distance>
     412:	90 91 64 04 	lds	r25, 0x0464	; 0x800464 <copro_distance+0x1>
	{
		LEDShow('g', 5, 7);
	}

	//turn half left
	if (copro_distance[1]/256 > 50 &&
     416:	81 15       	cp	r24, r1
     418:	92 43       	sbci	r25, 0x32	; 50
     41a:	b0 f4       	brcc	.+44     	; 0x448 <__LOCK_REGION_LENGTH__+0x48>
		copro_distance[0]/256 < 50 &&
		flag==0)
     41c:	80 91 d6 03 	lds	r24, 0x03D6	; 0x8003d6 <__data_end>
     420:	90 91 d7 03 	lds	r25, 0x03D7	; 0x8003d7 <__data_end+0x1>
		LEDShow('g', 5, 7);
	}

	//turn half left
	if (copro_distance[1]/256 > 50 &&
		copro_distance[0]/256 < 50 &&
     424:	89 2b       	or	r24, r25
     426:	81 f4       	brne	.+32     	; 0x448 <__LOCK_REGION_LENGTH__+0x48>
		flag==0)
	{
		LEDShow('r', 6, 6);
     428:	46 e0       	ldi	r20, 0x06	; 6
     42a:	50 e0       	ldi	r21, 0x00	; 0
     42c:	66 e0       	ldi	r22, 0x06	; 6
     42e:	70 e0       	ldi	r23, 0x00	; 0
     430:	82 e7       	ldi	r24, 0x72	; 114
     432:	0e 94 40 03 	call	0x680	; 0x680 <LEDShow>
		HindranceShow(40, 50);
     436:	62 e3       	ldi	r22, 0x32	; 50
     438:	70 e0       	ldi	r23, 0x00	; 0
     43a:	88 e2       	ldi	r24, 0x28	; 40
     43c:	90 e0       	ldi	r25, 0x00	; 0
     43e:	0e 94 a0 03 	call	0x740	; 0x740 <HindranceShow>
		turnLeft();
     442:	0e 94 e1 02 	call	0x5c2	; 0x5c2 <turnLeft>
     446:	07 c0       	rjmp	.+14     	; 0x456 <__LOCK_REGION_LENGTH__+0x56>
     }
	else {LEDShow('g', 6, 6);}
     448:	46 e0       	ldi	r20, 0x06	; 6
     44a:	50 e0       	ldi	r21, 0x00	; 0
     44c:	66 e0       	ldi	r22, 0x06	; 6
     44e:	70 e0       	ldi	r23, 0x00	; 0
     450:	87 e6       	ldi	r24, 0x67	; 103
     452:	0e 94 40 03 	call	0x680	; 0x680 <LEDShow>

	//turn right
	if (copro_distance[4]/256 > 50 &&
     456:	80 91 6b 04 	lds	r24, 0x046B	; 0x80046b <copro_distance+0x8>
     45a:	90 91 6c 04 	lds	r25, 0x046C	; 0x80046c <copro_distance+0x9>
     45e:	81 15       	cp	r24, r1
     460:	93 43       	sbci	r25, 0x33	; 51
     462:	08 f4       	brcc	.+2      	; 0x466 <__LOCK_REGION_LENGTH__+0x66>
     464:	3e c0       	rjmp	.+124    	; 0x4e2 <__LOCK_REGION_LENGTH__+0xe2>
		copro_distance[3]/256 > 50 &&
     466:	80 91 69 04 	lds	r24, 0x0469	; 0x800469 <copro_distance+0x6>
     46a:	90 91 6a 04 	lds	r25, 0x046A	; 0x80046a <copro_distance+0x7>
		turnLeft();
     }
	else {LEDShow('g', 6, 6);}

	//turn right
	if (copro_distance[4]/256 > 50 &&
     46e:	81 15       	cp	r24, r1
     470:	93 43       	sbci	r25, 0x33	; 51
     472:	b8 f1       	brcs	.+110    	; 0x4e2 <__LOCK_REGION_LENGTH__+0xe2>
		copro_distance[3]/256 > 50 &&
		copro_distance[2]/256 > 50 &&
     474:	80 91 67 04 	lds	r24, 0x0467	; 0x800467 <copro_distance+0x4>
     478:	90 91 68 04 	lds	r25, 0x0468	; 0x800468 <copro_distance+0x5>
     }
	else {LEDShow('g', 6, 6);}

	//turn right
	if (copro_distance[4]/256 > 50 &&
		copro_distance[3]/256 > 50 &&
     47c:	81 15       	cp	r24, r1
     47e:	93 43       	sbci	r25, 0x33	; 51
     480:	80 f1       	brcs	.+96     	; 0x4e2 <__LOCK_REGION_LENGTH__+0xe2>
		copro_distance[2]/256 > 50 &&
		copro_distance[1]/256 < 50 &&
     482:	80 91 65 04 	lds	r24, 0x0465	; 0x800465 <copro_distance+0x2>
     486:	90 91 66 04 	lds	r25, 0x0466	; 0x800466 <copro_distance+0x3>
	else {LEDShow('g', 6, 6);}

	//turn right
	if (copro_distance[4]/256 > 50 &&
		copro_distance[3]/256 > 50 &&
		copro_distance[2]/256 > 50 &&
     48a:	81 15       	cp	r24, r1
     48c:	92 43       	sbci	r25, 0x32	; 50
     48e:	48 f5       	brcc	.+82     	; 0x4e2 <__LOCK_REGION_LENGTH__+0xe2>
		copro_distance[1]/256 < 50 &&
		copro_distance[0]/256 < 50 &&
     490:	80 91 63 04 	lds	r24, 0x0463	; 0x800463 <copro_distance>
     494:	90 91 64 04 	lds	r25, 0x0464	; 0x800464 <copro_distance+0x1>

	//turn right
	if (copro_distance[4]/256 > 50 &&
		copro_distance[3]/256 > 50 &&
		copro_distance[2]/256 > 50 &&
		copro_distance[1]/256 < 50 &&
     498:	81 15       	cp	r24, r1
     49a:	92 43       	sbci	r25, 0x32	; 50
     49c:	10 f5       	brcc	.+68     	; 0x4e2 <__LOCK_REGION_LENGTH__+0xe2>
		copro_distance[0]/256 < 50 &&
		flag==0)
     49e:	80 91 d6 03 	lds	r24, 0x03D6	; 0x8003d6 <__data_end>
     4a2:	90 91 d7 03 	lds	r25, 0x03D7	; 0x8003d7 <__data_end+0x1>
	//turn right
	if (copro_distance[4]/256 > 50 &&
		copro_distance[3]/256 > 50 &&
		copro_distance[2]/256 > 50 &&
		copro_distance[1]/256 < 50 &&
		copro_distance[0]/256 < 50 &&
     4a6:	89 2b       	or	r24, r25
     4a8:	e1 f4       	brne	.+56     	; 0x4e2 <__LOCK_REGION_LENGTH__+0xe2>
		flag==0)
	{
		LEDShow('r', 2, 4);
     4aa:	44 e0       	ldi	r20, 0x04	; 4
     4ac:	50 e0       	ldi	r21, 0x00	; 0
     4ae:	62 e0       	ldi	r22, 0x02	; 2
     4b0:	70 e0       	ldi	r23, 0x00	; 0
     4b2:	82 e7       	ldi	r24, 0x72	; 114
     4b4:	0e 94 40 03 	call	0x680	; 0x680 <LEDShow>
		HindranceShow(90, 50);
     4b8:	62 e3       	ldi	r22, 0x32	; 50
     4ba:	70 e0       	ldi	r23, 0x00	; 0
     4bc:	8a e5       	ldi	r24, 0x5A	; 90
     4be:	90 e0       	ldi	r25, 0x00	; 0
     4c0:	0e 94 a0 03 	call	0x740	; 0x740 <HindranceShow>
		HindranceShow(90, 30);
     4c4:	6e e1       	ldi	r22, 0x1E	; 30
     4c6:	70 e0       	ldi	r23, 0x00	; 0
     4c8:	8a e5       	ldi	r24, 0x5A	; 90
     4ca:	90 e0       	ldi	r25, 0x00	; 0
     4cc:	0e 94 a0 03 	call	0x740	; 0x740 <HindranceShow>
		HindranceShow(65, 50);
     4d0:	62 e3       	ldi	r22, 0x32	; 50
     4d2:	70 e0       	ldi	r23, 0x00	; 0
     4d4:	81 e4       	ldi	r24, 0x41	; 65
     4d6:	90 e0       	ldi	r25, 0x00	; 0
     4d8:	0e 94 a0 03 	call	0x740	; 0x740 <HindranceShow>
		turnRight();
     4dc:	0e 94 f5 02 	call	0x5ea	; 0x5ea <turnRight>
     4e0:	07 c0       	rjmp	.+14     	; 0x4f0 <__LOCK_REGION_LENGTH__+0xf0>
	}
	else
	{
		LEDShow('g', 2, 4);
     4e2:	44 e0       	ldi	r20, 0x04	; 4
     4e4:	50 e0       	ldi	r21, 0x00	; 0
     4e6:	62 e0       	ldi	r22, 0x02	; 2
     4e8:	70 e0       	ldi	r23, 0x00	; 0
     4ea:	87 e6       	ldi	r24, 0x67	; 103
     4ec:	0e 94 40 03 	call	0x680	; 0x680 <LEDShow>
	}
	//turn half right
	if (copro_distance[3]/256 > 50 &&
     4f0:	80 91 69 04 	lds	r24, 0x0469	; 0x800469 <copro_distance+0x6>
     4f4:	90 91 6a 04 	lds	r25, 0x046A	; 0x80046a <copro_distance+0x7>
     4f8:	81 15       	cp	r24, r1
     4fa:	93 43       	sbci	r25, 0x33	; 51
     4fc:	e8 f0       	brcs	.+58     	; 0x538 <__LOCK_REGION_LENGTH__+0x138>
		copro_distance[4]/256 < 50 &&
     4fe:	80 91 6b 04 	lds	r24, 0x046B	; 0x80046b <copro_distance+0x8>
     502:	90 91 6c 04 	lds	r25, 0x046C	; 0x80046c <copro_distance+0x9>
	else
	{
		LEDShow('g', 2, 4);
	}
	//turn half right
	if (copro_distance[3]/256 > 50 &&
     506:	81 15       	cp	r24, r1
     508:	92 43       	sbci	r25, 0x32	; 50
     50a:	b0 f4       	brcc	.+44     	; 0x538 <__LOCK_REGION_LENGTH__+0x138>
		copro_distance[4]/256 < 50 &&
		flag==0)
     50c:	80 91 d6 03 	lds	r24, 0x03D6	; 0x8003d6 <__data_end>
     510:	90 91 d7 03 	lds	r25, 0x03D7	; 0x8003d7 <__data_end+0x1>
	{
		LEDShow('g', 2, 4);
	}
	//turn half right
	if (copro_distance[3]/256 > 50 &&
		copro_distance[4]/256 < 50 &&
     514:	89 2b       	or	r24, r25
     516:	81 f4       	brne	.+32     	; 0x538 <__LOCK_REGION_LENGTH__+0x138>
		flag==0)
	{
		LEDShow('r', 3, 3);
     518:	43 e0       	ldi	r20, 0x03	; 3
     51a:	50 e0       	ldi	r21, 0x00	; 0
     51c:	63 e0       	ldi	r22, 0x03	; 3
     51e:	70 e0       	ldi	r23, 0x00	; 0
     520:	82 e7       	ldi	r24, 0x72	; 114
     522:	0e 94 40 03 	call	0x680	; 0x680 <LEDShow>
		HindranceShow(85, 50);
     526:	62 e3       	ldi	r22, 0x32	; 50
     528:	70 e0       	ldi	r23, 0x00	; 0
     52a:	85 e5       	ldi	r24, 0x55	; 85
     52c:	90 e0       	ldi	r25, 0x00	; 0
     52e:	0e 94 a0 03 	call	0x740	; 0x740 <HindranceShow>
		turnRight();
     532:	0e 94 f5 02 	call	0x5ea	; 0x5ea <turnRight>
     536:	07 c0       	rjmp	.+14     	; 0x546 <__LOCK_REGION_LENGTH__+0x146>
	 }
	else {LEDShow('g', 3, 3);}
     538:	43 e0       	ldi	r20, 0x03	; 3
     53a:	50 e0       	ldi	r21, 0x00	; 0
     53c:	63 e0       	ldi	r22, 0x03	; 3
     53e:	70 e0       	ldi	r23, 0x00	; 0
     540:	87 e6       	ldi	r24, 0x67	; 103
     542:	0e 94 40 03 	call	0x680	; 0x680 <LEDShow>

	//around
	if (copro_distance[0]/256 < 50 &&
     546:	80 91 63 04 	lds	r24, 0x0463	; 0x800463 <copro_distance>
     54a:	90 91 64 04 	lds	r25, 0x0464	; 0x800464 <copro_distance+0x1>
     54e:	81 15       	cp	r24, r1
     550:	92 43       	sbci	r25, 0x32	; 50
     552:	c0 f4       	brcc	.+48     	; 0x584 <__LOCK_REGION_LENGTH__+0x184>
		copro_distance[2]/256 > 50 &&
     554:	80 91 67 04 	lds	r24, 0x0467	; 0x800467 <copro_distance+0x4>
     558:	90 91 68 04 	lds	r25, 0x0468	; 0x800468 <copro_distance+0x5>
		turnRight();
	 }
	else {LEDShow('g', 3, 3);}

	//around
	if (copro_distance[0]/256 < 50 &&
     55c:	81 15       	cp	r24, r1
     55e:	93 43       	sbci	r25, 0x33	; 51
     560:	88 f0       	brcs	.+34     	; 0x584 <__LOCK_REGION_LENGTH__+0x184>
		copro_distance[2]/256 > 50 &&
		copro_distance[4]/256 < 50 )
     562:	80 91 6b 04 	lds	r24, 0x046B	; 0x80046b <copro_distance+0x8>
     566:	90 91 6c 04 	lds	r25, 0x046C	; 0x80046c <copro_distance+0x9>
	 }
	else {LEDShow('g', 3, 3);}

	//around
	if (copro_distance[0]/256 < 50 &&
		copro_distance[2]/256 > 50 &&
     56a:	81 15       	cp	r24, r1
     56c:	92 43       	sbci	r25, 0x32	; 50
     56e:	50 f4       	brcc	.+20     	; 0x584 <__LOCK_REGION_LENGTH__+0x184>
		copro_distance[4]/256 < 50 )
	{
		LEDShow('r', 4, 5);
     570:	45 e0       	ldi	r20, 0x05	; 5
     572:	50 e0       	ldi	r21, 0x00	; 0
     574:	64 e0       	ldi	r22, 0x04	; 4
     576:	70 e0       	ldi	r23, 0x00	; 0
     578:	82 e7       	ldi	r24, 0x72	; 114
     57a:	0e 94 40 03 	call	0x680	; 0x680 <LEDShow>
		turnLeft();
     57e:	0e 94 e1 02 	call	0x5c2	; 0x5c2 <turnLeft>
     582:	07 c0       	rjmp	.+14     	; 0x592 <__LOCK_REGION_LENGTH__+0x192>
	}
	else {LEDShow('g', 4, 5);}
     584:	45 e0       	ldi	r20, 0x05	; 5
     586:	50 e0       	ldi	r21, 0x00	; 0
     588:	64 e0       	ldi	r22, 0x04	; 4
     58a:	70 e0       	ldi	r23, 0x00	; 0
     58c:	87 e6       	ldi	r24, 0x67	; 103
     58e:	0e 94 40 03 	call	0x680	; 0x680 <LEDShow>

}
     592:	00 00       	nop
     594:	a8 96       	adiw	r28, 0x28	; 40
     596:	0f b6       	in	r0, 0x3f	; 63
     598:	f8 94       	cli
     59a:	de bf       	out	0x3e, r29	; 62
     59c:	0f be       	out	0x3f, r0	; 63
     59e:	cd bf       	out	0x3d, r28	; 61
     5a0:	df 91       	pop	r29
     5a2:	cf 91       	pop	r28
     5a4:	08 95       	ret

000005a6 <drive>:
#include "main.h"
void drive()
{
     5a6:	cf 93       	push	r28
     5a8:	df 93       	push	r29
     5aa:	cd b7       	in	r28, 0x3d	; 61
     5ac:	de b7       	in	r29, 0x3e	; 62
	copro_setSpeed(10, 10);
     5ae:	6a e0       	ldi	r22, 0x0A	; 10
     5b0:	70 e0       	ldi	r23, 0x00	; 0
     5b2:	8a e0       	ldi	r24, 0x0A	; 10
     5b4:	90 e0       	ldi	r25, 0x00	; 0
     5b6:	0e 94 8b 10 	call	0x2116	; 0x2116 <copro_setSpeed>
}
     5ba:	00 00       	nop
     5bc:	df 91       	pop	r29
     5be:	cf 91       	pop	r28
     5c0:	08 95       	ret

000005c2 <turnLeft>:
void turnLeft()
{
     5c2:	cf 93       	push	r28
     5c4:	df 93       	push	r29
     5c6:	cd b7       	in	r28, 0x3d	; 61
     5c8:	de b7       	in	r29, 0x3e	; 62
	copro_setSpeed(-10, 10);
     5ca:	6a e0       	ldi	r22, 0x0A	; 10
     5cc:	70 e0       	ldi	r23, 0x00	; 0
     5ce:	86 ef       	ldi	r24, 0xF6	; 246
     5d0:	9f ef       	ldi	r25, 0xFF	; 255
     5d2:	0e 94 8b 10 	call	0x2116	; 0x2116 <copro_setSpeed>
	copro_resetOdometry(0, 0);
     5d6:	60 e0       	ldi	r22, 0x00	; 0
     5d8:	70 e0       	ldi	r23, 0x00	; 0
     5da:	80 e0       	ldi	r24, 0x00	; 0
     5dc:	90 e0       	ldi	r25, 0x00	; 0
     5de:	0e 94 d8 10 	call	0x21b0	; 0x21b0 <copro_resetOdometry>
}
     5e2:	00 00       	nop
     5e4:	df 91       	pop	r29
     5e6:	cf 91       	pop	r28
     5e8:	08 95       	ret

000005ea <turnRight>:


void turnRight()
{
     5ea:	cf 93       	push	r28
     5ec:	df 93       	push	r29
     5ee:	cd b7       	in	r28, 0x3d	; 61
     5f0:	de b7       	in	r29, 0x3e	; 62
	copro_setSpeed(10, -10);
     5f2:	66 ef       	ldi	r22, 0xF6	; 246
     5f4:	7f ef       	ldi	r23, 0xFF	; 255
     5f6:	8a e0       	ldi	r24, 0x0A	; 10
     5f8:	90 e0       	ldi	r25, 0x00	; 0
     5fa:	0e 94 8b 10 	call	0x2116	; 0x2116 <copro_setSpeed>
	copro_resetOdometry(0, 0);
     5fe:	60 e0       	ldi	r22, 0x00	; 0
     600:	70 e0       	ldi	r23, 0x00	; 0
     602:	80 e0       	ldi	r24, 0x00	; 0
     604:	90 e0       	ldi	r25, 0x00	; 0
     606:	0e 94 d8 10 	call	0x21b0	; 0x21b0 <copro_resetOdometry>
}
     60a:	00 00       	nop
     60c:	df 91       	pop	r29
     60e:	cf 91       	pop	r28
     610:	08 95       	ret

00000612 <goBack>:

void goBack()
{
     612:	cf 93       	push	r28
     614:	df 93       	push	r29
     616:	cd b7       	in	r28, 0x3d	; 61
     618:	de b7       	in	r29, 0x3e	; 62
	copro_setSpeed(-10, -10);
     61a:	66 ef       	ldi	r22, 0xF6	; 246
     61c:	7f ef       	ldi	r23, 0xFF	; 255
     61e:	86 ef       	ldi	r24, 0xF6	; 246
     620:	9f ef       	ldi	r25, 0xFF	; 255
     622:	0e 94 8b 10 	call	0x2116	; 0x2116 <copro_setSpeed>
	copro_resetOdometry(0, 0);
     626:	60 e0       	ldi	r22, 0x00	; 0
     628:	70 e0       	ldi	r23, 0x00	; 0
     62a:	80 e0       	ldi	r24, 0x00	; 0
     62c:	90 e0       	ldi	r25, 0x00	; 0
     62e:	0e 94 d8 10 	call	0x21b0	; 0x21b0 <copro_resetOdometry>
}
     632:	00 00       	nop
     634:	df 91       	pop	r29
     636:	cf 91       	pop	r28
     638:	08 95       	ret

0000063a <main>:
#include <nibo/leds.h>
#include <nibo/i2cmaster.h>
#include <nibo/nds3.h>
#include "main.h"

int main() {
     63a:	cf 93       	push	r28
     63c:	df 93       	push	r29
     63e:	cd b7       	in	r28, 0x3d	; 61
     640:	de b7       	in	r29, 0x3e	; 62
		sei();
     642:	78 94       	sei
		bot_init();
     644:	0e 94 29 11 	call	0x2252	; 0x2252 <bot_init>
		spi_init();
     648:	0e 94 54 09 	call	0x12a8	; 0x12a8 <spi_init>
		sound_init();
     64c:	0e 94 86 11 	call	0x230c	; 0x230c <sound_init>
		leds_init();
     650:	0e 94 3c 11 	call	0x2278	; 0x2278 <leds_init>
		pwm_init();
     654:	0e 94 6f 08 	call	0x10de	; 0x10de <pwm_init>
		display_init();
     658:	0e 94 0d 08 	call	0x101a	; 0x101a <display_init>
		gfx_init();
     65c:	0e 94 f0 0b 	call	0x17e0	; 0x17e0 <gfx_init>
		copro_ir_startMeasure();
     660:	0e 94 0c 11 	call	0x2218	; 0x2218 <copro_ir_startMeasure>
		//start();
		leds_set_headlights(0);
     664:	80 e0       	ldi	r24, 0x00	; 0
     666:	90 e0       	ldi	r25, 0x00	; 0
     668:	0e 94 72 11 	call	0x22e4	; 0x22e4 <leds_set_headlights>
		while (1 == 1) {
			gfx_fill(0);
     66c:	80 e0       	ldi	r24, 0x00	; 0
     66e:	0e 94 6d 0a 	call	0x14da	; 0x14da <gfx_fill>
			findDirection();
     672:	0e 94 6a 00 	call	0xd4	; 0xd4 <findDirection>
			delay(800);
     676:	80 e2       	ldi	r24, 0x20	; 32
     678:	93 e0       	ldi	r25, 0x03	; 3
     67a:	0e 94 27 09 	call	0x124e	; 0x124e <delay>
		}
     67e:	f6 cf       	rjmp	.-20     	; 0x66c <main+0x32>

00000680 <LEDShow>:
#include "main.h"


void LEDShow(char color, int start, int end){
     680:	cf 93       	push	r28
     682:	df 93       	push	r29
     684:	cd b7       	in	r28, 0x3d	; 61
     686:	de b7       	in	r29, 0x3e	; 62
     688:	27 97       	sbiw	r28, 0x07	; 7
     68a:	0f b6       	in	r0, 0x3f	; 63
     68c:	f8 94       	cli
     68e:	de bf       	out	0x3e, r29	; 62
     690:	0f be       	out	0x3f, r0	; 63
     692:	cd bf       	out	0x3d, r28	; 61
     694:	8b 83       	std	Y+3, r24	; 0x03
     696:	7d 83       	std	Y+5, r23	; 0x05
     698:	6c 83       	std	Y+4, r22	; 0x04
     69a:	5f 83       	std	Y+7, r21	; 0x07
     69c:	4e 83       	std	Y+6, r20	; 0x06
	for(int i=start; i<=end; i++){
     69e:	8c 81       	ldd	r24, Y+4	; 0x04
     6a0:	9d 81       	ldd	r25, Y+5	; 0x05
     6a2:	9a 83       	std	Y+2, r25	; 0x02
     6a4:	89 83       	std	Y+1, r24	; 0x01
     6a6:	13 c0       	rjmp	.+38     	; 0x6ce <LEDShow+0x4e>
		if(color=='r'){ leds_set_status(LEDS_RED, i);}
     6a8:	8b 81       	ldd	r24, Y+3	; 0x03
     6aa:	82 37       	cpi	r24, 0x72	; 114
     6ac:	31 f4       	brne	.+12     	; 0x6ba <LEDShow+0x3a>
     6ae:	89 81       	ldd	r24, Y+1	; 0x01
     6b0:	68 2f       	mov	r22, r24
     6b2:	82 e0       	ldi	r24, 0x02	; 2
     6b4:	0e 94 44 11 	call	0x2288	; 0x2288 <leds_set_status>
     6b8:	05 c0       	rjmp	.+10     	; 0x6c4 <LEDShow+0x44>
		else leds_set_status(LEDS_GREEN, i);
     6ba:	89 81       	ldd	r24, Y+1	; 0x01
     6bc:	68 2f       	mov	r22, r24
     6be:	81 e0       	ldi	r24, 0x01	; 1
     6c0:	0e 94 44 11 	call	0x2288	; 0x2288 <leds_set_status>
#include "main.h"


void LEDShow(char color, int start, int end){
	for(int i=start; i<=end; i++){
     6c4:	89 81       	ldd	r24, Y+1	; 0x01
     6c6:	9a 81       	ldd	r25, Y+2	; 0x02
     6c8:	01 96       	adiw	r24, 0x01	; 1
     6ca:	9a 83       	std	Y+2, r25	; 0x02
     6cc:	89 83       	std	Y+1, r24	; 0x01
     6ce:	29 81       	ldd	r18, Y+1	; 0x01
     6d0:	3a 81       	ldd	r19, Y+2	; 0x02
     6d2:	8e 81       	ldd	r24, Y+6	; 0x06
     6d4:	9f 81       	ldd	r25, Y+7	; 0x07
     6d6:	82 17       	cp	r24, r18
     6d8:	93 07       	cpc	r25, r19
     6da:	34 f7       	brge	.-52     	; 0x6a8 <LEDShow+0x28>
		if(color=='r'){ leds_set_status(LEDS_RED, i);}
		else leds_set_status(LEDS_GREEN, i);
	}
}
     6dc:	00 00       	nop
     6de:	27 96       	adiw	r28, 0x07	; 7
     6e0:	0f b6       	in	r0, 0x3f	; 63
     6e2:	f8 94       	cli
     6e4:	de bf       	out	0x3e, r29	; 62
     6e6:	0f be       	out	0x3f, r0	; 63
     6e8:	cd bf       	out	0x3d, r28	; 61
     6ea:	df 91       	pop	r29
     6ec:	cf 91       	pop	r28
     6ee:	08 95       	ret

000006f0 <showNibo>:
void showNibo()
{
     6f0:	cf 93       	push	r28
     6f2:	df 93       	push	r29
     6f4:	cd b7       	in	r28, 0x3d	; 61
     6f6:	de b7       	in	r29, 0x3e	; 62
	//Nibos Bild
	 gfx_move(53, 12); gfx_box(4, 6);
     6f8:	6c e0       	ldi	r22, 0x0C	; 12
     6fa:	85 e3       	ldi	r24, 0x35	; 53
     6fc:	0e 94 3b 0a 	call	0x1476	; 0x1476 <gfx_move>
     700:	66 e0       	ldi	r22, 0x06	; 6
     702:	84 e0       	ldi	r24, 0x04	; 4
     704:	0e 94 4b 0c 	call	0x1896	; 0x1896 <gfx_box>
	 gfx_move(75, 12); gfx_box(4, 6);
     708:	6c e0       	ldi	r22, 0x0C	; 12
     70a:	8b e4       	ldi	r24, 0x4B	; 75
     70c:	0e 94 3b 0a 	call	0x1476	; 0x1476 <gfx_move>
     710:	66 e0       	ldi	r22, 0x06	; 6
     712:	84 e0       	ldi	r24, 0x04	; 4
     714:	0e 94 4b 0c 	call	0x1896	; 0x1896 <gfx_box>
	 gfx_move(59, 14); gfx_box(14, 6);
     718:	6e e0       	ldi	r22, 0x0E	; 14
     71a:	8b e3       	ldi	r24, 0x3B	; 59
     71c:	0e 94 3b 0a 	call	0x1476	; 0x1476 <gfx_move>
     720:	66 e0       	ldi	r22, 0x06	; 6
     722:	8e e0       	ldi	r24, 0x0E	; 14
     724:	0e 94 4b 0c 	call	0x1896	; 0x1896 <gfx_box>
	 gfx_move(59, 22); gfx_box(14, 3);
     728:	66 e1       	ldi	r22, 0x16	; 22
     72a:	8b e3       	ldi	r24, 0x3B	; 59
     72c:	0e 94 3b 0a 	call	0x1476	; 0x1476 <gfx_move>
     730:	63 e0       	ldi	r22, 0x03	; 3
     732:	8e e0       	ldi	r24, 0x0E	; 14
     734:	0e 94 4b 0c 	call	0x1896	; 0x1896 <gfx_box>
}
     738:	00 00       	nop
     73a:	df 91       	pop	r29
     73c:	cf 91       	pop	r28
     73e:	08 95       	ret

00000740 <HindranceShow>:

void HindranceShow(int x, int y){
     740:	cf 93       	push	r28
     742:	df 93       	push	r29
     744:	00 d0       	rcall	.+0      	; 0x746 <HindranceShow+0x6>
     746:	00 d0       	rcall	.+0      	; 0x748 <HindranceShow+0x8>
     748:	cd b7       	in	r28, 0x3d	; 61
     74a:	de b7       	in	r29, 0x3e	; 62
     74c:	9a 83       	std	Y+2, r25	; 0x02
     74e:	89 83       	std	Y+1, r24	; 0x01
     750:	7c 83       	std	Y+4, r23	; 0x04
     752:	6b 83       	std	Y+3, r22	; 0x03

	gfx_move(x, y);
     754:	9b 81       	ldd	r25, Y+3	; 0x03
     756:	89 81       	ldd	r24, Y+1	; 0x01
     758:	69 2f       	mov	r22, r25
     75a:	0e 94 3b 0a 	call	0x1476	; 0x1476 <gfx_move>
	gfx_lineTo(x+7,y-17);
     75e:	8b 81       	ldd	r24, Y+3	; 0x03
     760:	9f ee       	ldi	r25, 0xEF	; 239
     762:	98 0f       	add	r25, r24
     764:	89 81       	ldd	r24, Y+1	; 0x01
     766:	89 5f       	subi	r24, 0xF9	; 249
     768:	69 2f       	mov	r22, r25
     76a:	0e 94 f5 0d 	call	0x1bea	; 0x1bea <gfx_lineTo>
	gfx_lineTo(x-7,y-17);
     76e:	8b 81       	ldd	r24, Y+3	; 0x03
     770:	9f ee       	ldi	r25, 0xEF	; 239
     772:	98 0f       	add	r25, r24
     774:	89 81       	ldd	r24, Y+1	; 0x01
     776:	87 50       	subi	r24, 0x07	; 7
     778:	69 2f       	mov	r22, r25
     77a:	0e 94 f5 0d 	call	0x1bea	; 0x1bea <gfx_lineTo>
	gfx_lineTo(x, y);
     77e:	9b 81       	ldd	r25, Y+3	; 0x03
     780:	89 81       	ldd	r24, Y+1	; 0x01
     782:	69 2f       	mov	r22, r25
     784:	0e 94 f5 0d 	call	0x1bea	; 0x1bea <gfx_lineTo>
	gfx_move(x, y-7);
     788:	8b 81       	ldd	r24, Y+3	; 0x03
     78a:	99 ef       	ldi	r25, 0xF9	; 249
     78c:	98 0f       	add	r25, r24
     78e:	89 81       	ldd	r24, Y+1	; 0x01
     790:	69 2f       	mov	r22, r25
     792:	0e 94 3b 0a 	call	0x1476	; 0x1476 <gfx_move>
	gfx_lineTo(x,y-13);
     796:	8b 81       	ldd	r24, Y+3	; 0x03
     798:	93 ef       	ldi	r25, 0xF3	; 243
     79a:	98 0f       	add	r25, r24
     79c:	89 81       	ldd	r24, Y+1	; 0x01
     79e:	69 2f       	mov	r22, r25
     7a0:	0e 94 f5 0d 	call	0x1bea	; 0x1bea <gfx_lineTo>
	gfx_move(x, y-15);
     7a4:	8b 81       	ldd	r24, Y+3	; 0x03
     7a6:	91 ef       	ldi	r25, 0xF1	; 241
     7a8:	98 0f       	add	r25, r24
     7aa:	89 81       	ldd	r24, Y+1	; 0x01
     7ac:	69 2f       	mov	r22, r25
     7ae:	0e 94 3b 0a 	call	0x1476	; 0x1476 <gfx_move>
	gfx_hline(1);
     7b2:	81 e0       	ldi	r24, 0x01	; 1
     7b4:	0e 94 35 0c 	call	0x186a	; 0x186a <gfx_hline>

}
     7b8:	00 00       	nop
     7ba:	0f 90       	pop	r0
     7bc:	0f 90       	pop	r0
     7be:	0f 90       	pop	r0
     7c0:	0f 90       	pop	r0
     7c2:	df 91       	pop	r29
     7c4:	cf 91       	pop	r28
     7c6:	08 95       	ret

000007c8 <tone>:
#include <nibo/sound.h>

#include "main.h"

//from HelloSound
int tone(int frequency, int duration) {
     7c8:	0f 93       	push	r16
     7ca:	1f 93       	push	r17
     7cc:	cf 93       	push	r28
     7ce:	df 93       	push	r29
     7d0:	cd b7       	in	r28, 0x3d	; 61
     7d2:	de b7       	in	r29, 0x3e	; 62
     7d4:	c8 54       	subi	r28, 0x48	; 72
     7d6:	d1 09       	sbc	r29, r1
     7d8:	0f b6       	in	r0, 0x3f	; 63
     7da:	f8 94       	cli
     7dc:	de bf       	out	0x3e, r29	; 62
     7de:	0f be       	out	0x3f, r0	; 63
     7e0:	cd bf       	out	0x3d, r28	; 61
     7e2:	9e 01       	movw	r18, r28
     7e4:	2b 5b       	subi	r18, 0xBB	; 187
     7e6:	3f 4f       	sbci	r19, 0xFF	; 255
     7e8:	f9 01       	movw	r30, r18
     7ea:	91 83       	std	Z+1, r25	; 0x01
     7ec:	80 83       	st	Z, r24
     7ee:	ce 01       	movw	r24, r28
     7f0:	89 5b       	subi	r24, 0xB9	; 185
     7f2:	9f 4f       	sbci	r25, 0xFF	; 255
     7f4:	fc 01       	movw	r30, r24
     7f6:	71 83       	std	Z+1, r23	; 0x01
     7f8:	60 83       	st	Z, r22
	int interval = (50000 / frequency);
     7fa:	ce 01       	movw	r24, r28
     7fc:	8b 5b       	subi	r24, 0xBB	; 187
     7fe:	9f 4f       	sbci	r25, 0xFF	; 255
     800:	fc 01       	movw	r30, r24
     802:	80 81       	ld	r24, Z
     804:	91 81       	ldd	r25, Z+1	; 0x01
     806:	9c 01       	movw	r18, r24
     808:	99 0f       	add	r25, r25
     80a:	44 0b       	sbc	r20, r20
     80c:	55 0b       	sbc	r21, r21
     80e:	80 e5       	ldi	r24, 0x50	; 80
     810:	93 ec       	ldi	r25, 0xC3	; 195
     812:	a0 e0       	ldi	r26, 0x00	; 0
     814:	b0 e0       	ldi	r27, 0x00	; 0
     816:	bc 01       	movw	r22, r24
     818:	cd 01       	movw	r24, r26
     81a:	0e 94 6f 13 	call	0x26de	; 0x26de <__divmodsi4>
     81e:	da 01       	movw	r26, r20
     820:	c9 01       	movw	r24, r18
     822:	9c 83       	std	Y+4, r25	; 0x04
     824:	8b 83       	std	Y+3, r24	; 0x03
	duration = duration * 100;
     826:	ce 01       	movw	r24, r28
     828:	89 5b       	subi	r24, 0xB9	; 185
     82a:	9f 4f       	sbci	r25, 0xFF	; 255
     82c:	9e 01       	movw	r18, r28
     82e:	29 5b       	subi	r18, 0xB9	; 185
     830:	3f 4f       	sbci	r19, 0xFF	; 255
     832:	f9 01       	movw	r30, r18
     834:	40 81       	ld	r20, Z
     836:	51 81       	ldd	r21, Z+1	; 0x01
     838:	64 e6       	ldi	r22, 0x64	; 100
     83a:	64 9f       	mul	r22, r20
     83c:	90 01       	movw	r18, r0
     83e:	65 9f       	mul	r22, r21
     840:	30 0d       	add	r19, r0
     842:	11 24       	eor	r1, r1
     844:	fc 01       	movw	r30, r24
     846:	31 83       	std	Z+1, r19	; 0x01
     848:	20 83       	st	Z, r18

	while (duration) {
     84a:	5b c2       	rjmp	.+1206   	; 0xd02 <tone+0x53a>
		int i = interval;
     84c:	8b 81       	ldd	r24, Y+3	; 0x03
     84e:	9c 81       	ldd	r25, Y+4	; 0x04
     850:	9a 83       	std	Y+2, r25	; 0x02
     852:	89 83       	std	Y+1, r24	; 0x01
		clear_output_bit(IO_AUDIO);
     854:	88 e3       	ldi	r24, 0x38	; 56
     856:	90 e0       	ldi	r25, 0x00	; 0
     858:	28 e3       	ldi	r18, 0x38	; 56
     85a:	30 e0       	ldi	r19, 0x00	; 0
     85c:	f9 01       	movw	r30, r18
     85e:	20 81       	ld	r18, Z
     860:	2f 7e       	andi	r18, 0xEF	; 239
     862:	fc 01       	movw	r30, r24
     864:	20 83       	st	Z, r18
		while (duration && i) {
     866:	02 c1       	rjmp	.+516    	; 0xa6c <tone+0x2a4>
			duration--;
     868:	ce 01       	movw	r24, r28
     86a:	89 5b       	subi	r24, 0xB9	; 185
     86c:	9f 4f       	sbci	r25, 0xFF	; 255
     86e:	9e 01       	movw	r18, r28
     870:	29 5b       	subi	r18, 0xB9	; 185
     872:	3f 4f       	sbci	r19, 0xFF	; 255
     874:	f9 01       	movw	r30, r18
     876:	20 81       	ld	r18, Z
     878:	31 81       	ldd	r19, Z+1	; 0x01
     87a:	21 50       	subi	r18, 0x01	; 1
     87c:	31 09       	sbc	r19, r1
     87e:	fc 01       	movw	r30, r24
     880:	31 83       	std	Z+1, r19	; 0x01
     882:	20 83       	st	Z, r18
			i--;
     884:	89 81       	ldd	r24, Y+1	; 0x01
     886:	9a 81       	ldd	r25, Y+2	; 0x02
     888:	01 97       	sbiw	r24, 0x01	; 1
     88a:	9a 83       	std	Y+2, r25	; 0x02
     88c:	89 83       	std	Y+1, r24	; 0x01
     88e:	80 e0       	ldi	r24, 0x00	; 0
     890:	90 e0       	ldi	r25, 0x00	; 0
     892:	a0 e2       	ldi	r26, 0x20	; 32
     894:	b1 e4       	ldi	r27, 0x41	; 65
     896:	89 87       	std	Y+9, r24	; 0x09
     898:	9a 87       	std	Y+10, r25	; 0x0a
     89a:	ab 87       	std	Y+11, r26	; 0x0b
     89c:	bc 87       	std	Y+12, r27	; 0x0c
	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint8_t __ticks;
	double __tmp2 ;
	__tmp = ((F_CPU) / 3e6) * __us;
     89e:	2b ea       	ldi	r18, 0xAB	; 171
     8a0:	3a ea       	ldi	r19, 0xAA	; 170
     8a2:	4a ea       	ldi	r20, 0xAA	; 170
     8a4:	50 e4       	ldi	r21, 0x40	; 64
     8a6:	69 85       	ldd	r22, Y+9	; 0x09
     8a8:	7a 85       	ldd	r23, Y+10	; 0x0a
     8aa:	8b 85       	ldd	r24, Y+11	; 0x0b
     8ac:	9c 85       	ldd	r25, Y+12	; 0x0c
     8ae:	0e 94 02 13 	call	0x2604	; 0x2604 <__mulsf3>
     8b2:	dc 01       	movw	r26, r24
     8b4:	cb 01       	movw	r24, r22
     8b6:	8d 87       	std	Y+13, r24	; 0x0d
     8b8:	9e 87       	std	Y+14, r25	; 0x0e
     8ba:	af 87       	std	Y+15, r26	; 0x0f
     8bc:	b8 8b       	std	Y+16, r27	; 0x10
	__tmp2 = ((F_CPU) / 4e6) * __us;
     8be:	20 e0       	ldi	r18, 0x00	; 0
     8c0:	30 e0       	ldi	r19, 0x00	; 0
     8c2:	40 e8       	ldi	r20, 0x80	; 128
     8c4:	50 e4       	ldi	r21, 0x40	; 64
     8c6:	69 85       	ldd	r22, Y+9	; 0x09
     8c8:	7a 85       	ldd	r23, Y+10	; 0x0a
     8ca:	8b 85       	ldd	r24, Y+11	; 0x0b
     8cc:	9c 85       	ldd	r25, Y+12	; 0x0c
     8ce:	0e 94 02 13 	call	0x2604	; 0x2604 <__mulsf3>
     8d2:	dc 01       	movw	r26, r24
     8d4:	cb 01       	movw	r24, r22
     8d6:	89 8b       	std	Y+17, r24	; 0x11
     8d8:	9a 8b       	std	Y+18, r25	; 0x12
     8da:	ab 8b       	std	Y+19, r26	; 0x13
     8dc:	bc 8b       	std	Y+20, r27	; 0x14
	if (__tmp < 1.0)
     8de:	20 e0       	ldi	r18, 0x00	; 0
     8e0:	30 e0       	ldi	r19, 0x00	; 0
     8e2:	40 e8       	ldi	r20, 0x80	; 128
     8e4:	5f e3       	ldi	r21, 0x3F	; 63
     8e6:	6d 85       	ldd	r22, Y+13	; 0x0d
     8e8:	7e 85       	ldd	r23, Y+14	; 0x0e
     8ea:	8f 85       	ldd	r24, Y+15	; 0x0f
     8ec:	98 89       	ldd	r25, Y+16	; 0x10
     8ee:	0e 94 e2 11 	call	0x23c4	; 0x23c4 <__cmpsf2>
     8f2:	88 23       	and	r24, r24
     8f4:	1c f4       	brge	.+6      	; 0x8fc <tone+0x134>
		__ticks = 1;
     8f6:	81 e0       	ldi	r24, 0x01	; 1
     8f8:	8d 8b       	std	Y+21, r24	; 0x15
     8fa:	b2 c0       	rjmp	.+356    	; 0xa60 <tone+0x298>
	else if (__tmp2 > 65535)
     8fc:	20 e0       	ldi	r18, 0x00	; 0
     8fe:	3f ef       	ldi	r19, 0xFF	; 255
     900:	4f e7       	ldi	r20, 0x7F	; 127
     902:	57 e4       	ldi	r21, 0x47	; 71
     904:	69 89       	ldd	r22, Y+17	; 0x11
     906:	7a 89       	ldd	r23, Y+18	; 0x12
     908:	8b 89       	ldd	r24, Y+19	; 0x13
     90a:	9c 89       	ldd	r25, Y+20	; 0x14
     90c:	0e 94 fd 12 	call	0x25fa	; 0x25fa <__gesf2>
     910:	18 16       	cp	r1, r24
     912:	0c f0       	brlt	.+2      	; 0x916 <tone+0x14e>
     914:	7b c0       	rjmp	.+246    	; 0xa0c <tone+0x244>
	{
		_delay_ms(__us / 1000.0);
     916:	20 e0       	ldi	r18, 0x00	; 0
     918:	30 e0       	ldi	r19, 0x00	; 0
     91a:	4a e7       	ldi	r20, 0x7A	; 122
     91c:	54 e4       	ldi	r21, 0x44	; 68
     91e:	69 85       	ldd	r22, Y+9	; 0x09
     920:	7a 85       	ldd	r23, Y+10	; 0x0a
     922:	8b 85       	ldd	r24, Y+11	; 0x0b
     924:	9c 85       	ldd	r25, Y+12	; 0x0c
     926:	0e 94 e7 11 	call	0x23ce	; 0x23ce <__divsf3>
     92a:	dc 01       	movw	r26, r24
     92c:	cb 01       	movw	r24, r22
     92e:	8e 8b       	std	Y+22, r24	; 0x16
     930:	9f 8b       	std	Y+23, r25	; 0x17
     932:	a8 8f       	std	Y+24, r26	; 0x18
     934:	b9 8f       	std	Y+25, r27	; 0x19

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     936:	20 e0       	ldi	r18, 0x00	; 0
     938:	30 e0       	ldi	r19, 0x00	; 0
     93a:	4a e7       	ldi	r20, 0x7A	; 122
     93c:	55 e4       	ldi	r21, 0x45	; 69
     93e:	6e 89       	ldd	r22, Y+22	; 0x16
     940:	7f 89       	ldd	r23, Y+23	; 0x17
     942:	88 8d       	ldd	r24, Y+24	; 0x18
     944:	99 8d       	ldd	r25, Y+25	; 0x19
     946:	0e 94 02 13 	call	0x2604	; 0x2604 <__mulsf3>
     94a:	dc 01       	movw	r26, r24
     94c:	cb 01       	movw	r24, r22
     94e:	8a 8f       	std	Y+26, r24	; 0x1a
     950:	9b 8f       	std	Y+27, r25	; 0x1b
     952:	ac 8f       	std	Y+28, r26	; 0x1c
     954:	bd 8f       	std	Y+29, r27	; 0x1d
	if (__tmp < 1.0)
     956:	20 e0       	ldi	r18, 0x00	; 0
     958:	30 e0       	ldi	r19, 0x00	; 0
     95a:	40 e8       	ldi	r20, 0x80	; 128
     95c:	5f e3       	ldi	r21, 0x3F	; 63
     95e:	6a 8d       	ldd	r22, Y+26	; 0x1a
     960:	7b 8d       	ldd	r23, Y+27	; 0x1b
     962:	8c 8d       	ldd	r24, Y+28	; 0x1c
     964:	9d 8d       	ldd	r25, Y+29	; 0x1d
     966:	0e 94 e2 11 	call	0x23c4	; 0x23c4 <__cmpsf2>
     96a:	88 23       	and	r24, r24
     96c:	2c f4       	brge	.+10     	; 0x978 <tone+0x1b0>
		__ticks = 1;
     96e:	81 e0       	ldi	r24, 0x01	; 1
     970:	90 e0       	ldi	r25, 0x00	; 0
     972:	9f 8f       	std	Y+31, r25	; 0x1f
     974:	8e 8f       	std	Y+30, r24	; 0x1e
     976:	3f c0       	rjmp	.+126    	; 0x9f6 <tone+0x22e>
	else if (__tmp > 65535)
     978:	20 e0       	ldi	r18, 0x00	; 0
     97a:	3f ef       	ldi	r19, 0xFF	; 255
     97c:	4f e7       	ldi	r20, 0x7F	; 127
     97e:	57 e4       	ldi	r21, 0x47	; 71
     980:	6a 8d       	ldd	r22, Y+26	; 0x1a
     982:	7b 8d       	ldd	r23, Y+27	; 0x1b
     984:	8c 8d       	ldd	r24, Y+28	; 0x1c
     986:	9d 8d       	ldd	r25, Y+29	; 0x1d
     988:	0e 94 fd 12 	call	0x25fa	; 0x25fa <__gesf2>
     98c:	18 16       	cp	r1, r24
     98e:	4c f5       	brge	.+82     	; 0x9e2 <tone+0x21a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     990:	20 e0       	ldi	r18, 0x00	; 0
     992:	30 e0       	ldi	r19, 0x00	; 0
     994:	40 e2       	ldi	r20, 0x20	; 32
     996:	51 e4       	ldi	r21, 0x41	; 65
     998:	6e 89       	ldd	r22, Y+22	; 0x16
     99a:	7f 89       	ldd	r23, Y+23	; 0x17
     99c:	88 8d       	ldd	r24, Y+24	; 0x18
     99e:	99 8d       	ldd	r25, Y+25	; 0x19
     9a0:	0e 94 02 13 	call	0x2604	; 0x2604 <__mulsf3>
     9a4:	dc 01       	movw	r26, r24
     9a6:	cb 01       	movw	r24, r22
     9a8:	bc 01       	movw	r22, r24
     9aa:	cd 01       	movw	r24, r26
     9ac:	0e 94 59 12 	call	0x24b2	; 0x24b2 <__fixunssfsi>
     9b0:	dc 01       	movw	r26, r24
     9b2:	cb 01       	movw	r24, r22
     9b4:	9f 8f       	std	Y+31, r25	; 0x1f
     9b6:	8e 8f       	std	Y+30, r24	; 0x1e
     9b8:	0f c0       	rjmp	.+30     	; 0x9d8 <tone+0x210>
     9ba:	80 e9       	ldi	r24, 0x90	; 144
     9bc:	91 e0       	ldi	r25, 0x01	; 1
     9be:	99 a3       	std	Y+33, r25	; 0x21
     9c0:	88 a3       	std	Y+32, r24	; 0x20
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     9c2:	88 a1       	ldd	r24, Y+32	; 0x20
     9c4:	99 a1       	ldd	r25, Y+33	; 0x21
     9c6:	01 97       	sbiw	r24, 0x01	; 1
     9c8:	f1 f7       	brne	.-4      	; 0x9c6 <tone+0x1fe>
     9ca:	99 a3       	std	Y+33, r25	; 0x21
     9cc:	88 a3       	std	Y+32, r24	; 0x20
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     9ce:	8e 8d       	ldd	r24, Y+30	; 0x1e
     9d0:	9f 8d       	ldd	r25, Y+31	; 0x1f
     9d2:	01 97       	sbiw	r24, 0x01	; 1
     9d4:	9f 8f       	std	Y+31, r25	; 0x1f
     9d6:	8e 8f       	std	Y+30, r24	; 0x1e
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     9d8:	8e 8d       	ldd	r24, Y+30	; 0x1e
     9da:	9f 8d       	ldd	r25, Y+31	; 0x1f
     9dc:	89 2b       	or	r24, r25
     9de:	69 f7       	brne	.-38     	; 0x9ba <tone+0x1f2>
     9e0:	3f c0       	rjmp	.+126    	; 0xa60 <tone+0x298>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     9e2:	6a 8d       	ldd	r22, Y+26	; 0x1a
     9e4:	7b 8d       	ldd	r23, Y+27	; 0x1b
     9e6:	8c 8d       	ldd	r24, Y+28	; 0x1c
     9e8:	9d 8d       	ldd	r25, Y+29	; 0x1d
     9ea:	0e 94 59 12 	call	0x24b2	; 0x24b2 <__fixunssfsi>
     9ee:	dc 01       	movw	r26, r24
     9f0:	cb 01       	movw	r24, r22
     9f2:	9f 8f       	std	Y+31, r25	; 0x1f
     9f4:	8e 8f       	std	Y+30, r24	; 0x1e
     9f6:	8e 8d       	ldd	r24, Y+30	; 0x1e
     9f8:	9f 8d       	ldd	r25, Y+31	; 0x1f
     9fa:	9b a3       	std	Y+35, r25	; 0x23
     9fc:	8a a3       	std	Y+34, r24	; 0x22
     9fe:	8a a1       	ldd	r24, Y+34	; 0x22
     a00:	9b a1       	ldd	r25, Y+35	; 0x23
     a02:	01 97       	sbiw	r24, 0x01	; 1
     a04:	f1 f7       	brne	.-4      	; 0xa02 <tone+0x23a>
     a06:	9b a3       	std	Y+35, r25	; 0x23
     a08:	8a a3       	std	Y+34, r24	; 0x22
     a0a:	2a c0       	rjmp	.+84     	; 0xa60 <tone+0x298>
		__ticks = 1;
	else if (__tmp2 > 65535)
	{
		_delay_ms(__us / 1000.0);
	}
	else if (__tmp > 255)
     a0c:	20 e0       	ldi	r18, 0x00	; 0
     a0e:	30 e0       	ldi	r19, 0x00	; 0
     a10:	4f e7       	ldi	r20, 0x7F	; 127
     a12:	53 e4       	ldi	r21, 0x43	; 67
     a14:	6d 85       	ldd	r22, Y+13	; 0x0d
     a16:	7e 85       	ldd	r23, Y+14	; 0x0e
     a18:	8f 85       	ldd	r24, Y+15	; 0x0f
     a1a:	98 89       	ldd	r25, Y+16	; 0x10
     a1c:	0e 94 fd 12 	call	0x25fa	; 0x25fa <__gesf2>
     a20:	18 16       	cp	r1, r24
     a22:	ac f4       	brge	.+42     	; 0xa4e <tone+0x286>
	{
		uint16_t __ticks=(uint16_t)__tmp2;
     a24:	69 89       	ldd	r22, Y+17	; 0x11
     a26:	7a 89       	ldd	r23, Y+18	; 0x12
     a28:	8b 89       	ldd	r24, Y+19	; 0x13
     a2a:	9c 89       	ldd	r25, Y+20	; 0x14
     a2c:	0e 94 59 12 	call	0x24b2	; 0x24b2 <__fixunssfsi>
     a30:	dc 01       	movw	r26, r24
     a32:	cb 01       	movw	r24, r22
     a34:	9d a3       	std	Y+37, r25	; 0x25
     a36:	8c a3       	std	Y+36, r24	; 0x24
     a38:	8c a1       	ldd	r24, Y+36	; 0x24
     a3a:	9d a1       	ldd	r25, Y+37	; 0x25
     a3c:	9f a3       	std	Y+39, r25	; 0x27
     a3e:	8e a3       	std	Y+38, r24	; 0x26
     a40:	8e a1       	ldd	r24, Y+38	; 0x26
     a42:	9f a1       	ldd	r25, Y+39	; 0x27
     a44:	01 97       	sbiw	r24, 0x01	; 1
     a46:	f1 f7       	brne	.-4      	; 0xa44 <tone+0x27c>
     a48:	9f a3       	std	Y+39, r25	; 0x27
     a4a:	8e a3       	std	Y+38, r24	; 0x26
     a4c:	0f c0       	rjmp	.+30     	; 0xa6c <tone+0x2a4>
		_delay_loop_2(__ticks);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
     a4e:	6d 85       	ldd	r22, Y+13	; 0x0d
     a50:	7e 85       	ldd	r23, Y+14	; 0x0e
     a52:	8f 85       	ldd	r24, Y+15	; 0x0f
     a54:	98 89       	ldd	r25, Y+16	; 0x10
     a56:	0e 94 59 12 	call	0x24b2	; 0x24b2 <__fixunssfsi>
     a5a:	dc 01       	movw	r26, r24
     a5c:	cb 01       	movw	r24, r22
     a5e:	8d 8b       	std	Y+21, r24	; 0x15
     a60:	8d 89       	ldd	r24, Y+21	; 0x15
     a62:	88 a7       	std	Y+40, r24	; 0x28
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
     a64:	88 a5       	ldd	r24, Y+40	; 0x28
     a66:	8a 95       	dec	r24
     a68:	f1 f7       	brne	.-4      	; 0xa66 <tone+0x29e>
     a6a:	88 a7       	std	Y+40, r24	; 0x28
	duration = duration * 100;

	while (duration) {
		int i = interval;
		clear_output_bit(IO_AUDIO);
		while (duration && i) {
     a6c:	ce 01       	movw	r24, r28
     a6e:	89 5b       	subi	r24, 0xB9	; 185
     a70:	9f 4f       	sbci	r25, 0xFF	; 255
     a72:	fc 01       	movw	r30, r24
     a74:	80 81       	ld	r24, Z
     a76:	91 81       	ldd	r25, Z+1	; 0x01
     a78:	89 2b       	or	r24, r25
     a7a:	29 f0       	breq	.+10     	; 0xa86 <tone+0x2be>
     a7c:	89 81       	ldd	r24, Y+1	; 0x01
     a7e:	9a 81       	ldd	r25, Y+2	; 0x02
     a80:	89 2b       	or	r24, r25
     a82:	09 f0       	breq	.+2      	; 0xa86 <tone+0x2be>
     a84:	f1 ce       	rjmp	.-542    	; 0x868 <tone+0xa0>
			duration--;
			i--;
			delay_us(10);
		}
		i = interval;
     a86:	8b 81       	ldd	r24, Y+3	; 0x03
     a88:	9c 81       	ldd	r25, Y+4	; 0x04
     a8a:	9a 83       	std	Y+2, r25	; 0x02
     a8c:	89 83       	std	Y+1, r24	; 0x01
		set_output_bit(IO_AUDIO);
     a8e:	88 e3       	ldi	r24, 0x38	; 56
     a90:	90 e0       	ldi	r25, 0x00	; 0
     a92:	28 e3       	ldi	r18, 0x38	; 56
     a94:	30 e0       	ldi	r19, 0x00	; 0
     a96:	f9 01       	movw	r30, r18
     a98:	20 81       	ld	r18, Z
     a9a:	20 61       	ori	r18, 0x10	; 16
     a9c:	fc 01       	movw	r30, r24
     a9e:	20 83       	st	Z, r18
		while (duration && i) {
     aa0:	23 c1       	rjmp	.+582    	; 0xce8 <tone+0x520>
			duration--;
     aa2:	ce 01       	movw	r24, r28
     aa4:	89 5b       	subi	r24, 0xB9	; 185
     aa6:	9f 4f       	sbci	r25, 0xFF	; 255
     aa8:	9e 01       	movw	r18, r28
     aaa:	29 5b       	subi	r18, 0xB9	; 185
     aac:	3f 4f       	sbci	r19, 0xFF	; 255
     aae:	f9 01       	movw	r30, r18
     ab0:	20 81       	ld	r18, Z
     ab2:	31 81       	ldd	r19, Z+1	; 0x01
     ab4:	21 50       	subi	r18, 0x01	; 1
     ab6:	31 09       	sbc	r19, r1
     ab8:	fc 01       	movw	r30, r24
     aba:	31 83       	std	Z+1, r19	; 0x01
     abc:	20 83       	st	Z, r18
			i--;
     abe:	89 81       	ldd	r24, Y+1	; 0x01
     ac0:	9a 81       	ldd	r25, Y+2	; 0x02
     ac2:	01 97       	sbiw	r24, 0x01	; 1
     ac4:	9a 83       	std	Y+2, r25	; 0x02
     ac6:	89 83       	std	Y+1, r24	; 0x01
     ac8:	80 e0       	ldi	r24, 0x00	; 0
     aca:	90 e0       	ldi	r25, 0x00	; 0
     acc:	a0 e2       	ldi	r26, 0x20	; 32
     ace:	b1 e4       	ldi	r27, 0x41	; 65
     ad0:	8d 83       	std	Y+5, r24	; 0x05
     ad2:	9e 83       	std	Y+6, r25	; 0x06
     ad4:	af 83       	std	Y+7, r26	; 0x07
     ad6:	b8 87       	std	Y+8, r27	; 0x08
	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint8_t __ticks;
	double __tmp2 ;
	__tmp = ((F_CPU) / 3e6) * __us;
     ad8:	2b ea       	ldi	r18, 0xAB	; 171
     ada:	3a ea       	ldi	r19, 0xAA	; 170
     adc:	4a ea       	ldi	r20, 0xAA	; 170
     ade:	50 e4       	ldi	r21, 0x40	; 64
     ae0:	6d 81       	ldd	r22, Y+5	; 0x05
     ae2:	7e 81       	ldd	r23, Y+6	; 0x06
     ae4:	8f 81       	ldd	r24, Y+7	; 0x07
     ae6:	98 85       	ldd	r25, Y+8	; 0x08
     ae8:	0e 94 02 13 	call	0x2604	; 0x2604 <__mulsf3>
     aec:	dc 01       	movw	r26, r24
     aee:	cb 01       	movw	r24, r22
     af0:	89 a7       	std	Y+41, r24	; 0x29
     af2:	9a a7       	std	Y+42, r25	; 0x2a
     af4:	ab a7       	std	Y+43, r26	; 0x2b
     af6:	bc a7       	std	Y+44, r27	; 0x2c
	__tmp2 = ((F_CPU) / 4e6) * __us;
     af8:	20 e0       	ldi	r18, 0x00	; 0
     afa:	30 e0       	ldi	r19, 0x00	; 0
     afc:	40 e8       	ldi	r20, 0x80	; 128
     afe:	50 e4       	ldi	r21, 0x40	; 64
     b00:	6d 81       	ldd	r22, Y+5	; 0x05
     b02:	7e 81       	ldd	r23, Y+6	; 0x06
     b04:	8f 81       	ldd	r24, Y+7	; 0x07
     b06:	98 85       	ldd	r25, Y+8	; 0x08
     b08:	0e 94 02 13 	call	0x2604	; 0x2604 <__mulsf3>
     b0c:	dc 01       	movw	r26, r24
     b0e:	cb 01       	movw	r24, r22
     b10:	8d a7       	std	Y+45, r24	; 0x2d
     b12:	9e a7       	std	Y+46, r25	; 0x2e
     b14:	af a7       	std	Y+47, r26	; 0x2f
     b16:	b8 ab       	std	Y+48, r27	; 0x30
	if (__tmp < 1.0)
     b18:	20 e0       	ldi	r18, 0x00	; 0
     b1a:	30 e0       	ldi	r19, 0x00	; 0
     b1c:	40 e8       	ldi	r20, 0x80	; 128
     b1e:	5f e3       	ldi	r21, 0x3F	; 63
     b20:	69 a5       	ldd	r22, Y+41	; 0x29
     b22:	7a a5       	ldd	r23, Y+42	; 0x2a
     b24:	8b a5       	ldd	r24, Y+43	; 0x2b
     b26:	9c a5       	ldd	r25, Y+44	; 0x2c
     b28:	0e 94 e2 11 	call	0x23c4	; 0x23c4 <__cmpsf2>
     b2c:	88 23       	and	r24, r24
     b2e:	1c f4       	brge	.+6      	; 0xb36 <tone+0x36e>
		__ticks = 1;
     b30:	81 e0       	ldi	r24, 0x01	; 1
     b32:	89 ab       	std	Y+49, r24	; 0x31
     b34:	c6 c0       	rjmp	.+396    	; 0xcc2 <tone+0x4fa>
	else if (__tmp2 > 65535)
     b36:	20 e0       	ldi	r18, 0x00	; 0
     b38:	3f ef       	ldi	r19, 0xFF	; 255
     b3a:	4f e7       	ldi	r20, 0x7F	; 127
     b3c:	57 e4       	ldi	r21, 0x47	; 71
     b3e:	6d a5       	ldd	r22, Y+45	; 0x2d
     b40:	7e a5       	ldd	r23, Y+46	; 0x2e
     b42:	8f a5       	ldd	r24, Y+47	; 0x2f
     b44:	98 a9       	ldd	r25, Y+48	; 0x30
     b46:	0e 94 fd 12 	call	0x25fa	; 0x25fa <__gesf2>
     b4a:	18 16       	cp	r1, r24
     b4c:	0c f0       	brlt	.+2      	; 0xb50 <tone+0x388>
     b4e:	7b c0       	rjmp	.+246    	; 0xc46 <tone+0x47e>
	{
		_delay_ms(__us / 1000.0);
     b50:	20 e0       	ldi	r18, 0x00	; 0
     b52:	30 e0       	ldi	r19, 0x00	; 0
     b54:	4a e7       	ldi	r20, 0x7A	; 122
     b56:	54 e4       	ldi	r21, 0x44	; 68
     b58:	6d 81       	ldd	r22, Y+5	; 0x05
     b5a:	7e 81       	ldd	r23, Y+6	; 0x06
     b5c:	8f 81       	ldd	r24, Y+7	; 0x07
     b5e:	98 85       	ldd	r25, Y+8	; 0x08
     b60:	0e 94 e7 11 	call	0x23ce	; 0x23ce <__divsf3>
     b64:	dc 01       	movw	r26, r24
     b66:	cb 01       	movw	r24, r22
     b68:	8a ab       	std	Y+50, r24	; 0x32
     b6a:	9b ab       	std	Y+51, r25	; 0x33
     b6c:	ac ab       	std	Y+52, r26	; 0x34
     b6e:	bd ab       	std	Y+53, r27	; 0x35

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     b70:	20 e0       	ldi	r18, 0x00	; 0
     b72:	30 e0       	ldi	r19, 0x00	; 0
     b74:	4a e7       	ldi	r20, 0x7A	; 122
     b76:	55 e4       	ldi	r21, 0x45	; 69
     b78:	6a a9       	ldd	r22, Y+50	; 0x32
     b7a:	7b a9       	ldd	r23, Y+51	; 0x33
     b7c:	8c a9       	ldd	r24, Y+52	; 0x34
     b7e:	9d a9       	ldd	r25, Y+53	; 0x35
     b80:	0e 94 02 13 	call	0x2604	; 0x2604 <__mulsf3>
     b84:	dc 01       	movw	r26, r24
     b86:	cb 01       	movw	r24, r22
     b88:	8e ab       	std	Y+54, r24	; 0x36
     b8a:	9f ab       	std	Y+55, r25	; 0x37
     b8c:	a8 af       	std	Y+56, r26	; 0x38
     b8e:	b9 af       	std	Y+57, r27	; 0x39
	if (__tmp < 1.0)
     b90:	20 e0       	ldi	r18, 0x00	; 0
     b92:	30 e0       	ldi	r19, 0x00	; 0
     b94:	40 e8       	ldi	r20, 0x80	; 128
     b96:	5f e3       	ldi	r21, 0x3F	; 63
     b98:	6e a9       	ldd	r22, Y+54	; 0x36
     b9a:	7f a9       	ldd	r23, Y+55	; 0x37
     b9c:	88 ad       	ldd	r24, Y+56	; 0x38
     b9e:	99 ad       	ldd	r25, Y+57	; 0x39
     ba0:	0e 94 e2 11 	call	0x23c4	; 0x23c4 <__cmpsf2>
     ba4:	88 23       	and	r24, r24
     ba6:	2c f4       	brge	.+10     	; 0xbb2 <tone+0x3ea>
		__ticks = 1;
     ba8:	81 e0       	ldi	r24, 0x01	; 1
     baa:	90 e0       	ldi	r25, 0x00	; 0
     bac:	9b af       	std	Y+59, r25	; 0x3b
     bae:	8a af       	std	Y+58, r24	; 0x3a
     bb0:	3f c0       	rjmp	.+126    	; 0xc30 <tone+0x468>
	else if (__tmp > 65535)
     bb2:	20 e0       	ldi	r18, 0x00	; 0
     bb4:	3f ef       	ldi	r19, 0xFF	; 255
     bb6:	4f e7       	ldi	r20, 0x7F	; 127
     bb8:	57 e4       	ldi	r21, 0x47	; 71
     bba:	6e a9       	ldd	r22, Y+54	; 0x36
     bbc:	7f a9       	ldd	r23, Y+55	; 0x37
     bbe:	88 ad       	ldd	r24, Y+56	; 0x38
     bc0:	99 ad       	ldd	r25, Y+57	; 0x39
     bc2:	0e 94 fd 12 	call	0x25fa	; 0x25fa <__gesf2>
     bc6:	18 16       	cp	r1, r24
     bc8:	4c f5       	brge	.+82     	; 0xc1c <tone+0x454>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     bca:	20 e0       	ldi	r18, 0x00	; 0
     bcc:	30 e0       	ldi	r19, 0x00	; 0
     bce:	40 e2       	ldi	r20, 0x20	; 32
     bd0:	51 e4       	ldi	r21, 0x41	; 65
     bd2:	6a a9       	ldd	r22, Y+50	; 0x32
     bd4:	7b a9       	ldd	r23, Y+51	; 0x33
     bd6:	8c a9       	ldd	r24, Y+52	; 0x34
     bd8:	9d a9       	ldd	r25, Y+53	; 0x35
     bda:	0e 94 02 13 	call	0x2604	; 0x2604 <__mulsf3>
     bde:	dc 01       	movw	r26, r24
     be0:	cb 01       	movw	r24, r22
     be2:	bc 01       	movw	r22, r24
     be4:	cd 01       	movw	r24, r26
     be6:	0e 94 59 12 	call	0x24b2	; 0x24b2 <__fixunssfsi>
     bea:	dc 01       	movw	r26, r24
     bec:	cb 01       	movw	r24, r22
     bee:	9b af       	std	Y+59, r25	; 0x3b
     bf0:	8a af       	std	Y+58, r24	; 0x3a
     bf2:	0f c0       	rjmp	.+30     	; 0xc12 <tone+0x44a>
     bf4:	80 e9       	ldi	r24, 0x90	; 144
     bf6:	91 e0       	ldi	r25, 0x01	; 1
     bf8:	9d af       	std	Y+61, r25	; 0x3d
     bfa:	8c af       	std	Y+60, r24	; 0x3c
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     bfc:	8c ad       	ldd	r24, Y+60	; 0x3c
     bfe:	9d ad       	ldd	r25, Y+61	; 0x3d
     c00:	01 97       	sbiw	r24, 0x01	; 1
     c02:	f1 f7       	brne	.-4      	; 0xc00 <tone+0x438>
     c04:	9d af       	std	Y+61, r25	; 0x3d
     c06:	8c af       	std	Y+60, r24	; 0x3c
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     c08:	8a ad       	ldd	r24, Y+58	; 0x3a
     c0a:	9b ad       	ldd	r25, Y+59	; 0x3b
     c0c:	01 97       	sbiw	r24, 0x01	; 1
     c0e:	9b af       	std	Y+59, r25	; 0x3b
     c10:	8a af       	std	Y+58, r24	; 0x3a
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     c12:	8a ad       	ldd	r24, Y+58	; 0x3a
     c14:	9b ad       	ldd	r25, Y+59	; 0x3b
     c16:	89 2b       	or	r24, r25
     c18:	69 f7       	brne	.-38     	; 0xbf4 <tone+0x42c>
     c1a:	53 c0       	rjmp	.+166    	; 0xcc2 <tone+0x4fa>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     c1c:	6e a9       	ldd	r22, Y+54	; 0x36
     c1e:	7f a9       	ldd	r23, Y+55	; 0x37
     c20:	88 ad       	ldd	r24, Y+56	; 0x38
     c22:	99 ad       	ldd	r25, Y+57	; 0x39
     c24:	0e 94 59 12 	call	0x24b2	; 0x24b2 <__fixunssfsi>
     c28:	dc 01       	movw	r26, r24
     c2a:	cb 01       	movw	r24, r22
     c2c:	9b af       	std	Y+59, r25	; 0x3b
     c2e:	8a af       	std	Y+58, r24	; 0x3a
     c30:	8a ad       	ldd	r24, Y+58	; 0x3a
     c32:	9b ad       	ldd	r25, Y+59	; 0x3b
     c34:	9f af       	std	Y+63, r25	; 0x3f
     c36:	8e af       	std	Y+62, r24	; 0x3e
     c38:	8e ad       	ldd	r24, Y+62	; 0x3e
     c3a:	9f ad       	ldd	r25, Y+63	; 0x3f
     c3c:	01 97       	sbiw	r24, 0x01	; 1
     c3e:	f1 f7       	brne	.-4      	; 0xc3c <tone+0x474>
     c40:	9f af       	std	Y+63, r25	; 0x3f
     c42:	8e af       	std	Y+62, r24	; 0x3e
     c44:	3e c0       	rjmp	.+124    	; 0xcc2 <tone+0x4fa>
		__ticks = 1;
	else if (__tmp2 > 65535)
	{
		_delay_ms(__us / 1000.0);
	}
	else if (__tmp > 255)
     c46:	20 e0       	ldi	r18, 0x00	; 0
     c48:	30 e0       	ldi	r19, 0x00	; 0
     c4a:	4f e7       	ldi	r20, 0x7F	; 127
     c4c:	53 e4       	ldi	r21, 0x43	; 67
     c4e:	69 a5       	ldd	r22, Y+41	; 0x29
     c50:	7a a5       	ldd	r23, Y+42	; 0x2a
     c52:	8b a5       	ldd	r24, Y+43	; 0x2b
     c54:	9c a5       	ldd	r25, Y+44	; 0x2c
     c56:	0e 94 fd 12 	call	0x25fa	; 0x25fa <__gesf2>
     c5a:	18 16       	cp	r1, r24
     c5c:	4c f5       	brge	.+82     	; 0xcb0 <tone+0x4e8>
	{
		uint16_t __ticks=(uint16_t)__tmp2;
     c5e:	8e 01       	movw	r16, r28
     c60:	00 5c       	subi	r16, 0xC0	; 192
     c62:	1f 4f       	sbci	r17, 0xFF	; 255
     c64:	6d a5       	ldd	r22, Y+45	; 0x2d
     c66:	7e a5       	ldd	r23, Y+46	; 0x2e
     c68:	8f a5       	ldd	r24, Y+47	; 0x2f
     c6a:	98 a9       	ldd	r25, Y+48	; 0x30
     c6c:	0e 94 59 12 	call	0x24b2	; 0x24b2 <__fixunssfsi>
     c70:	dc 01       	movw	r26, r24
     c72:	cb 01       	movw	r24, r22
     c74:	f8 01       	movw	r30, r16
     c76:	91 83       	std	Z+1, r25	; 0x01
     c78:	80 83       	st	Z, r24
     c7a:	ce 01       	movw	r24, r28
     c7c:	8e 5b       	subi	r24, 0xBE	; 190
     c7e:	9f 4f       	sbci	r25, 0xFF	; 255
     c80:	9e 01       	movw	r18, r28
     c82:	20 5c       	subi	r18, 0xC0	; 192
     c84:	3f 4f       	sbci	r19, 0xFF	; 255
     c86:	f9 01       	movw	r30, r18
     c88:	20 81       	ld	r18, Z
     c8a:	31 81       	ldd	r19, Z+1	; 0x01
     c8c:	fc 01       	movw	r30, r24
     c8e:	31 83       	std	Z+1, r19	; 0x01
     c90:	20 83       	st	Z, r18
     c92:	ce 01       	movw	r24, r28
     c94:	8e 5b       	subi	r24, 0xBE	; 190
     c96:	9f 4f       	sbci	r25, 0xFF	; 255
     c98:	fc 01       	movw	r30, r24
     c9a:	80 81       	ld	r24, Z
     c9c:	91 81       	ldd	r25, Z+1	; 0x01
     c9e:	01 97       	sbiw	r24, 0x01	; 1
     ca0:	f1 f7       	brne	.-4      	; 0xc9e <tone+0x4d6>
     ca2:	9e 01       	movw	r18, r28
     ca4:	2e 5b       	subi	r18, 0xBE	; 190
     ca6:	3f 4f       	sbci	r19, 0xFF	; 255
     ca8:	f9 01       	movw	r30, r18
     caa:	91 83       	std	Z+1, r25	; 0x01
     cac:	80 83       	st	Z, r24
     cae:	1c c0       	rjmp	.+56     	; 0xce8 <tone+0x520>
		_delay_loop_2(__ticks);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
     cb0:	69 a5       	ldd	r22, Y+41	; 0x29
     cb2:	7a a5       	ldd	r23, Y+42	; 0x2a
     cb4:	8b a5       	ldd	r24, Y+43	; 0x2b
     cb6:	9c a5       	ldd	r25, Y+44	; 0x2c
     cb8:	0e 94 59 12 	call	0x24b2	; 0x24b2 <__fixunssfsi>
     cbc:	dc 01       	movw	r26, r24
     cbe:	cb 01       	movw	r24, r22
     cc0:	89 ab       	std	Y+49, r24	; 0x31
     cc2:	ce 01       	movw	r24, r28
     cc4:	8c 5b       	subi	r24, 0xBC	; 188
     cc6:	9f 4f       	sbci	r25, 0xFF	; 255
     cc8:	29 a9       	ldd	r18, Y+49	; 0x31
     cca:	fc 01       	movw	r30, r24
     ccc:	20 83       	st	Z, r18
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
     cce:	ce 01       	movw	r24, r28
     cd0:	8c 5b       	subi	r24, 0xBC	; 188
     cd2:	9f 4f       	sbci	r25, 0xFF	; 255
     cd4:	fc 01       	movw	r30, r24
     cd6:	80 81       	ld	r24, Z
     cd8:	28 2f       	mov	r18, r24
     cda:	2a 95       	dec	r18
     cdc:	f1 f7       	brne	.-4      	; 0xcda <tone+0x512>
     cde:	ce 01       	movw	r24, r28
     ce0:	8c 5b       	subi	r24, 0xBC	; 188
     ce2:	9f 4f       	sbci	r25, 0xFF	; 255
     ce4:	fc 01       	movw	r30, r24
     ce6:	20 83       	st	Z, r18
			i--;
			delay_us(10);
		}
		i = interval;
		set_output_bit(IO_AUDIO);
		while (duration && i) {
     ce8:	ce 01       	movw	r24, r28
     cea:	89 5b       	subi	r24, 0xB9	; 185
     cec:	9f 4f       	sbci	r25, 0xFF	; 255
     cee:	fc 01       	movw	r30, r24
     cf0:	80 81       	ld	r24, Z
     cf2:	91 81       	ldd	r25, Z+1	; 0x01
     cf4:	89 2b       	or	r24, r25
     cf6:	29 f0       	breq	.+10     	; 0xd02 <tone+0x53a>
     cf8:	89 81       	ldd	r24, Y+1	; 0x01
     cfa:	9a 81       	ldd	r25, Y+2	; 0x02
     cfc:	89 2b       	or	r24, r25
     cfe:	09 f0       	breq	.+2      	; 0xd02 <tone+0x53a>
     d00:	d0 ce       	rjmp	.-608    	; 0xaa2 <tone+0x2da>
//from HelloSound
int tone(int frequency, int duration) {
	int interval = (50000 / frequency);
	duration = duration * 100;

	while (duration) {
     d02:	ce 01       	movw	r24, r28
     d04:	89 5b       	subi	r24, 0xB9	; 185
     d06:	9f 4f       	sbci	r25, 0xFF	; 255
     d08:	fc 01       	movw	r30, r24
     d0a:	80 81       	ld	r24, Z
     d0c:	91 81       	ldd	r25, Z+1	; 0x01
     d0e:	89 2b       	or	r24, r25
     d10:	09 f0       	breq	.+2      	; 0xd14 <tone+0x54c>
     d12:	9c cd       	rjmp	.-1224   	; 0x84c <tone+0x84>
			delay_us(10);
		}

	}

	return 1;
     d14:	81 e0       	ldi	r24, 0x01	; 1
     d16:	90 e0       	ldi	r25, 0x00	; 0
}
     d18:	c8 5b       	subi	r28, 0xB8	; 184
     d1a:	df 4f       	sbci	r29, 0xFF	; 255
     d1c:	0f b6       	in	r0, 0x3f	; 63
     d1e:	f8 94       	cli
     d20:	de bf       	out	0x3e, r29	; 62
     d22:	0f be       	out	0x3f, r0	; 63
     d24:	cd bf       	out	0x3d, r28	; 61
     d26:	df 91       	pop	r29
     d28:	cf 91       	pop	r28
     d2a:	1f 91       	pop	r17
     d2c:	0f 91       	pop	r16
     d2e:	08 95       	ret

00000d30 <start>:




void start(){
     d30:	cf 93       	push	r28
     d32:	df 93       	push	r29
     d34:	00 d0       	rcall	.+0      	; 0xd36 <start+0x6>
     d36:	00 d0       	rcall	.+0      	; 0xd38 <start+0x8>
     d38:	00 d0       	rcall	.+0      	; 0xd3a <start+0xa>
     d3a:	cd b7       	in	r28, 0x3d	; 61
     d3c:	de b7       	in	r29, 0x3e	; 62
	int led1=2;
     d3e:	82 e0       	ldi	r24, 0x02	; 2
     d40:	90 e0       	ldi	r25, 0x00	; 0
     d42:	9a 83       	std	Y+2, r25	; 0x02
     d44:	89 83       	std	Y+1, r24	; 0x01
	int led2=7;
     d46:	87 e0       	ldi	r24, 0x07	; 7
     d48:	90 e0       	ldi	r25, 0x00	; 0
     d4a:	9c 83       	std	Y+4, r25	; 0x04
     d4c:	8b 83       	std	Y+3, r24	; 0x03

	leds_set_headlights(250);
     d4e:	8a ef       	ldi	r24, 0xFA	; 250
     d50:	90 e0       	ldi	r25, 0x00	; 0
     d52:	0e 94 72 11 	call	0x22e4	; 0x22e4 <leds_set_headlights>

	gfx_move(4, 0);
     d56:	60 e0       	ldi	r22, 0x00	; 0
     d58:	84 e0       	ldi	r24, 0x04	; 4
     d5a:	0e 94 3b 0a 	call	0x1476	; 0x1476 <gfx_move>
	gfx_print_text("To start the program,");
     d5e:	88 e2       	ldi	r24, 0x28	; 40
     d60:	91 e0       	ldi	r25, 0x01	; 1
     d62:	0e 94 a5 0b 	call	0x174a	; 0x174a <gfx_print_text>
	gfx_move(4, 13);
     d66:	6d e0       	ldi	r22, 0x0D	; 13
     d68:	84 e0       	ldi	r24, 0x04	; 4
     d6a:	0e 94 3b 0a 	call	0x1476	; 0x1476 <gfx_move>
	gfx_print_text("Press the S3 button");
     d6e:	8e e3       	ldi	r24, 0x3E	; 62
     d70:	91 e0       	ldi	r25, 0x01	; 1
     d72:	0e 94 a5 0b 	call	0x174a	; 0x174a <gfx_print_text>
	gfx_move(50, 23);
     d76:	67 e1       	ldi	r22, 0x17	; 23
     d78:	82 e3       	ldi	r24, 0x32	; 50
     d7a:	0e 94 3b 0a 	call	0x1476	; 0x1476 <gfx_move>
	gfx_print_text("----->");
     d7e:	82 e5       	ldi	r24, 0x52	; 82
     d80:	91 e0       	ldi	r25, 0x01	; 1
     d82:	0e 94 a5 0b 	call	0x174a	; 0x174a <gfx_print_text>

	gfx_move(4, 35);
     d86:	63 e2       	ldi	r22, 0x23	; 35
     d88:	84 e0       	ldi	r24, 0x04	; 4
     d8a:	0e 94 3b 0a 	call	0x1476	; 0x1476 <gfx_move>
	gfx_print_text("To stop the program");
     d8e:	89 e5       	ldi	r24, 0x59	; 89
     d90:	91 e0       	ldi	r25, 0x01	; 1
     d92:	0e 94 a5 0b 	call	0x174a	; 0x174a <gfx_print_text>
	gfx_move(4, 48);
     d96:	60 e3       	ldi	r22, 0x30	; 48
     d98:	84 e0       	ldi	r24, 0x04	; 4
     d9a:	0e 94 3b 0a 	call	0x1476	; 0x1476 <gfx_move>
	gfx_print_text("Press the S2 button");
     d9e:	8d e6       	ldi	r24, 0x6D	; 109
     da0:	91 e0       	ldi	r25, 0x01	; 1
     da2:	0e 94 a5 0b 	call	0x174a	; 0x174a <gfx_print_text>
	gfx_move(50, 55);
     da6:	67 e3       	ldi	r22, 0x37	; 55
     da8:	82 e3       	ldi	r24, 0x32	; 50
     daa:	0e 94 3b 0a 	call	0x1476	; 0x1476 <gfx_move>
	gfx_print_text("<-----");
     dae:	81 e8       	ldi	r24, 0x81	; 129
     db0:	91 e0       	ldi	r25, 0x01	; 1
     db2:	0e 94 a5 0b 	call	0x174a	; 0x174a <gfx_print_text>

	deactivate_output_bit(IO_INPUT_1);
     db6:	81 e3       	ldi	r24, 0x31	; 49
     db8:	90 e0       	ldi	r25, 0x00	; 0
     dba:	21 e3       	ldi	r18, 0x31	; 49
     dbc:	30 e0       	ldi	r19, 0x00	; 0
     dbe:	f9 01       	movw	r30, r18
     dc0:	20 81       	ld	r18, Z
     dc2:	2f 7e       	andi	r18, 0xEF	; 239
     dc4:	fc 01       	movw	r30, r24
     dc6:	20 83       	st	Z, r18
	while(get_input_bit(IO_INPUT_1)){
     dc8:	00 00       	nop
     dca:	80 e3       	ldi	r24, 0x30	; 48
     dcc:	90 e0       	ldi	r25, 0x00	; 0
     dce:	fc 01       	movw	r30, r24
     dd0:	80 81       	ld	r24, Z
     dd2:	88 2f       	mov	r24, r24
     dd4:	90 e0       	ldi	r25, 0x00	; 0
     dd6:	80 71       	andi	r24, 0x10	; 16
     dd8:	99 27       	eor	r25, r25
     dda:	89 2b       	or	r24, r25
     ddc:	b1 f7       	brne	.-20     	; 0xdca <start+0x9a>
	}

	if (!get_input_bit(IO_INPUT_1))
     dde:	80 e3       	ldi	r24, 0x30	; 48
     de0:	90 e0       	ldi	r25, 0x00	; 0
     de2:	fc 01       	movw	r30, r24
     de4:	80 81       	ld	r24, Z
     de6:	88 2f       	mov	r24, r24
     de8:	90 e0       	ldi	r25, 0x00	; 0
     dea:	80 71       	andi	r24, 0x10	; 16
     dec:	99 27       	eor	r25, r25
     dee:	89 2b       	or	r24, r25
     df0:	09 f0       	breq	.+2      	; 0xdf4 <start+0xc4>
     df2:	6a c0       	rjmp	.+212    	; 0xec8 <start+0x198>
	{
		delay(800);
     df4:	80 e2       	ldi	r24, 0x20	; 32
     df6:	93 e0       	ldi	r25, 0x03	; 3
     df8:	0e 94 27 09 	call	0x124e	; 0x124e <delay>
		for(int i=4; i>0; i--){
     dfc:	84 e0       	ldi	r24, 0x04	; 4
     dfe:	90 e0       	ldi	r25, 0x00	; 0
     e00:	9e 83       	std	Y+6, r25	; 0x06
     e02:	8d 83       	std	Y+5, r24	; 0x05
     e04:	5b c0       	rjmp	.+182    	; 0xebc <start+0x18c>
			if(i>1){
     e06:	8d 81       	ldd	r24, Y+5	; 0x05
     e08:	9e 81       	ldd	r25, Y+6	; 0x06
     e0a:	02 97       	sbiw	r24, 0x02	; 2
     e0c:	c4 f1       	brlt	.+112    	; 0xe7e <start+0x14e>
				sprintf("Flag stop: %d", led1);
     e0e:	89 81       	ldd	r24, Y+1	; 0x01
     e10:	9a 81       	ldd	r25, Y+2	; 0x02
     e12:	29 2f       	mov	r18, r25
     e14:	2f 93       	push	r18
     e16:	8f 93       	push	r24
     e18:	88 e8       	ldi	r24, 0x88	; 136
     e1a:	91 e0       	ldi	r25, 0x01	; 1
     e1c:	89 2f       	mov	r24, r25
     e1e:	8f 93       	push	r24
     e20:	88 e8       	ldi	r24, 0x88	; 136
     e22:	91 e0       	ldi	r25, 0x01	; 1
     e24:	8f 93       	push	r24
     e26:	0e 94 b0 13 	call	0x2760	; 0x2760 <sprintf>
     e2a:	0f 90       	pop	r0
     e2c:	0f 90       	pop	r0
     e2e:	0f 90       	pop	r0
     e30:	0f 90       	pop	r0
				leds_set_status(LEDS_RED, led1);
     e32:	89 81       	ldd	r24, Y+1	; 0x01
     e34:	68 2f       	mov	r22, r24
     e36:	82 e0       	ldi	r24, 0x02	; 2
     e38:	0e 94 44 11 	call	0x2288	; 0x2288 <leds_set_status>
				leds_set_status(LEDS_RED, led2);
     e3c:	8b 81       	ldd	r24, Y+3	; 0x03
     e3e:	68 2f       	mov	r22, r24
     e40:	82 e0       	ldi	r24, 0x02	; 2
     e42:	0e 94 44 11 	call	0x2288	; 0x2288 <leds_set_status>
				cli();
     e46:	f8 94       	cli
				tone(392, 100);
     e48:	64 e6       	ldi	r22, 0x64	; 100
     e4a:	70 e0       	ldi	r23, 0x00	; 0
     e4c:	88 e8       	ldi	r24, 0x88	; 136
     e4e:	91 e0       	ldi	r25, 0x01	; 1
     e50:	0e 94 e4 03 	call	0x7c8	; 0x7c8 <tone>
				sei();
     e54:	78 94       	sei
				leds_set_status(LEDS_OFF, led1);
     e56:	89 81       	ldd	r24, Y+1	; 0x01
     e58:	68 2f       	mov	r22, r24
     e5a:	80 e0       	ldi	r24, 0x00	; 0
     e5c:	0e 94 44 11 	call	0x2288	; 0x2288 <leds_set_status>
				leds_set_status(LEDS_OFF, led2);
     e60:	8b 81       	ldd	r24, Y+3	; 0x03
     e62:	68 2f       	mov	r22, r24
     e64:	80 e0       	ldi	r24, 0x00	; 0
     e66:	0e 94 44 11 	call	0x2288	; 0x2288 <leds_set_status>
				led1++;
     e6a:	89 81       	ldd	r24, Y+1	; 0x01
     e6c:	9a 81       	ldd	r25, Y+2	; 0x02
     e6e:	01 96       	adiw	r24, 0x01	; 1
     e70:	9a 83       	std	Y+2, r25	; 0x02
     e72:	89 83       	std	Y+1, r24	; 0x01
				led2--;
     e74:	8b 81       	ldd	r24, Y+3	; 0x03
     e76:	9c 81       	ldd	r25, Y+4	; 0x04
     e78:	01 97       	sbiw	r24, 0x01	; 1
     e7a:	9c 83       	std	Y+4, r25	; 0x04
     e7c:	8b 83       	std	Y+3, r24	; 0x03
			}

			if(i==1){
     e7e:	8d 81       	ldd	r24, Y+5	; 0x05
     e80:	9e 81       	ldd	r25, Y+6	; 0x06
     e82:	01 97       	sbiw	r24, 0x01	; 1
     e84:	91 f4       	brne	.+36     	; 0xeaa <start+0x17a>
				leds_set_status(LEDS_GREEN, led1);
     e86:	89 81       	ldd	r24, Y+1	; 0x01
     e88:	68 2f       	mov	r22, r24
     e8a:	81 e0       	ldi	r24, 0x01	; 1
     e8c:	0e 94 44 11 	call	0x2288	; 0x2288 <leds_set_status>
				leds_set_status(LEDS_GREEN, led2);
     e90:	8b 81       	ldd	r24, Y+3	; 0x03
     e92:	68 2f       	mov	r22, r24
     e94:	81 e0       	ldi	r24, 0x01	; 1
     e96:	0e 94 44 11 	call	0x2288	; 0x2288 <leds_set_status>
				cli();
     e9a:	f8 94       	cli
				tone(800, 100);
     e9c:	64 e6       	ldi	r22, 0x64	; 100
     e9e:	70 e0       	ldi	r23, 0x00	; 0
     ea0:	80 e2       	ldi	r24, 0x20	; 32
     ea2:	93 e0       	ldi	r25, 0x03	; 3
     ea4:	0e 94 e4 03 	call	0x7c8	; 0x7c8 <tone>
				sei();
     ea8:	78 94       	sei
			}
			delay(500);
     eaa:	84 ef       	ldi	r24, 0xF4	; 244
     eac:	91 e0       	ldi	r25, 0x01	; 1
     eae:	0e 94 27 09 	call	0x124e	; 0x124e <delay>
	}

	if (!get_input_bit(IO_INPUT_1))
	{
		delay(800);
		for(int i=4; i>0; i--){
     eb2:	8d 81       	ldd	r24, Y+5	; 0x05
     eb4:	9e 81       	ldd	r25, Y+6	; 0x06
     eb6:	01 97       	sbiw	r24, 0x01	; 1
     eb8:	9e 83       	std	Y+6, r25	; 0x06
     eba:	8d 83       	std	Y+5, r24	; 0x05
     ebc:	8d 81       	ldd	r24, Y+5	; 0x05
     ebe:	9e 81       	ldd	r25, Y+6	; 0x06
     ec0:	18 16       	cp	r1, r24
     ec2:	19 06       	cpc	r1, r25
     ec4:	0c f4       	brge	.+2      	; 0xec8 <start+0x198>
     ec6:	9f cf       	rjmp	.-194    	; 0xe06 <start+0xd6>
				sei();
			}
			delay(500);
		}
	}
}
     ec8:	00 00       	nop
     eca:	26 96       	adiw	r28, 0x06	; 6
     ecc:	0f b6       	in	r0, 0x3f	; 63
     ece:	f8 94       	cli
     ed0:	de bf       	out	0x3e, r29	; 62
     ed2:	0f be       	out	0x3f, r0	; 63
     ed4:	cd bf       	out	0x3d, r28	; 61
     ed6:	df 91       	pop	r29
     ed8:	cf 91       	pop	r28
     eda:	08 95       	ret

00000edc <display_write>:
     edc:	90 91 65 00 	lds	r25, 0x0065	; 0x800065 <__TEXT_REGION_LENGTH__+0x7e0065>
     ee0:	38 2f       	mov	r19, r24
     ee2:	31 70       	andi	r19, 0x01	; 1
     ee4:	29 2f       	mov	r18, r25
     ee6:	2e 7f       	andi	r18, 0xFE	; 254
     ee8:	91 e0       	ldi	r25, 0x01	; 1
     eea:	93 27       	eor	r25, r19
     eec:	92 2b       	or	r25, r18
     eee:	90 93 65 00 	sts	0x0065, r25	; 0x800065 <__TEXT_REGION_LENGTH__+0x7e0065>
     ef2:	90 91 65 00 	lds	r25, 0x0065	; 0x800065 <__TEXT_REGION_LENGTH__+0x7e0065>
     ef6:	9d 7f       	andi	r25, 0xFD	; 253
     ef8:	31 11       	cpse	r19, r1
     efa:	02 c0       	rjmp	.+4      	; 0xf00 <display_write+0x24>
     efc:	20 e0       	ldi	r18, 0x00	; 0
     efe:	01 c0       	rjmp	.+2      	; 0xf02 <display_write+0x26>
     f00:	22 e0       	ldi	r18, 0x02	; 2
     f02:	92 2b       	or	r25, r18
     f04:	90 93 65 00 	sts	0x0065, r25	; 0x800065 <__TEXT_REGION_LENGTH__+0x7e0065>
     f08:	90 91 65 00 	lds	r25, 0x0065	; 0x800065 <__TEXT_REGION_LENGTH__+0x7e0065>
     f0c:	97 7f       	andi	r25, 0xF7	; 247
     f0e:	81 fd       	sbrc	r24, 1
     f10:	02 c0       	rjmp	.+4      	; 0xf16 <display_write+0x3a>
     f12:	80 e0       	ldi	r24, 0x00	; 0
     f14:	01 c0       	rjmp	.+2      	; 0xf18 <display_write+0x3c>
     f16:	88 e0       	ldi	r24, 0x08	; 8
     f18:	89 2b       	or	r24, r25
     f1a:	80 93 65 00 	sts	0x0065, r24	; 0x800065 <__TEXT_REGION_LENGTH__+0x7e0065>
     f1e:	80 91 65 00 	lds	r24, 0x0065	; 0x800065 <__TEXT_REGION_LENGTH__+0x7e0065>
     f22:	8f 7e       	andi	r24, 0xEF	; 239
     f24:	80 93 65 00 	sts	0x0065, r24	; 0x800065 <__TEXT_REGION_LENGTH__+0x7e0065>
     f28:	8f ef       	ldi	r24, 0xFF	; 255
     f2a:	8a bb       	out	0x1a, r24	; 26
     f2c:	6b bb       	out	0x1b, r22	; 27
     f2e:	85 e0       	ldi	r24, 0x05	; 5
     f30:	8a 95       	dec	r24
     f32:	f1 f7       	brne	.-4      	; 0xf30 <display_write+0x54>
     f34:	00 00       	nop
     f36:	80 91 65 00 	lds	r24, 0x0065	; 0x800065 <__TEXT_REGION_LENGTH__+0x7e0065>
     f3a:	84 60       	ori	r24, 0x04	; 4
     f3c:	80 93 65 00 	sts	0x0065, r24	; 0x800065 <__TEXT_REGION_LENGTH__+0x7e0065>
     f40:	85 e0       	ldi	r24, 0x05	; 5
     f42:	8a 95       	dec	r24
     f44:	f1 f7       	brne	.-4      	; 0xf42 <display_write+0x66>
     f46:	00 00       	nop
     f48:	80 91 65 00 	lds	r24, 0x0065	; 0x800065 <__TEXT_REGION_LENGTH__+0x7e0065>
     f4c:	8b 7f       	andi	r24, 0xFB	; 251
     f4e:	80 93 65 00 	sts	0x0065, r24	; 0x800065 <__TEXT_REGION_LENGTH__+0x7e0065>
     f52:	85 e0       	ldi	r24, 0x05	; 5
     f54:	8a 95       	dec	r24
     f56:	f1 f7       	brne	.-4      	; 0xf54 <display_write+0x78>
     f58:	00 00       	nop
     f5a:	1b ba       	out	0x1b, r1	; 27
     f5c:	1a ba       	out	0x1a, r1	; 26
     f5e:	08 95       	ret

00000f60 <display_read>:
     f60:	90 91 65 00 	lds	r25, 0x0065	; 0x800065 <__TEXT_REGION_LENGTH__+0x7e0065>
     f64:	38 2f       	mov	r19, r24
     f66:	31 70       	andi	r19, 0x01	; 1
     f68:	29 2f       	mov	r18, r25
     f6a:	2e 7f       	andi	r18, 0xFE	; 254
     f6c:	91 e0       	ldi	r25, 0x01	; 1
     f6e:	93 27       	eor	r25, r19
     f70:	92 2b       	or	r25, r18
     f72:	90 93 65 00 	sts	0x0065, r25	; 0x800065 <__TEXT_REGION_LENGTH__+0x7e0065>
     f76:	90 91 65 00 	lds	r25, 0x0065	; 0x800065 <__TEXT_REGION_LENGTH__+0x7e0065>
     f7a:	9d 7f       	andi	r25, 0xFD	; 253
     f7c:	31 11       	cpse	r19, r1
     f7e:	02 c0       	rjmp	.+4      	; 0xf84 <display_read+0x24>
     f80:	20 e0       	ldi	r18, 0x00	; 0
     f82:	01 c0       	rjmp	.+2      	; 0xf86 <display_read+0x26>
     f84:	22 e0       	ldi	r18, 0x02	; 2
     f86:	92 2b       	or	r25, r18
     f88:	90 93 65 00 	sts	0x0065, r25	; 0x800065 <__TEXT_REGION_LENGTH__+0x7e0065>
     f8c:	90 91 65 00 	lds	r25, 0x0065	; 0x800065 <__TEXT_REGION_LENGTH__+0x7e0065>
     f90:	97 7f       	andi	r25, 0xF7	; 247
     f92:	81 fd       	sbrc	r24, 1
     f94:	02 c0       	rjmp	.+4      	; 0xf9a <display_read+0x3a>
     f96:	80 e0       	ldi	r24, 0x00	; 0
     f98:	01 c0       	rjmp	.+2      	; 0xf9c <display_read+0x3c>
     f9a:	88 e0       	ldi	r24, 0x08	; 8
     f9c:	89 2b       	or	r24, r25
     f9e:	80 93 65 00 	sts	0x0065, r24	; 0x800065 <__TEXT_REGION_LENGTH__+0x7e0065>
     fa2:	80 91 65 00 	lds	r24, 0x0065	; 0x800065 <__TEXT_REGION_LENGTH__+0x7e0065>
     fa6:	80 61       	ori	r24, 0x10	; 16
     fa8:	80 93 65 00 	sts	0x0065, r24	; 0x800065 <__TEXT_REGION_LENGTH__+0x7e0065>
     fac:	1a ba       	out	0x1a, r1	; 26
     fae:	85 e0       	ldi	r24, 0x05	; 5
     fb0:	8a 95       	dec	r24
     fb2:	f1 f7       	brne	.-4      	; 0xfb0 <display_read+0x50>
     fb4:	00 00       	nop
     fb6:	80 91 65 00 	lds	r24, 0x0065	; 0x800065 <__TEXT_REGION_LENGTH__+0x7e0065>
     fba:	84 60       	ori	r24, 0x04	; 4
     fbc:	80 93 65 00 	sts	0x0065, r24	; 0x800065 <__TEXT_REGION_LENGTH__+0x7e0065>
     fc0:	95 e1       	ldi	r25, 0x15	; 21
     fc2:	9a 95       	dec	r25
     fc4:	f1 f7       	brne	.-4      	; 0xfc2 <display_read+0x62>
     fc6:	00 00       	nop
     fc8:	89 b3       	in	r24, 0x19	; 25
     fca:	90 91 65 00 	lds	r25, 0x0065	; 0x800065 <__TEXT_REGION_LENGTH__+0x7e0065>
     fce:	9b 7f       	andi	r25, 0xFB	; 251
     fd0:	90 93 65 00 	sts	0x0065, r25	; 0x800065 <__TEXT_REGION_LENGTH__+0x7e0065>
     fd4:	95 e0       	ldi	r25, 0x05	; 5
     fd6:	9a 95       	dec	r25
     fd8:	f1 f7       	brne	.-4      	; 0xfd6 <display_read+0x76>
     fda:	00 00       	nop
     fdc:	08 95       	ret

00000fde <display_wait>:
     fde:	0f 93       	push	r16
     fe0:	1f 93       	push	r17
     fe2:	cf 93       	push	r28
     fe4:	90 91 e9 03 	lds	r25, 0x03E9	; 0x8003e9 <display_type>
     fe8:	91 11       	cpse	r25, r1
     fea:	02 c0       	rjmp	.+4      	; 0xff0 <display_wait+0x12>
     fec:	80 e0       	ldi	r24, 0x00	; 0
     fee:	11 c0       	rjmp	.+34     	; 0x1012 <display_wait+0x34>
     ff0:	c8 2f       	mov	r28, r24
     ff2:	c1 70       	andi	r28, 0x01	; 1
     ff4:	00 e0       	ldi	r16, 0x00	; 0
     ff6:	10 e0       	ldi	r17, 0x00	; 0
     ff8:	8c 2f       	mov	r24, r28
     ffa:	0e 94 b0 07 	call	0xf60	; 0xf60 <display_read>
     ffe:	0f 5f       	subi	r16, 0xFF	; 255
    1000:	1f 4f       	sbci	r17, 0xFF	; 255
    1002:	87 ff       	sbrs	r24, 7
    1004:	05 c0       	rjmp	.+10     	; 0x1010 <display_wait+0x32>
    1006:	0f 3f       	cpi	r16, 0xFF	; 255
    1008:	8f ef       	ldi	r24, 0xFF	; 255
    100a:	18 07       	cpc	r17, r24
    100c:	a9 f7       	brne	.-22     	; 0xff8 <display_wait+0x1a>
    100e:	ee cf       	rjmp	.-36     	; 0xfec <display_wait+0xe>
    1010:	81 e0       	ldi	r24, 0x01	; 1
    1012:	cf 91       	pop	r28
    1014:	1f 91       	pop	r17
    1016:	0f 91       	pop	r16
    1018:	08 95       	ret

0000101a <display_init>:
    101a:	8f ef       	ldi	r24, 0xFF	; 255
    101c:	80 93 e9 03 	sts	0x03E9, r24	; 0x8003e9 <display_type>
    1020:	80 91 64 00 	lds	r24, 0x0064	; 0x800064 <__TEXT_REGION_LENGTH__+0x7e0064>
    1024:	88 60       	ori	r24, 0x08	; 8
    1026:	80 93 64 00 	sts	0x0064, r24	; 0x800064 <__TEXT_REGION_LENGTH__+0x7e0064>
    102a:	80 91 64 00 	lds	r24, 0x0064	; 0x800064 <__TEXT_REGION_LENGTH__+0x7e0064>
    102e:	80 61       	ori	r24, 0x10	; 16
    1030:	80 93 64 00 	sts	0x0064, r24	; 0x800064 <__TEXT_REGION_LENGTH__+0x7e0064>
    1034:	80 91 64 00 	lds	r24, 0x0064	; 0x800064 <__TEXT_REGION_LENGTH__+0x7e0064>
    1038:	84 60       	ori	r24, 0x04	; 4
    103a:	80 93 64 00 	sts	0x0064, r24	; 0x800064 <__TEXT_REGION_LENGTH__+0x7e0064>
    103e:	80 91 64 00 	lds	r24, 0x0064	; 0x800064 <__TEXT_REGION_LENGTH__+0x7e0064>
    1042:	81 60       	ori	r24, 0x01	; 1
    1044:	80 93 64 00 	sts	0x0064, r24	; 0x800064 <__TEXT_REGION_LENGTH__+0x7e0064>
    1048:	80 91 64 00 	lds	r24, 0x0064	; 0x800064 <__TEXT_REGION_LENGTH__+0x7e0064>
    104c:	82 60       	ori	r24, 0x02	; 2
    104e:	80 93 64 00 	sts	0x0064, r24	; 0x800064 <__TEXT_REGION_LENGTH__+0x7e0064>
    1052:	b8 9a       	sbi	0x17, 0	; 23
    1054:	1a ba       	out	0x1a, r1	; 26
    1056:	80 91 65 00 	lds	r24, 0x0065	; 0x800065 <__TEXT_REGION_LENGTH__+0x7e0065>
    105a:	87 7f       	andi	r24, 0xF7	; 247
    105c:	80 93 65 00 	sts	0x0065, r24	; 0x800065 <__TEXT_REGION_LENGTH__+0x7e0065>
    1060:	80 91 65 00 	lds	r24, 0x0065	; 0x800065 <__TEXT_REGION_LENGTH__+0x7e0065>
    1064:	8f 7e       	andi	r24, 0xEF	; 239
    1066:	80 93 65 00 	sts	0x0065, r24	; 0x800065 <__TEXT_REGION_LENGTH__+0x7e0065>
    106a:	80 91 65 00 	lds	r24, 0x0065	; 0x800065 <__TEXT_REGION_LENGTH__+0x7e0065>
    106e:	8b 7f       	andi	r24, 0xFB	; 251
    1070:	80 93 65 00 	sts	0x0065, r24	; 0x800065 <__TEXT_REGION_LENGTH__+0x7e0065>
    1074:	80 91 65 00 	lds	r24, 0x0065	; 0x800065 <__TEXT_REGION_LENGTH__+0x7e0065>
    1078:	8e 7f       	andi	r24, 0xFE	; 254
    107a:	80 93 65 00 	sts	0x0065, r24	; 0x800065 <__TEXT_REGION_LENGTH__+0x7e0065>
    107e:	80 91 65 00 	lds	r24, 0x0065	; 0x800065 <__TEXT_REGION_LENGTH__+0x7e0065>
    1082:	8d 7f       	andi	r24, 0xFD	; 253
    1084:	80 93 65 00 	sts	0x0065, r24	; 0x800065 <__TEXT_REGION_LENGTH__+0x7e0065>
    1088:	c0 98       	cbi	0x18, 0	; 24
    108a:	97 9b       	sbis	0x12, 7	; 18
    108c:	09 c0       	rjmp	.+18     	; 0x10a0 <display_init+0x86>
    108e:	97 98       	cbi	0x12, 7	; 18
    1090:	8f e9       	ldi	r24, 0x9F	; 159
    1092:	9f e0       	ldi	r25, 0x0F	; 15
    1094:	01 97       	sbiw	r24, 0x01	; 1
    1096:	f1 f7       	brne	.-4      	; 0x1094 <display_init+0x7a>
    1098:	00 c0       	rjmp	.+0      	; 0x109a <display_init+0x80>
    109a:	00 00       	nop
    109c:	97 9a       	sbi	0x12, 7	; 18
    109e:	06 c0       	rjmp	.+12     	; 0x10ac <display_init+0x92>
    10a0:	8f e9       	ldi	r24, 0x9F	; 159
    10a2:	9f e0       	ldi	r25, 0x0F	; 15
    10a4:	01 97       	sbiw	r24, 0x01	; 1
    10a6:	f1 f7       	brne	.-4      	; 0x10a4 <display_init+0x8a>
    10a8:	00 c0       	rjmp	.+0      	; 0x10aa <display_init+0x90>
    10aa:	00 00       	nop
    10ac:	c0 9a       	sbi	0x18, 0	; 24
    10ae:	80 e0       	ldi	r24, 0x00	; 0
    10b0:	0e 94 ef 07 	call	0xfde	; 0xfde <display_wait>
    10b4:	88 23       	and	r24, r24
    10b6:	51 f0       	breq	.+20     	; 0x10cc <display_init+0xb2>
    10b8:	81 e0       	ldi	r24, 0x01	; 1
    10ba:	0e 94 ef 07 	call	0xfde	; 0xfde <display_wait>
    10be:	88 23       	and	r24, r24
    10c0:	11 f0       	breq	.+4      	; 0x10c6 <display_init+0xac>
    10c2:	82 e0       	ldi	r24, 0x02	; 2
    10c4:	01 c0       	rjmp	.+2      	; 0x10c8 <display_init+0xae>
    10c6:	81 e0       	ldi	r24, 0x01	; 1
    10c8:	80 93 e9 03 	sts	0x03E9, r24	; 0x8003e9 <display_type>
    10cc:	80 91 e9 03 	lds	r24, 0x03E9	; 0x8003e9 <display_type>
    10d0:	8f 3f       	cpi	r24, 0xFF	; 255
    10d2:	11 f4       	brne	.+4      	; 0x10d8 <display_init+0xbe>
    10d4:	10 92 e9 03 	sts	0x03E9, r1	; 0x8003e9 <display_type>
    10d8:	80 91 e9 03 	lds	r24, 0x03E9	; 0x8003e9 <display_type>
    10dc:	08 95       	ret

000010de <pwm_init>:
    10de:	10 92 f3 03 	sts	0x03F3, r1	; 0x8003f3 <pwm_timer_sub+0x1>
    10e2:	10 92 f2 03 	sts	0x03F2, r1	; 0x8003f2 <pwm_timer_sub>
    10e6:	10 92 ef 03 	sts	0x03EF, r1	; 0x8003ef <pwm_timer_ms+0x1>
    10ea:	10 92 ee 03 	sts	0x03EE, r1	; 0x8003ee <pwm_timer_ms>
    10ee:	10 92 f4 03 	sts	0x03F4, r1	; 0x8003f4 <pwm_timer_sec>
    10f2:	10 92 f5 03 	sts	0x03F5, r1	; 0x8003f5 <pwm_timer_sec+0x1>
    10f6:	10 92 f6 03 	sts	0x03F6, r1	; 0x8003f6 <pwm_timer_sec+0x2>
    10fa:	10 92 f7 03 	sts	0x03F7, r1	; 0x8003f7 <pwm_timer_sec+0x3>
    10fe:	10 92 eb 03 	sts	0x03EB, r1	; 0x8003eb <pwm_channel_A+0x1>
    1102:	10 92 ea 03 	sts	0x03EA, r1	; 0x8003ea <pwm_channel_A>
    1106:	10 92 ed 03 	sts	0x03ED, r1	; 0x8003ed <pwm_channel_B+0x1>
    110a:	10 92 ec 03 	sts	0x03EC, r1	; 0x8003ec <pwm_channel_B>
    110e:	8f ef       	ldi	r24, 0xFF	; 255
    1110:	93 e0       	ldi	r25, 0x03	; 3
    1112:	90 93 f1 03 	sts	0x03F1, r25	; 0x8003f1 <pwm_channel_C+0x1>
    1116:	80 93 f0 03 	sts	0x03F0, r24	; 0x8003f0 <pwm_channel_C>
    111a:	c5 98       	cbi	0x18, 5	; 24
    111c:	c6 98       	cbi	0x18, 6	; 24
    111e:	bd 9a       	sbi	0x17, 5	; 23
    1120:	be 9a       	sbi	0x17, 6	; 23
    1122:	bf 9a       	sbi	0x17, 7	; 23
    1124:	c7 9a       	sbi	0x18, 7	; 24
    1126:	1d bc       	out	0x2d, r1	; 45
    1128:	1c bc       	out	0x2c, r1	; 44
    112a:	8a ea       	ldi	r24, 0xAA	; 170
    112c:	8f bd       	out	0x2f, r24	; 47
    112e:	82 e1       	ldi	r24, 0x12	; 18
    1130:	8e bd       	out	0x2e, r24	; 46
    1132:	80 e0       	ldi	r24, 0x00	; 0
    1134:	94 e0       	ldi	r25, 0x04	; 4
    1136:	97 bd       	out	0x27, r25	; 39
    1138:	86 bd       	out	0x26, r24	; 38
    113a:	87 b7       	in	r24, 0x37	; 55
    113c:	84 60       	ori	r24, 0x04	; 4
    113e:	87 bf       	out	0x37, r24	; 55
    1140:	08 95       	ret

00001142 <__vector_14>:
    1142:	1f 92       	push	r1
    1144:	0f 92       	push	r0
    1146:	0f b6       	in	r0, 0x3f	; 63
    1148:	0f 92       	push	r0
    114a:	11 24       	eor	r1, r1
    114c:	2f 93       	push	r18
    114e:	3f 93       	push	r19
    1150:	4f 93       	push	r20
    1152:	8f 93       	push	r24
    1154:	9f 93       	push	r25
    1156:	af 93       	push	r26
    1158:	bf 93       	push	r27
    115a:	80 91 f2 03 	lds	r24, 0x03F2	; 0x8003f2 <pwm_timer_sub>
    115e:	90 91 f3 03 	lds	r25, 0x03F3	; 0x8003f3 <pwm_timer_sub+0x1>
    1162:	9c 01       	movw	r18, r24
    1164:	28 5e       	subi	r18, 0xE8	; 232
    1166:	3f 4f       	sbci	r19, 0xFF	; 255
    1168:	28 3e       	cpi	r18, 0xE8	; 232
    116a:	43 e0       	ldi	r20, 0x03	; 3
    116c:	34 07       	cpc	r19, r20
    116e:	28 f4       	brcc	.+10     	; 0x117a <__vector_14+0x38>
    1170:	30 93 f3 03 	sts	0x03F3, r19	; 0x8003f3 <pwm_timer_sub+0x1>
    1174:	20 93 f2 03 	sts	0x03F2, r18	; 0x8003f2 <pwm_timer_sub>
    1178:	0f c0       	rjmp	.+30     	; 0x1198 <__vector_14+0x56>
    117a:	80 5d       	subi	r24, 0xD0	; 208
    117c:	93 40       	sbci	r25, 0x03	; 3
    117e:	90 93 f3 03 	sts	0x03F3, r25	; 0x8003f3 <pwm_timer_sub+0x1>
    1182:	80 93 f2 03 	sts	0x03F2, r24	; 0x8003f2 <pwm_timer_sub>
    1186:	80 91 ee 03 	lds	r24, 0x03EE	; 0x8003ee <pwm_timer_ms>
    118a:	90 91 ef 03 	lds	r25, 0x03EF	; 0x8003ef <pwm_timer_ms+0x1>
    118e:	01 96       	adiw	r24, 0x01	; 1
    1190:	90 93 ef 03 	sts	0x03EF, r25	; 0x8003ef <pwm_timer_ms+0x1>
    1194:	80 93 ee 03 	sts	0x03EE, r24	; 0x8003ee <pwm_timer_ms>
    1198:	80 91 ee 03 	lds	r24, 0x03EE	; 0x8003ee <pwm_timer_ms>
    119c:	90 91 ef 03 	lds	r25, 0x03EF	; 0x8003ef <pwm_timer_ms+0x1>
    11a0:	9c 01       	movw	r18, r24
    11a2:	2f 5f       	subi	r18, 0xFF	; 255
    11a4:	3f 4f       	sbci	r19, 0xFF	; 255
    11a6:	28 3e       	cpi	r18, 0xE8	; 232
    11a8:	43 e0       	ldi	r20, 0x03	; 3
    11aa:	34 07       	cpc	r19, r20
    11ac:	28 f4       	brcc	.+10     	; 0x11b8 <__vector_14+0x76>
    11ae:	30 93 ef 03 	sts	0x03EF, r19	; 0x8003ef <pwm_timer_ms+0x1>
    11b2:	20 93 ee 03 	sts	0x03EE, r18	; 0x8003ee <pwm_timer_ms>
    11b6:	19 c0       	rjmp	.+50     	; 0x11ea <__vector_14+0xa8>
    11b8:	87 5e       	subi	r24, 0xE7	; 231
    11ba:	93 40       	sbci	r25, 0x03	; 3
    11bc:	90 93 ef 03 	sts	0x03EF, r25	; 0x8003ef <pwm_timer_ms+0x1>
    11c0:	80 93 ee 03 	sts	0x03EE, r24	; 0x8003ee <pwm_timer_ms>
    11c4:	80 91 f4 03 	lds	r24, 0x03F4	; 0x8003f4 <pwm_timer_sec>
    11c8:	90 91 f5 03 	lds	r25, 0x03F5	; 0x8003f5 <pwm_timer_sec+0x1>
    11cc:	a0 91 f6 03 	lds	r26, 0x03F6	; 0x8003f6 <pwm_timer_sec+0x2>
    11d0:	b0 91 f7 03 	lds	r27, 0x03F7	; 0x8003f7 <pwm_timer_sec+0x3>
    11d4:	01 96       	adiw	r24, 0x01	; 1
    11d6:	a1 1d       	adc	r26, r1
    11d8:	b1 1d       	adc	r27, r1
    11da:	80 93 f4 03 	sts	0x03F4, r24	; 0x8003f4 <pwm_timer_sec>
    11de:	90 93 f5 03 	sts	0x03F5, r25	; 0x8003f5 <pwm_timer_sec+0x1>
    11e2:	a0 93 f6 03 	sts	0x03F6, r26	; 0x8003f6 <pwm_timer_sec+0x2>
    11e6:	b0 93 f7 03 	sts	0x03F7, r27	; 0x8003f7 <pwm_timer_sec+0x3>
    11ea:	80 91 ea 03 	lds	r24, 0x03EA	; 0x8003ea <pwm_channel_A>
    11ee:	90 91 eb 03 	lds	r25, 0x03EB	; 0x8003eb <pwm_channel_A+0x1>
    11f2:	8f 3f       	cpi	r24, 0xFF	; 255
    11f4:	23 e0       	ldi	r18, 0x03	; 3
    11f6:	92 07       	cpc	r25, r18
    11f8:	10 f0       	brcs	.+4      	; 0x11fe <__vector_14+0xbc>
    11fa:	80 e0       	ldi	r24, 0x00	; 0
    11fc:	94 e0       	ldi	r25, 0x04	; 4
    11fe:	9b bd       	out	0x2b, r25	; 43
    1200:	8a bd       	out	0x2a, r24	; 42
    1202:	80 91 ec 03 	lds	r24, 0x03EC	; 0x8003ec <pwm_channel_B>
    1206:	90 91 ed 03 	lds	r25, 0x03ED	; 0x8003ed <pwm_channel_B+0x1>
    120a:	8f 3f       	cpi	r24, 0xFF	; 255
    120c:	43 e0       	ldi	r20, 0x03	; 3
    120e:	94 07       	cpc	r25, r20
    1210:	10 f0       	brcs	.+4      	; 0x1216 <__vector_14+0xd4>
    1212:	80 e0       	ldi	r24, 0x00	; 0
    1214:	94 e0       	ldi	r25, 0x04	; 4
    1216:	99 bd       	out	0x29, r25	; 41
    1218:	88 bd       	out	0x28, r24	; 40
    121a:	80 91 f0 03 	lds	r24, 0x03F0	; 0x8003f0 <pwm_channel_C>
    121e:	90 91 f1 03 	lds	r25, 0x03F1	; 0x8003f1 <pwm_channel_C+0x1>
    1222:	8f 3f       	cpi	r24, 0xFF	; 255
    1224:	23 e0       	ldi	r18, 0x03	; 3
    1226:	92 07       	cpc	r25, r18
    1228:	10 f0       	brcs	.+4      	; 0x122e <__vector_14+0xec>
    122a:	80 e0       	ldi	r24, 0x00	; 0
    122c:	94 e0       	ldi	r25, 0x04	; 4
    122e:	90 93 79 00 	sts	0x0079, r25	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
    1232:	80 93 78 00 	sts	0x0078, r24	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
    1236:	bf 91       	pop	r27
    1238:	af 91       	pop	r26
    123a:	9f 91       	pop	r25
    123c:	8f 91       	pop	r24
    123e:	4f 91       	pop	r20
    1240:	3f 91       	pop	r19
    1242:	2f 91       	pop	r18
    1244:	0f 90       	pop	r0
    1246:	0f be       	out	0x3f, r0	; 63
    1248:	0f 90       	pop	r0
    124a:	1f 90       	pop	r1
    124c:	18 95       	reti

0000124e <delay>:
    124e:	00 97       	sbiw	r24, 0x00	; 0
    1250:	41 f0       	breq	.+16     	; 0x1262 <delay+0x14>
    1252:	ef e9       	ldi	r30, 0x9F	; 159
    1254:	ff e0       	ldi	r31, 0x0F	; 15
    1256:	31 97       	sbiw	r30, 0x01	; 1
    1258:	f1 f7       	brne	.-4      	; 0x1256 <delay+0x8>
    125a:	00 c0       	rjmp	.+0      	; 0x125c <delay+0xe>
    125c:	00 00       	nop
    125e:	01 97       	sbiw	r24, 0x01	; 1
    1260:	f6 cf       	rjmp	.-20     	; 0x124e <delay>
    1262:	08 95       	ret

00001264 <spi_tx>:
    1264:	8f b9       	out	0x0f, r24	; 15
    1266:	90 91 33 04 	lds	r25, 0x0433	; 0x800433 <spi_tx_chk>
    126a:	89 27       	eor	r24, r25
    126c:	80 93 33 04 	sts	0x0433, r24	; 0x800433 <spi_tx_chk>
    1270:	08 95       	ret

00001272 <spi_restart_transmission>:
    1272:	10 92 34 04 	sts	0x0434, r1	; 0x800434 <spi_pos>
    1276:	80 93 15 04 	sts	0x0415, r24	; 0x800415 <spi_tx_size>
    127a:	91 e0       	ldi	r25, 0x01	; 1
    127c:	98 0f       	add	r25, r24
    127e:	90 93 17 04 	sts	0x0417, r25	; 0x800417 <spi_size>
    1282:	96 e9       	ldi	r25, 0x96	; 150
    1284:	90 93 33 04 	sts	0x0433, r25	; 0x800433 <spi_tx_chk>
    1288:	90 93 35 04 	sts	0x0435, r25	; 0x800435 <spi_rx_chk>
    128c:	f8 94       	cli
    128e:	b0 99       	sbic	0x16, 0	; 22
    1290:	03 c0       	rjmp	.+6      	; 0x1298 <spi_restart_transmission+0x26>
    1292:	78 94       	sei
    1294:	00 00       	nop
    1296:	fa cf       	rjmp	.-12     	; 0x128c <spi_restart_transmission+0x1a>
    1298:	90 ec       	ldi	r25, 0xC0	; 192
    129a:	9d b9       	out	0x0d, r25	; 13
    129c:	0e 94 32 09 	call	0x1264	; 0x1264 <spi_tx>
    12a0:	77 9a       	sbi	0x0e, 7	; 14
    12a2:	78 94       	sei
    12a4:	80 e0       	ldi	r24, 0x00	; 0
    12a6:	08 95       	ret

000012a8 <spi_init>:
    12a8:	b8 98       	cbi	0x17, 0	; 23
    12aa:	c0 98       	cbi	0x18, 0	; 24
    12ac:	bb 9a       	sbi	0x17, 3	; 23
    12ae:	c3 9a       	sbi	0x18, 3	; 24
    12b0:	80 e0       	ldi	r24, 0x00	; 0
    12b2:	0c 94 39 09 	jmp	0x1272	; 0x1272 <spi_restart_transmission>

000012b6 <__vector_17>:
    12b6:	1f 92       	push	r1
    12b8:	0f 92       	push	r0
    12ba:	0f b6       	in	r0, 0x3f	; 63
    12bc:	0f 92       	push	r0
    12be:	11 24       	eor	r1, r1
    12c0:	0b b6       	in	r0, 0x3b	; 59
    12c2:	0f 92       	push	r0
    12c4:	2f 93       	push	r18
    12c6:	3f 93       	push	r19
    12c8:	4f 93       	push	r20
    12ca:	5f 93       	push	r21
    12cc:	6f 93       	push	r22
    12ce:	7f 93       	push	r23
    12d0:	8f 93       	push	r24
    12d2:	9f 93       	push	r25
    12d4:	af 93       	push	r26
    12d6:	bf 93       	push	r27
    12d8:	ef 93       	push	r30
    12da:	ff 93       	push	r31
    12dc:	8f b1       	in	r24, 0x0f	; 15
    12de:	90 91 35 04 	lds	r25, 0x0435	; 0x800435 <spi_rx_chk>
    12e2:	98 27       	eor	r25, r24
    12e4:	90 93 35 04 	sts	0x0435, r25	; 0x800435 <spi_rx_chk>
    12e8:	e0 91 34 04 	lds	r30, 0x0434	; 0x800434 <spi_pos>
    12ec:	e1 11       	cpse	r30, r1
    12ee:	16 c0       	rjmp	.+44     	; 0x131c <__vector_17+0x66>
    12f0:	80 93 13 04 	sts	0x0413, r24	; 0x800413 <spi_rx_size>
    12f4:	8c 31       	cpi	r24, 0x1C	; 28
    12f6:	30 f0       	brcs	.+12     	; 0x1304 <__vector_17+0x4e>
    12f8:	10 92 15 04 	sts	0x0415, r1	; 0x800415 <spi_tx_size>
    12fc:	10 92 13 04 	sts	0x0413, r1	; 0x800413 <spi_rx_size>
    1300:	81 e0       	ldi	r24, 0x01	; 1
    1302:	09 c0       	rjmp	.+18     	; 0x1316 <__vector_17+0x60>
    1304:	48 2f       	mov	r20, r24
    1306:	50 e0       	ldi	r21, 0x00	; 0
    1308:	20 91 17 04 	lds	r18, 0x0417	; 0x800417 <spi_size>
    130c:	30 e0       	ldi	r19, 0x00	; 0
    130e:	42 17       	cp	r20, r18
    1310:	53 07       	cpc	r21, r19
    1312:	fc f0       	brlt	.+62     	; 0x1352 <__vector_17+0x9c>
    1314:	8f 5f       	subi	r24, 0xFF	; 255
    1316:	80 93 17 04 	sts	0x0417, r24	; 0x800417 <spi_size>
    131a:	1b c0       	rjmp	.+54     	; 0x1352 <__vector_17+0x9c>
    131c:	2e 2f       	mov	r18, r30
    131e:	30 e0       	ldi	r19, 0x00	; 0
    1320:	40 91 13 04 	lds	r20, 0x0413	; 0x800413 <spi_rx_size>
    1324:	50 e0       	ldi	r21, 0x00	; 0
    1326:	42 17       	cp	r20, r18
    1328:	53 07       	cpc	r21, r19
    132a:	2c f0       	brlt	.+10     	; 0x1336 <__vector_17+0x80>
    132c:	d9 01       	movw	r26, r18
    132e:	a9 5e       	subi	r26, 0xE9	; 233
    1330:	bb 4f       	sbci	r27, 0xFB	; 251
    1332:	8c 93       	st	X, r24
    1334:	0e c0       	rjmp	.+28     	; 0x1352 <__vector_17+0x9c>
    1336:	21 50       	subi	r18, 0x01	; 1
    1338:	31 09       	sbc	r19, r1
    133a:	42 17       	cp	r20, r18
    133c:	53 07       	cpc	r21, r19
    133e:	49 f4       	brne	.+18     	; 0x1352 <__vector_17+0x9c>
    1340:	99 23       	and	r25, r25
    1342:	39 f0       	breq	.+14     	; 0x1352 <__vector_17+0x9c>
    1344:	80 91 14 04 	lds	r24, 0x0414	; 0x800414 <spi_err_cnt>
    1348:	8f 5f       	subi	r24, 0xFF	; 255
    134a:	80 93 14 04 	sts	0x0414, r24	; 0x800414 <spi_err_cnt>
    134e:	10 92 13 04 	sts	0x0413, r1	; 0x800413 <spi_rx_size>
    1352:	80 91 15 04 	lds	r24, 0x0415	; 0x800415 <spi_tx_size>
    1356:	e8 17       	cp	r30, r24
    1358:	28 f4       	brcc	.+10     	; 0x1364 <__vector_17+0xae>
    135a:	f0 e0       	ldi	r31, 0x00	; 0
    135c:	e8 50       	subi	r30, 0x08	; 8
    135e:	fc 4f       	sbci	r31, 0xFC	; 252
    1360:	80 81       	ld	r24, Z
    1362:	0a c0       	rjmp	.+20     	; 0x1378 <__vector_17+0xc2>
    1364:	e8 13       	cpse	r30, r24
    1366:	03 c0       	rjmp	.+6      	; 0x136e <__vector_17+0xb8>
    1368:	80 91 33 04 	lds	r24, 0x0433	; 0x800433 <spi_tx_chk>
    136c:	05 c0       	rjmp	.+10     	; 0x1378 <__vector_17+0xc2>
    136e:	80 91 17 04 	lds	r24, 0x0417	; 0x800417 <spi_size>
    1372:	e8 17       	cp	r30, r24
    1374:	48 f4       	brcc	.+18     	; 0x1388 <__vector_17+0xd2>
    1376:	8f ef       	ldi	r24, 0xFF	; 255
    1378:	0e 94 32 09 	call	0x1264	; 0x1264 <spi_tx>
    137c:	80 91 34 04 	lds	r24, 0x0434	; 0x800434 <spi_pos>
    1380:	8f 5f       	subi	r24, 0xFF	; 255
    1382:	80 93 34 04 	sts	0x0434, r24	; 0x800434 <spi_pos>
    1386:	11 c0       	rjmp	.+34     	; 0x13aa <__vector_17+0xf4>
    1388:	b8 98       	cbi	0x17, 0	; 23
    138a:	c0 98       	cbi	0x18, 0	; 24
    138c:	1d b8       	out	0x0d, r1	; 13
    138e:	b8 98       	cbi	0x17, 0	; 23
    1390:	c0 98       	cbi	0x18, 0	; 24
    1392:	80 91 16 04 	lds	r24, 0x0416	; 0x800416 <spi_frame_cnt>
    1396:	8f 5f       	subi	r24, 0xFF	; 255
    1398:	80 93 16 04 	sts	0x0416, r24	; 0x800416 <spi_frame_cnt>
    139c:	78 94       	sei
    139e:	80 91 13 04 	lds	r24, 0x0413	; 0x800413 <spi_rx_size>
    13a2:	0e 94 67 0f 	call	0x1ece	; 0x1ece <spi_finished_callback>
    13a6:	0e 94 39 09 	call	0x1272	; 0x1272 <spi_restart_transmission>
    13aa:	ff 91       	pop	r31
    13ac:	ef 91       	pop	r30
    13ae:	bf 91       	pop	r27
    13b0:	af 91       	pop	r26
    13b2:	9f 91       	pop	r25
    13b4:	8f 91       	pop	r24
    13b6:	7f 91       	pop	r23
    13b8:	6f 91       	pop	r22
    13ba:	5f 91       	pop	r21
    13bc:	4f 91       	pop	r20
    13be:	3f 91       	pop	r19
    13c0:	2f 91       	pop	r18
    13c2:	0f 90       	pop	r0
    13c4:	0b be       	out	0x3b, r0	; 59
    13c6:	0f 90       	pop	r0
    13c8:	0f be       	out	0x3f, r0	; 63
    13ca:	0f 90       	pop	r0
    13cc:	1f 90       	pop	r1
    13ce:	18 95       	reti

000013d0 <gfx_store_disp_tile>:
    13d0:	cf 93       	push	r28
    13d2:	df 93       	push	r29
    13d4:	c8 2f       	mov	r28, r24
    13d6:	d8 eb       	ldi	r29, 0xB8	; 184
    13d8:	d6 0f       	add	r29, r22
    13da:	88 30       	cpi	r24, 0x08	; 8
    13dc:	00 f5       	brcc	.+64     	; 0x141e <gfx_store_disp_tile+0x4e>
    13de:	80 e0       	ldi	r24, 0x00	; 0
    13e0:	0e 94 ef 07 	call	0xfde	; 0xfde <display_wait>
    13e4:	6d 2f       	mov	r22, r29
    13e6:	80 e0       	ldi	r24, 0x00	; 0
    13e8:	0e 94 6e 07 	call	0xedc	; 0xedc <display_write>
    13ec:	80 e0       	ldi	r24, 0x00	; 0
    13ee:	0e 94 ef 07 	call	0xfde	; 0xfde <display_wait>
    13f2:	6c 2f       	mov	r22, r28
    13f4:	66 0f       	add	r22, r22
    13f6:	66 0f       	add	r22, r22
    13f8:	66 0f       	add	r22, r22
    13fa:	60 5c       	subi	r22, 0xC0	; 192
    13fc:	80 e0       	ldi	r24, 0x00	; 0
    13fe:	0e 94 6e 07 	call	0xedc	; 0xedc <display_write>
    1402:	ca e3       	ldi	r28, 0x3A	; 58
    1404:	d4 e0       	ldi	r29, 0x04	; 4
    1406:	82 e0       	ldi	r24, 0x02	; 2
    1408:	0e 94 ef 07 	call	0xfde	; 0xfde <display_wait>
    140c:	69 91       	ld	r22, Y+
    140e:	82 e0       	ldi	r24, 0x02	; 2
    1410:	0e 94 6e 07 	call	0xedc	; 0xedc <display_write>
    1414:	84 e0       	ldi	r24, 0x04	; 4
    1416:	c2 34       	cpi	r28, 0x42	; 66
    1418:	d8 07       	cpc	r29, r24
    141a:	a9 f7       	brne	.-22     	; 0x1406 <gfx_store_disp_tile+0x36>
    141c:	20 c0       	rjmp	.+64     	; 0x145e <gfx_store_disp_tile+0x8e>
    141e:	c8 50       	subi	r28, 0x08	; 8
    1420:	81 e0       	ldi	r24, 0x01	; 1
    1422:	0e 94 ef 07 	call	0xfde	; 0xfde <display_wait>
    1426:	6d 2f       	mov	r22, r29
    1428:	81 e0       	ldi	r24, 0x01	; 1
    142a:	0e 94 6e 07 	call	0xedc	; 0xedc <display_write>
    142e:	81 e0       	ldi	r24, 0x01	; 1
    1430:	0e 94 ef 07 	call	0xfde	; 0xfde <display_wait>
    1434:	cc 0f       	add	r28, r28
    1436:	cc 0f       	add	r28, r28
    1438:	cc 0f       	add	r28, r28
    143a:	60 e4       	ldi	r22, 0x40	; 64
    143c:	6c 0f       	add	r22, r28
    143e:	81 e0       	ldi	r24, 0x01	; 1
    1440:	0e 94 6e 07 	call	0xedc	; 0xedc <display_write>
    1444:	ca e3       	ldi	r28, 0x3A	; 58
    1446:	d4 e0       	ldi	r29, 0x04	; 4
    1448:	83 e0       	ldi	r24, 0x03	; 3
    144a:	0e 94 ef 07 	call	0xfde	; 0xfde <display_wait>
    144e:	69 91       	ld	r22, Y+
    1450:	83 e0       	ldi	r24, 0x03	; 3
    1452:	0e 94 6e 07 	call	0xedc	; 0xedc <display_write>
    1456:	84 e0       	ldi	r24, 0x04	; 4
    1458:	c2 34       	cpi	r28, 0x42	; 66
    145a:	d8 07       	cpc	r29, r24
    145c:	a9 f7       	brne	.-22     	; 0x1448 <gfx_store_disp_tile+0x78>
    145e:	df 91       	pop	r29
    1460:	cf 91       	pop	r28
    1462:	08 95       	ret

00001464 <gfx_get_x>:
    1464:	80 91 39 04 	lds	r24, 0x0439	; 0x800439 <gfx_x>
    1468:	08 95       	ret

0000146a <gfx_get_y>:
    146a:	80 91 42 04 	lds	r24, 0x0442	; 0x800442 <gfx_y>
    146e:	08 95       	ret

00001470 <gfx_draw_mode>:
    1470:	80 93 36 04 	sts	0x0436, r24	; 0x800436 <gfx_dm>
    1474:	08 95       	ret

00001476 <gfx_move>:
    1476:	cf 93       	push	r28
    1478:	df 93       	push	r29
    147a:	d8 2f       	mov	r29, r24
    147c:	c6 2f       	mov	r28, r22
    147e:	80 93 39 04 	sts	0x0439, r24	; 0x800439 <gfx_x>
    1482:	60 93 42 04 	sts	0x0442, r22	; 0x800442 <gfx_y>
    1486:	80 e0       	ldi	r24, 0x00	; 0
    1488:	0e 94 ef 07 	call	0xfde	; 0xfde <display_wait>
    148c:	81 e0       	ldi	r24, 0x01	; 1
    148e:	0e 94 ef 07 	call	0xfde	; 0xfde <display_wait>
    1492:	c6 95       	lsr	r28
    1494:	c6 95       	lsr	r28
    1496:	c6 95       	lsr	r28
    1498:	c8 54       	subi	r28, 0x48	; 72
    149a:	6c 2f       	mov	r22, r28
    149c:	80 e0       	ldi	r24, 0x00	; 0
    149e:	0e 94 6e 07 	call	0xedc	; 0xedc <display_write>
    14a2:	6c 2f       	mov	r22, r28
    14a4:	81 e0       	ldi	r24, 0x01	; 1
    14a6:	0e 94 6e 07 	call	0xedc	; 0xedc <display_write>
    14aa:	80 e0       	ldi	r24, 0x00	; 0
    14ac:	0e 94 ef 07 	call	0xfde	; 0xfde <display_wait>
    14b0:	81 e0       	ldi	r24, 0x01	; 1
    14b2:	0e 94 ef 07 	call	0xfde	; 0xfde <display_wait>
    14b6:	60 e4       	ldi	r22, 0x40	; 64
    14b8:	d1 34       	cpi	r29, 0x41	; 65
    14ba:	28 f0       	brcs	.+10     	; 0x14c6 <gfx_move+0x50>
    14bc:	80 e0       	ldi	r24, 0x00	; 0
    14be:	0e 94 6e 07 	call	0xedc	; 0xedc <display_write>
    14c2:	6d 2f       	mov	r22, r29
    14c4:	05 c0       	rjmp	.+10     	; 0x14d0 <gfx_move+0x5a>
    14c6:	6d 0f       	add	r22, r29
    14c8:	80 e0       	ldi	r24, 0x00	; 0
    14ca:	0e 94 6e 07 	call	0xedc	; 0xedc <display_write>
    14ce:	60 e4       	ldi	r22, 0x40	; 64
    14d0:	81 e0       	ldi	r24, 0x01	; 1
    14d2:	df 91       	pop	r29
    14d4:	cf 91       	pop	r28
    14d6:	0c 94 6e 07 	jmp	0xedc	; 0xedc <display_write>

000014da <gfx_fill>:
    14da:	1f 93       	push	r17
    14dc:	cf 93       	push	r28
    14de:	df 93       	push	r29
    14e0:	18 2f       	mov	r17, r24
    14e2:	c8 eb       	ldi	r28, 0xB8	; 184
    14e4:	80 e0       	ldi	r24, 0x00	; 0
    14e6:	0e 94 ef 07 	call	0xfde	; 0xfde <display_wait>
    14ea:	81 e0       	ldi	r24, 0x01	; 1
    14ec:	0e 94 ef 07 	call	0xfde	; 0xfde <display_wait>
    14f0:	6c 2f       	mov	r22, r28
    14f2:	80 e0       	ldi	r24, 0x00	; 0
    14f4:	0e 94 6e 07 	call	0xedc	; 0xedc <display_write>
    14f8:	6c 2f       	mov	r22, r28
    14fa:	81 e0       	ldi	r24, 0x01	; 1
    14fc:	0e 94 6e 07 	call	0xedc	; 0xedc <display_write>
    1500:	d0 e4       	ldi	r29, 0x40	; 64
    1502:	82 e0       	ldi	r24, 0x02	; 2
    1504:	0e 94 ef 07 	call	0xfde	; 0xfde <display_wait>
    1508:	83 e0       	ldi	r24, 0x03	; 3
    150a:	0e 94 ef 07 	call	0xfde	; 0xfde <display_wait>
    150e:	61 2f       	mov	r22, r17
    1510:	82 e0       	ldi	r24, 0x02	; 2
    1512:	0e 94 6e 07 	call	0xedc	; 0xedc <display_write>
    1516:	61 2f       	mov	r22, r17
    1518:	83 e0       	ldi	r24, 0x03	; 3
    151a:	0e 94 6e 07 	call	0xedc	; 0xedc <display_write>
    151e:	d1 50       	subi	r29, 0x01	; 1
    1520:	81 f7       	brne	.-32     	; 0x1502 <gfx_fill+0x28>
    1522:	cf 5f       	subi	r28, 0xFF	; 255
    1524:	c0 3c       	cpi	r28, 0xC0	; 192
    1526:	f1 f6       	brne	.-68     	; 0x14e4 <gfx_fill+0xa>
    1528:	80 e0       	ldi	r24, 0x00	; 0
    152a:	0e 94 ef 07 	call	0xfde	; 0xfde <display_wait>
    152e:	81 e0       	ldi	r24, 0x01	; 1
    1530:	0e 94 ef 07 	call	0xfde	; 0xfde <display_wait>
    1534:	68 eb       	ldi	r22, 0xB8	; 184
    1536:	80 e0       	ldi	r24, 0x00	; 0
    1538:	0e 94 6e 07 	call	0xedc	; 0xedc <display_write>
    153c:	68 eb       	ldi	r22, 0xB8	; 184
    153e:	81 e0       	ldi	r24, 0x01	; 1
    1540:	df 91       	pop	r29
    1542:	cf 91       	pop	r28
    1544:	1f 91       	pop	r17
    1546:	0c 94 6e 07 	jmp	0xedc	; 0xedc <display_write>

0000154a <gfx_display_write2>:
    154a:	0f 93       	push	r16
    154c:	1f 93       	push	r17
    154e:	cf 93       	push	r28
    1550:	df 93       	push	r29
    1552:	d8 2f       	mov	r29, r24
    1554:	c6 2f       	mov	r28, r22
    1556:	80 91 39 04 	lds	r24, 0x0439	; 0x800439 <gfx_x>
    155a:	87 fd       	sbrc	r24, 7
    155c:	37 c0       	rjmp	.+110    	; 0x15cc <gfx_display_write2+0x82>
    155e:	11 e0       	ldi	r17, 0x01	; 1
    1560:	80 34       	cpi	r24, 0x40	; 64
    1562:	08 f4       	brcc	.+2      	; 0x1566 <gfx_display_write2+0x1c>
    1564:	10 e0       	ldi	r17, 0x00	; 0
    1566:	81 2f       	mov	r24, r17
    1568:	0e 94 ef 07 	call	0xfde	; 0xfde <display_wait>
    156c:	02 e0       	ldi	r16, 0x02	; 2
    156e:	01 0f       	add	r16, r17
    1570:	80 2f       	mov	r24, r16
    1572:	0e 94 b0 07 	call	0xf60	; 0xf60 <display_read>
    1576:	80 2f       	mov	r24, r16
    1578:	0e 94 b0 07 	call	0xf60	; 0xf60 <display_read>
    157c:	90 91 36 04 	lds	r25, 0x0436	; 0x800436 <gfx_dm>
    1580:	92 ff       	sbrs	r25, 2
    1582:	02 c0       	rjmp	.+4      	; 0x1588 <gfx_display_write2+0x3e>
    1584:	d0 95       	com	r29
    1586:	9b 7f       	andi	r25, 0xFB	; 251
    1588:	dc 23       	and	r29, r28
    158a:	91 11       	cpse	r25, r1
    158c:	02 c0       	rjmp	.+4      	; 0x1592 <gfx_display_write2+0x48>
    158e:	c8 2f       	mov	r28, r24
    1590:	04 c0       	rjmp	.+8      	; 0x159a <gfx_display_write2+0x50>
    1592:	91 30       	cpi	r25, 0x01	; 1
    1594:	21 f4       	brne	.+8      	; 0x159e <gfx_display_write2+0x54>
    1596:	c0 95       	com	r28
    1598:	c8 23       	and	r28, r24
    159a:	cd 2b       	or	r28, r29
    159c:	02 c0       	rjmp	.+4      	; 0x15a2 <gfx_display_write2+0x58>
    159e:	c8 2f       	mov	r28, r24
    15a0:	cd 27       	eor	r28, r29
    15a2:	81 2f       	mov	r24, r17
    15a4:	0e 94 ef 07 	call	0xfde	; 0xfde <display_wait>
    15a8:	60 91 39 04 	lds	r22, 0x0439	; 0x800439 <gfx_x>
    15ac:	60 64       	ori	r22, 0x40	; 64
    15ae:	81 2f       	mov	r24, r17
    15b0:	0e 94 6e 07 	call	0xedc	; 0xedc <display_write>
    15b4:	81 2f       	mov	r24, r17
    15b6:	0e 94 ef 07 	call	0xfde	; 0xfde <display_wait>
    15ba:	6c 2f       	mov	r22, r28
    15bc:	80 2f       	mov	r24, r16
    15be:	0e 94 6e 07 	call	0xedc	; 0xedc <display_write>
    15c2:	80 91 39 04 	lds	r24, 0x0439	; 0x800439 <gfx_x>
    15c6:	8f 5f       	subi	r24, 0xFF	; 255
    15c8:	80 93 39 04 	sts	0x0439, r24	; 0x800439 <gfx_x>
    15cc:	df 91       	pop	r29
    15ce:	cf 91       	pop	r28
    15d0:	1f 91       	pop	r17
    15d2:	0f 91       	pop	r16
    15d4:	08 95       	ret

000015d6 <gfx_char_width>:
    15d6:	90 ee       	ldi	r25, 0xE0	; 224
    15d8:	98 0f       	add	r25, r24
    15da:	90 36       	cpi	r25, 0x60	; 96
    15dc:	08 f0       	brcs	.+2      	; 0x15e0 <gfx_char_width+0xa>
    15de:	80 e8       	ldi	r24, 0x80	; 128
    15e0:	80 52       	subi	r24, 0x20	; 32
    15e2:	96 e0       	ldi	r25, 0x06	; 6
    15e4:	89 9f       	mul	r24, r25
    15e6:	f0 01       	movw	r30, r0
    15e8:	11 24       	eor	r1, r1
    15ea:	ea 56       	subi	r30, 0x6A	; 106
    15ec:	fe 4f       	sbci	r31, 0xFE	; 254
    15ee:	90 81       	ld	r25, Z
    15f0:	80 91 38 04 	lds	r24, 0x0438	; 0x800438 <gfx_proportional>
    15f4:	81 11       	cpse	r24, r1
    15f6:	01 c0       	rjmp	.+2      	; 0x15fa <gfx_char_width+0x24>
    15f8:	9f e1       	ldi	r25, 0x1F	; 31
    15fa:	25 e0       	ldi	r18, 0x05	; 5
    15fc:	80 e0       	ldi	r24, 0x00	; 0
    15fe:	90 fd       	sbrc	r25, 0
    1600:	8f 5f       	subi	r24, 0xFF	; 255
    1602:	96 95       	lsr	r25
    1604:	21 50       	subi	r18, 0x01	; 1
    1606:	d9 f7       	brne	.-10     	; 0x15fe <gfx_char_width+0x28>
    1608:	08 95       	ret

0000160a <gfx_print_char_base>:
    160a:	7f 92       	push	r7
    160c:	8f 92       	push	r8
    160e:	9f 92       	push	r9
    1610:	af 92       	push	r10
    1612:	bf 92       	push	r11
    1614:	cf 92       	push	r12
    1616:	df 92       	push	r13
    1618:	ef 92       	push	r14
    161a:	ff 92       	push	r15
    161c:	0f 93       	push	r16
    161e:	1f 93       	push	r17
    1620:	cf 93       	push	r28
    1622:	df 93       	push	r29
    1624:	c6 2f       	mov	r28, r22
    1626:	90 ee       	ldi	r25, 0xE0	; 224
    1628:	98 0f       	add	r25, r24
    162a:	90 36       	cpi	r25, 0x60	; 96
    162c:	08 f0       	brcs	.+2      	; 0x1630 <gfx_print_char_base+0x26>
    162e:	80 e8       	ldi	r24, 0x80	; 128
    1630:	80 52       	subi	r24, 0x20	; 32
    1632:	26 e0       	ldi	r18, 0x06	; 6
    1634:	82 9f       	mul	r24, r18
    1636:	c0 01       	movw	r24, r0
    1638:	11 24       	eor	r1, r1
    163a:	fc 01       	movw	r30, r24
    163c:	e9 56       	subi	r30, 0x69	; 105
    163e:	fe 4f       	sbci	r31, 0xFE	; 254
    1640:	7f 01       	movw	r14, r30
    1642:	fc 01       	movw	r30, r24
    1644:	ea 56       	subi	r30, 0x6A	; 106
    1646:	fe 4f       	sbci	r31, 0xFE	; 254
    1648:	90 80       	ld	r9, Z
    164a:	80 91 38 04 	lds	r24, 0x0438	; 0x800438 <gfx_proportional>
    164e:	81 11       	cpse	r24, r1
    1650:	02 c0       	rjmp	.+4      	; 0x1656 <gfx_print_char_base+0x4c>
    1652:	9f e1       	ldi	r25, 0x1F	; 31
    1654:	99 2e       	mov	r9, r25
    1656:	ac 2e       	mov	r10, r28
    1658:	0c 2e       	mov	r0, r28
    165a:	00 0c       	add	r0, r0
    165c:	bb 08       	sbc	r11, r11
    165e:	6f ef       	ldi	r22, 0xFF	; 255
    1660:	70 e0       	ldi	r23, 0x00	; 0
    1662:	6b 01       	movw	r12, r22
    1664:	0c 2e       	mov	r0, r28
    1666:	01 c0       	rjmp	.+2      	; 0x166a <gfx_print_char_base+0x60>
    1668:	cc 0c       	add	r12, r12
    166a:	0a 94       	dec	r0
    166c:	ea f7       	brpl	.-6      	; 0x1668 <gfx_print_char_base+0x5e>
    166e:	8c 2c       	mov	r8, r12
    1670:	00 27       	eor	r16, r16
    1672:	11 27       	eor	r17, r17
    1674:	0a 19       	sub	r16, r10
    1676:	1b 09       	sbc	r17, r11
    1678:	00 2e       	mov	r0, r16
    167a:	02 c0       	rjmp	.+4      	; 0x1680 <gfx_print_char_base+0x76>
    167c:	75 95       	asr	r23
    167e:	67 95       	ror	r22
    1680:	0a 94       	dec	r0
    1682:	e2 f7       	brpl	.-8      	; 0x167c <gfx_print_char_base+0x72>
    1684:	d6 2f       	mov	r29, r22
    1686:	85 e0       	ldi	r24, 0x05	; 5
    1688:	78 2e       	mov	r7, r24
    168a:	90 fe       	sbrs	r9, 0
    168c:	15 c0       	rjmp	.+42     	; 0x16b8 <gfx_print_char_base+0xae>
    168e:	f7 01       	movw	r30, r14
    1690:	80 81       	ld	r24, Z
    1692:	c7 fd       	sbrc	r28, 7
    1694:	07 c0       	rjmp	.+14     	; 0x16a4 <gfx_print_char_base+0x9a>
    1696:	68 2d       	mov	r22, r8
    1698:	0a 2c       	mov	r0, r10
    169a:	01 c0       	rjmp	.+2      	; 0x169e <gfx_print_char_base+0x94>
    169c:	88 0f       	add	r24, r24
    169e:	0a 94       	dec	r0
    16a0:	ea f7       	brpl	.-6      	; 0x169c <gfx_print_char_base+0x92>
    16a2:	08 c0       	rjmp	.+16     	; 0x16b4 <gfx_print_char_base+0xaa>
    16a4:	90 e0       	ldi	r25, 0x00	; 0
    16a6:	00 2e       	mov	r0, r16
    16a8:	02 c0       	rjmp	.+4      	; 0x16ae <gfx_print_char_base+0xa4>
    16aa:	95 95       	asr	r25
    16ac:	87 95       	ror	r24
    16ae:	0a 94       	dec	r0
    16b0:	e2 f7       	brpl	.-8      	; 0x16aa <gfx_print_char_base+0xa0>
    16b2:	6d 2f       	mov	r22, r29
    16b4:	0e 94 a5 0a 	call	0x154a	; 0x154a <gfx_display_write2>
    16b8:	96 94       	lsr	r9
    16ba:	ff ef       	ldi	r31, 0xFF	; 255
    16bc:	ef 1a       	sub	r14, r31
    16be:	ff 0a       	sbc	r15, r31
    16c0:	7a 94       	dec	r7
    16c2:	71 10       	cpse	r7, r1
    16c4:	e2 cf       	rjmp	.-60     	; 0x168a <gfx_print_char_base+0x80>
    16c6:	c7 fd       	sbrc	r28, 7
    16c8:	02 c0       	rjmp	.+4      	; 0x16ce <gfx_print_char_base+0xc4>
    16ca:	6c 2d       	mov	r22, r12
    16cc:	07 c0       	rjmp	.+14     	; 0x16dc <gfx_print_char_base+0xd2>
    16ce:	6f ef       	ldi	r22, 0xFF	; 255
    16d0:	70 e0       	ldi	r23, 0x00	; 0
    16d2:	02 c0       	rjmp	.+4      	; 0x16d8 <gfx_print_char_base+0xce>
    16d4:	75 95       	asr	r23
    16d6:	67 95       	ror	r22
    16d8:	0a 95       	dec	r16
    16da:	e2 f7       	brpl	.-8      	; 0x16d4 <gfx_print_char_base+0xca>
    16dc:	80 e0       	ldi	r24, 0x00	; 0
    16de:	df 91       	pop	r29
    16e0:	cf 91       	pop	r28
    16e2:	1f 91       	pop	r17
    16e4:	0f 91       	pop	r16
    16e6:	ff 90       	pop	r15
    16e8:	ef 90       	pop	r14
    16ea:	df 90       	pop	r13
    16ec:	cf 90       	pop	r12
    16ee:	bf 90       	pop	r11
    16f0:	af 90       	pop	r10
    16f2:	9f 90       	pop	r9
    16f4:	8f 90       	pop	r8
    16f6:	7f 90       	pop	r7
    16f8:	0c 94 a5 0a 	jmp	0x154a	; 0x154a <gfx_display_write2>

000016fc <gfx_print_char>:
    16fc:	1f 93       	push	r17
    16fe:	cf 93       	push	r28
    1700:	df 93       	push	r29
    1702:	d8 2f       	mov	r29, r24
    1704:	10 91 39 04 	lds	r17, 0x0439	; 0x800439 <gfx_x>
    1708:	c0 91 42 04 	lds	r28, 0x0442	; 0x800442 <gfx_y>
    170c:	c7 70       	andi	r28, 0x07	; 7
    170e:	6c 2f       	mov	r22, r28
    1710:	0e 94 05 0b 	call	0x160a	; 0x160a <gfx_print_char_base>
    1714:	cc 23       	and	r28, r28
    1716:	a9 f0       	breq	.+42     	; 0x1742 <gfx_print_char+0x46>
    1718:	60 91 42 04 	lds	r22, 0x0442	; 0x800442 <gfx_y>
    171c:	68 5f       	subi	r22, 0xF8	; 248
    171e:	81 2f       	mov	r24, r17
    1720:	0e 94 3b 0a 	call	0x1476	; 0x1476 <gfx_move>
    1724:	68 ef       	ldi	r22, 0xF8	; 248
    1726:	6c 0f       	add	r22, r28
    1728:	8d 2f       	mov	r24, r29
    172a:	0e 94 05 0b 	call	0x160a	; 0x160a <gfx_print_char_base>
    172e:	60 91 42 04 	lds	r22, 0x0442	; 0x800442 <gfx_y>
    1732:	68 50       	subi	r22, 0x08	; 8
    1734:	80 91 39 04 	lds	r24, 0x0439	; 0x800439 <gfx_x>
    1738:	df 91       	pop	r29
    173a:	cf 91       	pop	r28
    173c:	1f 91       	pop	r17
    173e:	0c 94 3b 0a 	jmp	0x1476	; 0x1476 <gfx_move>
    1742:	df 91       	pop	r29
    1744:	cf 91       	pop	r28
    1746:	1f 91       	pop	r17
    1748:	08 95       	ret

0000174a <gfx_print_text>:
    174a:	cf 93       	push	r28
    174c:	df 93       	push	r29
    174e:	ec 01       	movw	r28, r24
    1750:	89 91       	ld	r24, Y+
    1752:	88 23       	and	r24, r24
    1754:	19 f0       	breq	.+6      	; 0x175c <gfx_print_text+0x12>
    1756:	0e 94 7e 0b 	call	0x16fc	; 0x16fc <gfx_print_char>
    175a:	fa cf       	rjmp	.-12     	; 0x1750 <gfx_print_text+0x6>
    175c:	df 91       	pop	r29
    175e:	cf 91       	pop	r28
    1760:	08 95       	ret

00001762 <gfx_text_width>:
    1762:	0f 93       	push	r16
    1764:	1f 93       	push	r17
    1766:	cf 93       	push	r28
    1768:	8c 01       	movw	r16, r24
    176a:	c0 e0       	ldi	r28, 0x00	; 0
    176c:	f8 01       	movw	r30, r16
    176e:	81 91       	ld	r24, Z+
    1770:	8f 01       	movw	r16, r30
    1772:	88 23       	and	r24, r24
    1774:	31 f0       	breq	.+12     	; 0x1782 <gfx_text_width+0x20>
    1776:	0e 94 eb 0a 	call	0x15d6	; 0x15d6 <gfx_char_width>
    177a:	8c 0f       	add	r24, r28
    177c:	c1 e0       	ldi	r28, 0x01	; 1
    177e:	c8 0f       	add	r28, r24
    1780:	f5 cf       	rjmp	.-22     	; 0x176c <gfx_text_width+0xa>
    1782:	8c 2f       	mov	r24, r28
    1784:	cf 91       	pop	r28
    1786:	1f 91       	pop	r17
    1788:	0f 91       	pop	r16
    178a:	08 95       	ret

0000178c <gfx_print_text_P>:
    178c:	cf 93       	push	r28
    178e:	df 93       	push	r29
    1790:	ec 01       	movw	r28, r24
    1792:	ce 01       	movw	r24, r28
    1794:	fe 01       	movw	r30, r28
    1796:	24 91       	lpm	r18, Z
    1798:	22 23       	and	r18, r18
    179a:	31 f0       	breq	.+12     	; 0x17a8 <gfx_print_text_P+0x1c>
    179c:	21 96       	adiw	r28, 0x01	; 1
    179e:	fc 01       	movw	r30, r24
    17a0:	84 91       	lpm	r24, Z
    17a2:	0e 94 7e 0b 	call	0x16fc	; 0x16fc <gfx_print_char>
    17a6:	f5 cf       	rjmp	.-22     	; 0x1792 <gfx_print_text_P+0x6>
    17a8:	df 91       	pop	r29
    17aa:	cf 91       	pop	r28
    17ac:	08 95       	ret

000017ae <gfx_text_width_P>:
    17ae:	0f 93       	push	r16
    17b0:	1f 93       	push	r17
    17b2:	cf 93       	push	r28
    17b4:	8c 01       	movw	r16, r24
    17b6:	c0 e0       	ldi	r28, 0x00	; 0
    17b8:	c8 01       	movw	r24, r16
    17ba:	f8 01       	movw	r30, r16
    17bc:	24 91       	lpm	r18, Z
    17be:	22 23       	and	r18, r18
    17c0:	51 f0       	breq	.+20     	; 0x17d6 <gfx_text_width_P+0x28>
    17c2:	0f 5f       	subi	r16, 0xFF	; 255
    17c4:	1f 4f       	sbci	r17, 0xFF	; 255
    17c6:	fc 01       	movw	r30, r24
    17c8:	84 91       	lpm	r24, Z
    17ca:	0e 94 eb 0a 	call	0x15d6	; 0x15d6 <gfx_char_width>
    17ce:	8c 0f       	add	r24, r28
    17d0:	c1 e0       	ldi	r28, 0x01	; 1
    17d2:	c8 0f       	add	r28, r24
    17d4:	f1 cf       	rjmp	.-30     	; 0x17b8 <gfx_text_width_P+0xa>
    17d6:	8c 2f       	mov	r24, r28
    17d8:	cf 91       	pop	r28
    17da:	1f 91       	pop	r17
    17dc:	0f 91       	pop	r16
    17de:	08 95       	ret

000017e0 <gfx_init>:
    17e0:	80 e0       	ldi	r24, 0x00	; 0
    17e2:	0e 94 ef 07 	call	0xfde	; 0xfde <display_wait>
    17e6:	6f e3       	ldi	r22, 0x3F	; 63
    17e8:	80 e0       	ldi	r24, 0x00	; 0
    17ea:	0e 94 6e 07 	call	0xedc	; 0xedc <display_write>
    17ee:	80 e0       	ldi	r24, 0x00	; 0
    17f0:	0e 94 ef 07 	call	0xfde	; 0xfde <display_wait>
    17f4:	60 ec       	ldi	r22, 0xC0	; 192
    17f6:	80 e0       	ldi	r24, 0x00	; 0
    17f8:	0e 94 6e 07 	call	0xedc	; 0xedc <display_write>
    17fc:	80 e0       	ldi	r24, 0x00	; 0
    17fe:	0e 94 ef 07 	call	0xfde	; 0xfde <display_wait>
    1802:	60 e4       	ldi	r22, 0x40	; 64
    1804:	80 e0       	ldi	r24, 0x00	; 0
    1806:	0e 94 6e 07 	call	0xedc	; 0xedc <display_write>
    180a:	80 e0       	ldi	r24, 0x00	; 0
    180c:	0e 94 ef 07 	call	0xfde	; 0xfde <display_wait>
    1810:	68 eb       	ldi	r22, 0xB8	; 184
    1812:	80 e0       	ldi	r24, 0x00	; 0
    1814:	0e 94 6e 07 	call	0xedc	; 0xedc <display_write>
    1818:	81 e0       	ldi	r24, 0x01	; 1
    181a:	0e 94 ef 07 	call	0xfde	; 0xfde <display_wait>
    181e:	6f e3       	ldi	r22, 0x3F	; 63
    1820:	81 e0       	ldi	r24, 0x01	; 1
    1822:	0e 94 6e 07 	call	0xedc	; 0xedc <display_write>
    1826:	81 e0       	ldi	r24, 0x01	; 1
    1828:	0e 94 ef 07 	call	0xfde	; 0xfde <display_wait>
    182c:	60 ec       	ldi	r22, 0xC0	; 192
    182e:	81 e0       	ldi	r24, 0x01	; 1
    1830:	0e 94 6e 07 	call	0xedc	; 0xedc <display_write>
    1834:	81 e0       	ldi	r24, 0x01	; 1
    1836:	0e 94 ef 07 	call	0xfde	; 0xfde <display_wait>
    183a:	60 e4       	ldi	r22, 0x40	; 64
    183c:	81 e0       	ldi	r24, 0x01	; 1
    183e:	0e 94 6e 07 	call	0xedc	; 0xedc <display_write>
    1842:	81 e0       	ldi	r24, 0x01	; 1
    1844:	0e 94 ef 07 	call	0xfde	; 0xfde <display_wait>
    1848:	68 eb       	ldi	r22, 0xB8	; 184
    184a:	81 e0       	ldi	r24, 0x01	; 1
    184c:	0e 94 6e 07 	call	0xedc	; 0xedc <display_write>
    1850:	80 e0       	ldi	r24, 0x00	; 0
    1852:	0e 94 6d 0a 	call	0x14da	; 0x14da <gfx_fill>
    1856:	81 e0       	ldi	r24, 0x01	; 1
    1858:	80 93 36 04 	sts	0x0436, r24	; 0x800436 <gfx_dm>
    185c:	08 95       	ret

0000185e <gfx_set_proportional>:
    185e:	80 93 38 04 	sts	0x0438, r24	; 0x800438 <gfx_proportional>
    1862:	08 95       	ret

00001864 <gfx_get_proportional>:
    1864:	80 91 38 04 	lds	r24, 0x0438	; 0x800438 <gfx_proportional>
    1868:	08 95       	ret

0000186a <gfx_hline>:
    186a:	cf 93       	push	r28
    186c:	df 93       	push	r29
    186e:	90 91 42 04 	lds	r25, 0x0442	; 0x800442 <gfx_y>
    1872:	97 70       	andi	r25, 0x07	; 7
    1874:	c1 e0       	ldi	r28, 0x01	; 1
    1876:	01 c0       	rjmp	.+2      	; 0x187a <gfx_hline+0x10>
    1878:	cc 0f       	add	r28, r28
    187a:	9a 95       	dec	r25
    187c:	ea f7       	brpl	.-6      	; 0x1878 <gfx_hline+0xe>
    187e:	d8 2f       	mov	r29, r24
    1880:	dd 23       	and	r29, r29
    1882:	31 f0       	breq	.+12     	; 0x1890 <gfx_hline+0x26>
    1884:	6c 2f       	mov	r22, r28
    1886:	8c 2f       	mov	r24, r28
    1888:	0e 94 a5 0a 	call	0x154a	; 0x154a <gfx_display_write2>
    188c:	d1 50       	subi	r29, 0x01	; 1
    188e:	f8 cf       	rjmp	.-16     	; 0x1880 <gfx_hline+0x16>
    1890:	df 91       	pop	r29
    1892:	cf 91       	pop	r28
    1894:	08 95       	ret

00001896 <gfx_box>:
    1896:	af 92       	push	r10
    1898:	bf 92       	push	r11
    189a:	cf 92       	push	r12
    189c:	df 92       	push	r13
    189e:	ef 92       	push	r14
    18a0:	ff 92       	push	r15
    18a2:	0f 93       	push	r16
    18a4:	1f 93       	push	r17
    18a6:	cf 93       	push	r28
    18a8:	df 93       	push	r29
    18aa:	b8 2e       	mov	r11, r24
    18ac:	c6 2f       	mov	r28, r22
    18ae:	e0 90 39 04 	lds	r14, 0x0439	; 0x800439 <gfx_x>
    18b2:	10 91 42 04 	lds	r17, 0x0442	; 0x800442 <gfx_y>
    18b6:	81 2f       	mov	r24, r17
    18b8:	87 70       	andi	r24, 0x07	; 7
    18ba:	df ef       	ldi	r29, 0xFF	; 255
    18bc:	01 c0       	rjmp	.+2      	; 0x18c0 <gfx_box+0x2a>
    18be:	dd 0f       	add	r29, r29
    18c0:	8a 95       	dec	r24
    18c2:	ea f7       	brpl	.-6      	; 0x18be <gfx_box+0x28>
    18c4:	88 e0       	ldi	r24, 0x08	; 8
    18c6:	a8 2e       	mov	r10, r24
    18c8:	cc 24       	eor	r12, r12
    18ca:	ca 94       	dec	r12
    18cc:	d1 2c       	mov	r13, r1
    18ce:	cc 23       	and	r28, r28
    18d0:	21 f1       	breq	.+72     	; 0x191a <gfx_box+0x84>
    18d2:	81 2f       	mov	r24, r17
    18d4:	87 70       	andi	r24, 0x07	; 7
    18d6:	0a 2d       	mov	r16, r10
    18d8:	08 1b       	sub	r16, r24
    18da:	c0 17       	cp	r28, r16
    18dc:	48 f4       	brcc	.+18     	; 0x18f0 <gfx_box+0x5a>
    18de:	80 2f       	mov	r24, r16
    18e0:	8c 1b       	sub	r24, r28
    18e2:	96 01       	movw	r18, r12
    18e4:	02 c0       	rjmp	.+4      	; 0x18ea <gfx_box+0x54>
    18e6:	35 95       	asr	r19
    18e8:	27 95       	ror	r18
    18ea:	8a 95       	dec	r24
    18ec:	e2 f7       	brpl	.-8      	; 0x18e6 <gfx_box+0x50>
    18ee:	d2 23       	and	r29, r18
    18f0:	fb 2c       	mov	r15, r11
    18f2:	ff 20       	and	r15, r15
    18f4:	31 f0       	breq	.+12     	; 0x1902 <gfx_box+0x6c>
    18f6:	6d 2f       	mov	r22, r29
    18f8:	8d 2f       	mov	r24, r29
    18fa:	0e 94 a5 0a 	call	0x154a	; 0x154a <gfx_display_write2>
    18fe:	fa 94       	dec	r15
    1900:	f8 cf       	rjmp	.-16     	; 0x18f2 <gfx_box+0x5c>
    1902:	8c 2f       	mov	r24, r28
    1904:	0c 17       	cp	r16, r28
    1906:	08 f4       	brcc	.+2      	; 0x190a <gfx_box+0x74>
    1908:	80 2f       	mov	r24, r16
    190a:	c8 1b       	sub	r28, r24
    190c:	18 0f       	add	r17, r24
    190e:	61 2f       	mov	r22, r17
    1910:	8e 2d       	mov	r24, r14
    1912:	0e 94 3b 0a 	call	0x1476	; 0x1476 <gfx_move>
    1916:	df ef       	ldi	r29, 0xFF	; 255
    1918:	da cf       	rjmp	.-76     	; 0x18ce <gfx_box+0x38>
    191a:	df 91       	pop	r29
    191c:	cf 91       	pop	r28
    191e:	1f 91       	pop	r17
    1920:	0f 91       	pop	r16
    1922:	ff 90       	pop	r15
    1924:	ef 90       	pop	r14
    1926:	df 90       	pop	r13
    1928:	cf 90       	pop	r12
    192a:	bf 90       	pop	r11
    192c:	af 90       	pop	r10
    192e:	08 95       	ret

00001930 <gfx_vline>:
    1930:	68 2f       	mov	r22, r24
    1932:	81 e0       	ldi	r24, 0x01	; 1
    1934:	0c 94 4b 0c 	jmp	0x1896	; 0x1896 <gfx_box>

00001938 <gfx_draw_xbm>:
    1938:	2f 92       	push	r2
    193a:	3f 92       	push	r3
    193c:	4f 92       	push	r4
    193e:	5f 92       	push	r5
    1940:	6f 92       	push	r6
    1942:	7f 92       	push	r7
    1944:	8f 92       	push	r8
    1946:	9f 92       	push	r9
    1948:	af 92       	push	r10
    194a:	bf 92       	push	r11
    194c:	cf 92       	push	r12
    194e:	df 92       	push	r13
    1950:	ef 92       	push	r14
    1952:	ff 92       	push	r15
    1954:	0f 93       	push	r16
    1956:	1f 93       	push	r17
    1958:	cf 93       	push	r28
    195a:	df 93       	push	r29
    195c:	48 2e       	mov	r4, r24
    195e:	d6 2f       	mov	r29, r22
    1960:	5a 01       	movw	r10, r20
    1962:	30 90 39 04 	lds	r3, 0x0439	; 0x800439 <gfx_x>
    1966:	80 90 42 04 	lds	r8, 0x0442	; 0x800442 <gfx_y>
    196a:	88 2d       	mov	r24, r8
    196c:	87 70       	andi	r24, 0x07	; 7
    196e:	9f ef       	ldi	r25, 0xFF	; 255
    1970:	99 2e       	mov	r9, r25
    1972:	01 c0       	rjmp	.+2      	; 0x1976 <gfx_draw_xbm+0x3e>
    1974:	99 0c       	add	r9, r9
    1976:	8a 95       	dec	r24
    1978:	ea f7       	brpl	.-6      	; 0x1974 <gfx_draw_xbm+0x3c>
    197a:	24 2d       	mov	r18, r4
    197c:	30 e0       	ldi	r19, 0x00	; 0
    197e:	c9 01       	movw	r24, r18
    1980:	01 97       	sbiw	r24, 0x01	; 1
    1982:	97 fd       	sbrc	r25, 7
    1984:	07 96       	adiw	r24, 0x07	; 7
    1986:	23 e0       	ldi	r18, 0x03	; 3
    1988:	95 95       	asr	r25
    198a:	87 95       	ror	r24
    198c:	2a 95       	dec	r18
    198e:	e1 f7       	brne	.-8      	; 0x1988 <gfx_draw_xbm+0x50>
    1990:	c1 e0       	ldi	r28, 0x01	; 1
    1992:	c8 0f       	add	r28, r24
    1994:	ec 2e       	mov	r14, r28
    1996:	f1 2c       	mov	r15, r1
    1998:	67 01       	movw	r12, r14
    199a:	33 e0       	ldi	r19, 0x03	; 3
    199c:	cc 0c       	add	r12, r12
    199e:	dd 1c       	adc	r13, r13
    19a0:	3a 95       	dec	r19
    19a2:	e1 f7       	brne	.-8      	; 0x199c <gfx_draw_xbm+0x64>
    19a4:	51 2c       	mov	r5, r1
    19a6:	48 e0       	ldi	r20, 0x08	; 8
    19a8:	24 2e       	mov	r2, r20
    19aa:	dd 23       	and	r29, r29
    19ac:	09 f4       	brne	.+2      	; 0x19b0 <gfx_draw_xbm+0x78>
    19ae:	56 c0       	rjmp	.+172    	; 0x1a5c <gfx_draw_xbm+0x124>
    19b0:	88 2d       	mov	r24, r8
    19b2:	87 70       	andi	r24, 0x07	; 7
    19b4:	72 2c       	mov	r7, r2
    19b6:	78 1a       	sub	r7, r24
    19b8:	d7 15       	cp	r29, r7
    19ba:	50 f4       	brcc	.+20     	; 0x19d0 <gfx_draw_xbm+0x98>
    19bc:	87 2d       	mov	r24, r7
    19be:	8d 1b       	sub	r24, r29
    19c0:	2f ef       	ldi	r18, 0xFF	; 255
    19c2:	30 e0       	ldi	r19, 0x00	; 0
    19c4:	02 c0       	rjmp	.+4      	; 0x19ca <gfx_draw_xbm+0x92>
    19c6:	35 95       	asr	r19
    19c8:	27 95       	ror	r18
    19ca:	8a 95       	dec	r24
    19cc:	e2 f7       	brpl	.-8      	; 0x19c6 <gfx_draw_xbm+0x8e>
    19ce:	92 22       	and	r9, r18
    19d0:	05 2d       	mov	r16, r5
    19d2:	07 0d       	add	r16, r7
    19d4:	c0 9f       	mul	r28, r16
    19d6:	80 01       	movw	r16, r0
    19d8:	11 24       	eor	r1, r1
    19da:	61 2c       	mov	r6, r1
    19dc:	64 14       	cp	r6, r4
    19de:	81 f1       	breq	.+96     	; 0x1a40 <gfx_draw_xbm+0x108>
    19e0:	86 2d       	mov	r24, r6
    19e2:	87 70       	andi	r24, 0x07	; 7
    19e4:	59 f0       	breq	.+22     	; 0x19fc <gfx_draw_xbm+0xc4>
    19e6:	e8 2f       	mov	r30, r24
    19e8:	f0 e0       	ldi	r31, 0x00	; 0
    19ea:	e6 5c       	subi	r30, 0xC6	; 198
    19ec:	fb 4f       	sbci	r31, 0xFB	; 251
    19ee:	80 81       	ld	r24, Z
    19f0:	69 2d       	mov	r22, r9
    19f2:	89 21       	and	r24, r9
    19f4:	0e 94 a5 0a 	call	0x154a	; 0x154a <gfx_display_write2>
    19f8:	63 94       	inc	r6
    19fa:	f0 cf       	rjmp	.-32     	; 0x19dc <gfx_draw_xbm+0xa4>
    19fc:	96 2d       	mov	r25, r6
    19fe:	96 95       	lsr	r25
    1a00:	96 95       	lsr	r25
    1a02:	96 95       	lsr	r25
    1a04:	f8 01       	movw	r30, r16
    1a06:	e9 0f       	add	r30, r25
    1a08:	f1 1d       	adc	r31, r1
    1a0a:	ec 19       	sub	r30, r12
    1a0c:	fd 09       	sbc	r31, r13
    1a0e:	ea 0d       	add	r30, r10
    1a10:	fb 1d       	adc	r31, r11
    1a12:	28 e0       	ldi	r18, 0x08	; 8
    1a14:	30 e0       	ldi	r19, 0x00	; 0
    1a16:	40 81       	ld	r20, Z
    1a18:	aa e3       	ldi	r26, 0x3A	; 58
    1a1a:	b4 e0       	ldi	r27, 0x04	; 4
    1a1c:	9c 91       	ld	r25, X
    1a1e:	96 95       	lsr	r25
    1a20:	40 fd       	sbrc	r20, 0
    1a22:	90 68       	ori	r25, 0x80	; 128
    1a24:	9c 93       	st	X, r25
    1a26:	46 95       	lsr	r20
    1a28:	11 96       	adiw	r26, 0x01	; 1
    1a2a:	62 e4       	ldi	r22, 0x42	; 66
    1a2c:	74 e0       	ldi	r23, 0x04	; 4
    1a2e:	6a 17       	cp	r22, r26
    1a30:	7b 07       	cpc	r23, r27
    1a32:	a1 f7       	brne	.-24     	; 0x1a1c <gfx_draw_xbm+0xe4>
    1a34:	ee 0d       	add	r30, r14
    1a36:	ff 1d       	adc	r31, r15
    1a38:	21 50       	subi	r18, 0x01	; 1
    1a3a:	31 09       	sbc	r19, r1
    1a3c:	61 f7       	brne	.-40     	; 0x1a16 <gfx_draw_xbm+0xde>
    1a3e:	d3 cf       	rjmp	.-90     	; 0x19e6 <gfx_draw_xbm+0xae>
    1a40:	8d 2f       	mov	r24, r29
    1a42:	7d 16       	cp	r7, r29
    1a44:	08 f4       	brcc	.+2      	; 0x1a48 <gfx_draw_xbm+0x110>
    1a46:	87 2d       	mov	r24, r7
    1a48:	d8 1b       	sub	r29, r24
    1a4a:	88 0e       	add	r8, r24
    1a4c:	58 0e       	add	r5, r24
    1a4e:	68 2d       	mov	r22, r8
    1a50:	83 2d       	mov	r24, r3
    1a52:	0e 94 3b 0a 	call	0x1476	; 0x1476 <gfx_move>
    1a56:	99 24       	eor	r9, r9
    1a58:	9a 94       	dec	r9
    1a5a:	a7 cf       	rjmp	.-178    	; 0x19aa <gfx_draw_xbm+0x72>
    1a5c:	df 91       	pop	r29
    1a5e:	cf 91       	pop	r28
    1a60:	1f 91       	pop	r17
    1a62:	0f 91       	pop	r16
    1a64:	ff 90       	pop	r15
    1a66:	ef 90       	pop	r14
    1a68:	df 90       	pop	r13
    1a6a:	cf 90       	pop	r12
    1a6c:	bf 90       	pop	r11
    1a6e:	af 90       	pop	r10
    1a70:	9f 90       	pop	r9
    1a72:	8f 90       	pop	r8
    1a74:	7f 90       	pop	r7
    1a76:	6f 90       	pop	r6
    1a78:	5f 90       	pop	r5
    1a7a:	4f 90       	pop	r4
    1a7c:	3f 90       	pop	r3
    1a7e:	2f 90       	pop	r2
    1a80:	08 95       	ret

00001a82 <gfx_draw_xbm_P>:
    1a82:	2f 92       	push	r2
    1a84:	3f 92       	push	r3
    1a86:	4f 92       	push	r4
    1a88:	5f 92       	push	r5
    1a8a:	6f 92       	push	r6
    1a8c:	7f 92       	push	r7
    1a8e:	8f 92       	push	r8
    1a90:	9f 92       	push	r9
    1a92:	af 92       	push	r10
    1a94:	bf 92       	push	r11
    1a96:	cf 92       	push	r12
    1a98:	df 92       	push	r13
    1a9a:	ef 92       	push	r14
    1a9c:	ff 92       	push	r15
    1a9e:	0f 93       	push	r16
    1aa0:	1f 93       	push	r17
    1aa2:	cf 93       	push	r28
    1aa4:	df 93       	push	r29
    1aa6:	48 2e       	mov	r4, r24
    1aa8:	d6 2f       	mov	r29, r22
    1aaa:	4a 01       	movw	r8, r20
    1aac:	30 90 39 04 	lds	r3, 0x0439	; 0x800439 <gfx_x>
    1ab0:	00 91 42 04 	lds	r16, 0x0442	; 0x800442 <gfx_y>
    1ab4:	80 2f       	mov	r24, r16
    1ab6:	87 70       	andi	r24, 0x07	; 7
    1ab8:	1f ef       	ldi	r17, 0xFF	; 255
    1aba:	01 c0       	rjmp	.+2      	; 0x1abe <gfx_draw_xbm_P+0x3c>
    1abc:	11 0f       	add	r17, r17
    1abe:	8a 95       	dec	r24
    1ac0:	ea f7       	brpl	.-6      	; 0x1abc <gfx_draw_xbm_P+0x3a>
    1ac2:	24 2d       	mov	r18, r4
    1ac4:	30 e0       	ldi	r19, 0x00	; 0
    1ac6:	c9 01       	movw	r24, r18
    1ac8:	01 97       	sbiw	r24, 0x01	; 1
    1aca:	97 fd       	sbrc	r25, 7
    1acc:	07 96       	adiw	r24, 0x07	; 7
    1ace:	23 e0       	ldi	r18, 0x03	; 3
    1ad0:	95 95       	asr	r25
    1ad2:	87 95       	ror	r24
    1ad4:	2a 95       	dec	r18
    1ad6:	e1 f7       	brne	.-8      	; 0x1ad0 <gfx_draw_xbm_P+0x4e>
    1ad8:	c1 e0       	ldi	r28, 0x01	; 1
    1ada:	c8 0f       	add	r28, r24
    1adc:	cc 2e       	mov	r12, r28
    1ade:	d1 2c       	mov	r13, r1
    1ae0:	56 01       	movw	r10, r12
    1ae2:	33 e0       	ldi	r19, 0x03	; 3
    1ae4:	aa 0c       	add	r10, r10
    1ae6:	bb 1c       	adc	r11, r11
    1ae8:	3a 95       	dec	r19
    1aea:	e1 f7       	brne	.-8      	; 0x1ae4 <gfx_draw_xbm_P+0x62>
    1aec:	51 2c       	mov	r5, r1
    1aee:	48 e0       	ldi	r20, 0x08	; 8
    1af0:	24 2e       	mov	r2, r20
    1af2:	dd 23       	and	r29, r29
    1af4:	09 f4       	brne	.+2      	; 0x1af8 <gfx_draw_xbm_P+0x76>
    1af6:	55 c0       	rjmp	.+170    	; 0x1ba2 <gfx_draw_xbm_P+0x120>
    1af8:	80 2f       	mov	r24, r16
    1afa:	87 70       	andi	r24, 0x07	; 7
    1afc:	72 2c       	mov	r7, r2
    1afe:	78 1a       	sub	r7, r24
    1b00:	d7 15       	cp	r29, r7
    1b02:	50 f4       	brcc	.+20     	; 0x1b18 <gfx_draw_xbm_P+0x96>
    1b04:	87 2d       	mov	r24, r7
    1b06:	8d 1b       	sub	r24, r29
    1b08:	2f ef       	ldi	r18, 0xFF	; 255
    1b0a:	30 e0       	ldi	r19, 0x00	; 0
    1b0c:	02 c0       	rjmp	.+4      	; 0x1b12 <gfx_draw_xbm_P+0x90>
    1b0e:	35 95       	asr	r19
    1b10:	27 95       	ror	r18
    1b12:	8a 95       	dec	r24
    1b14:	e2 f7       	brpl	.-8      	; 0x1b0e <gfx_draw_xbm_P+0x8c>
    1b16:	12 23       	and	r17, r18
    1b18:	e5 2c       	mov	r14, r5
    1b1a:	e7 0c       	add	r14, r7
    1b1c:	ce 9d       	mul	r28, r14
    1b1e:	70 01       	movw	r14, r0
    1b20:	11 24       	eor	r1, r1
    1b22:	61 2c       	mov	r6, r1
    1b24:	64 14       	cp	r6, r4
    1b26:	81 f1       	breq	.+96     	; 0x1b88 <gfx_draw_xbm_P+0x106>
    1b28:	86 2d       	mov	r24, r6
    1b2a:	87 70       	andi	r24, 0x07	; 7
    1b2c:	59 f0       	breq	.+22     	; 0x1b44 <gfx_draw_xbm_P+0xc2>
    1b2e:	e8 2f       	mov	r30, r24
    1b30:	f0 e0       	ldi	r31, 0x00	; 0
    1b32:	e6 5c       	subi	r30, 0xC6	; 198
    1b34:	fb 4f       	sbci	r31, 0xFB	; 251
    1b36:	80 81       	ld	r24, Z
    1b38:	61 2f       	mov	r22, r17
    1b3a:	81 23       	and	r24, r17
    1b3c:	0e 94 a5 0a 	call	0x154a	; 0x154a <gfx_display_write2>
    1b40:	63 94       	inc	r6
    1b42:	f0 cf       	rjmp	.-32     	; 0x1b24 <gfx_draw_xbm_P+0xa2>
    1b44:	96 2d       	mov	r25, r6
    1b46:	96 95       	lsr	r25
    1b48:	96 95       	lsr	r25
    1b4a:	96 95       	lsr	r25
    1b4c:	f7 01       	movw	r30, r14
    1b4e:	e9 0f       	add	r30, r25
    1b50:	f1 1d       	adc	r31, r1
    1b52:	ea 19       	sub	r30, r10
    1b54:	fb 09       	sbc	r31, r11
    1b56:	e8 0d       	add	r30, r8
    1b58:	f9 1d       	adc	r31, r9
    1b5a:	28 e0       	ldi	r18, 0x08	; 8
    1b5c:	30 e0       	ldi	r19, 0x00	; 0
    1b5e:	44 91       	lpm	r20, Z
    1b60:	aa e3       	ldi	r26, 0x3A	; 58
    1b62:	b4 e0       	ldi	r27, 0x04	; 4
    1b64:	9c 91       	ld	r25, X
    1b66:	96 95       	lsr	r25
    1b68:	40 fd       	sbrc	r20, 0
    1b6a:	90 68       	ori	r25, 0x80	; 128
    1b6c:	9c 93       	st	X, r25
    1b6e:	46 95       	lsr	r20
    1b70:	11 96       	adiw	r26, 0x01	; 1
    1b72:	62 e4       	ldi	r22, 0x42	; 66
    1b74:	74 e0       	ldi	r23, 0x04	; 4
    1b76:	6a 17       	cp	r22, r26
    1b78:	7b 07       	cpc	r23, r27
    1b7a:	a1 f7       	brne	.-24     	; 0x1b64 <gfx_draw_xbm_P+0xe2>
    1b7c:	ec 0d       	add	r30, r12
    1b7e:	fd 1d       	adc	r31, r13
    1b80:	21 50       	subi	r18, 0x01	; 1
    1b82:	31 09       	sbc	r19, r1
    1b84:	61 f7       	brne	.-40     	; 0x1b5e <gfx_draw_xbm_P+0xdc>
    1b86:	d3 cf       	rjmp	.-90     	; 0x1b2e <gfx_draw_xbm_P+0xac>
    1b88:	8d 2f       	mov	r24, r29
    1b8a:	7d 16       	cp	r7, r29
    1b8c:	08 f4       	brcc	.+2      	; 0x1b90 <gfx_draw_xbm_P+0x10e>
    1b8e:	87 2d       	mov	r24, r7
    1b90:	d8 1b       	sub	r29, r24
    1b92:	08 0f       	add	r16, r24
    1b94:	58 0e       	add	r5, r24
    1b96:	60 2f       	mov	r22, r16
    1b98:	83 2d       	mov	r24, r3
    1b9a:	0e 94 3b 0a 	call	0x1476	; 0x1476 <gfx_move>
    1b9e:	1f ef       	ldi	r17, 0xFF	; 255
    1ba0:	a8 cf       	rjmp	.-176    	; 0x1af2 <gfx_draw_xbm_P+0x70>
    1ba2:	df 91       	pop	r29
    1ba4:	cf 91       	pop	r28
    1ba6:	1f 91       	pop	r17
    1ba8:	0f 91       	pop	r16
    1baa:	ff 90       	pop	r15
    1bac:	ef 90       	pop	r14
    1bae:	df 90       	pop	r13
    1bb0:	cf 90       	pop	r12
    1bb2:	bf 90       	pop	r11
    1bb4:	af 90       	pop	r10
    1bb6:	9f 90       	pop	r9
    1bb8:	8f 90       	pop	r8
    1bba:	7f 90       	pop	r7
    1bbc:	6f 90       	pop	r6
    1bbe:	5f 90       	pop	r5
    1bc0:	4f 90       	pop	r4
    1bc2:	3f 90       	pop	r3
    1bc4:	2f 90       	pop	r2
    1bc6:	08 95       	ret

00001bc8 <gfx_pixel>:
    1bc8:	90 91 42 04 	lds	r25, 0x0442	; 0x800442 <gfx_y>
    1bcc:	97 70       	andi	r25, 0x07	; 7
    1bce:	21 e0       	ldi	r18, 0x01	; 1
    1bd0:	30 e0       	ldi	r19, 0x00	; 0
    1bd2:	01 c0       	rjmp	.+2      	; 0x1bd6 <gfx_pixel+0xe>
    1bd4:	22 0f       	add	r18, r18
    1bd6:	9a 95       	dec	r25
    1bd8:	ea f7       	brpl	.-6      	; 0x1bd4 <gfx_pixel+0xc>
    1bda:	88 23       	and	r24, r24
    1bdc:	11 f0       	breq	.+4      	; 0x1be2 <gfx_pixel+0x1a>
    1bde:	62 2f       	mov	r22, r18
    1be0:	01 c0       	rjmp	.+2      	; 0x1be4 <gfx_pixel+0x1c>
    1be2:	60 e0       	ldi	r22, 0x00	; 0
    1be4:	82 2f       	mov	r24, r18
    1be6:	0c 94 a5 0a 	jmp	0x154a	; 0x154a <gfx_display_write2>

00001bea <gfx_lineTo>:
    1bea:	bf 92       	push	r11
    1bec:	cf 92       	push	r12
    1bee:	df 92       	push	r13
    1bf0:	ef 92       	push	r14
    1bf2:	ff 92       	push	r15
    1bf4:	0f 93       	push	r16
    1bf6:	1f 93       	push	r17
    1bf8:	cf 93       	push	r28
    1bfa:	df 93       	push	r29
    1bfc:	18 2f       	mov	r17, r24
    1bfe:	06 2f       	mov	r16, r22
    1c00:	d0 91 39 04 	lds	r29, 0x0439	; 0x800439 <gfx_x>
    1c04:	80 91 42 04 	lds	r24, 0x0442	; 0x800442 <gfx_y>
    1c08:	d1 13       	cpse	r29, r17
    1c0a:	0f c0       	rjmp	.+30     	; 0x1c2a <gfx_lineTo+0x40>
    1c0c:	86 17       	cp	r24, r22
    1c0e:	20 f4       	brcc	.+8      	; 0x1c18 <gfx_lineTo+0x2e>
    1c10:	96 2f       	mov	r25, r22
    1c12:	98 1b       	sub	r25, r24
    1c14:	89 2f       	mov	r24, r25
    1c16:	06 c0       	rjmp	.+12     	; 0x1c24 <gfx_lineTo+0x3a>
    1c18:	c8 2f       	mov	r28, r24
    1c1a:	c6 1b       	sub	r28, r22
    1c1c:	81 2f       	mov	r24, r17
    1c1e:	0e 94 3b 0a 	call	0x1476	; 0x1476 <gfx_move>
    1c22:	8c 2f       	mov	r24, r28
    1c24:	0e 94 98 0c 	call	0x1930	; 0x1930 <gfx_vline>
    1c28:	5a c0       	rjmp	.+180    	; 0x1cde <gfx_lineTo+0xf4>
    1c2a:	f8 2e       	mov	r15, r24
    1c2c:	68 13       	cpse	r22, r24
    1c2e:	0d c0       	rjmp	.+26     	; 0x1c4a <gfx_lineTo+0x60>
    1c30:	d1 17       	cp	r29, r17
    1c32:	18 f4       	brcc	.+6      	; 0x1c3a <gfx_lineTo+0x50>
    1c34:	81 2f       	mov	r24, r17
    1c36:	8d 1b       	sub	r24, r29
    1c38:	05 c0       	rjmp	.+10     	; 0x1c44 <gfx_lineTo+0x5a>
    1c3a:	d1 1b       	sub	r29, r17
    1c3c:	81 2f       	mov	r24, r17
    1c3e:	0e 94 3b 0a 	call	0x1476	; 0x1476 <gfx_move>
    1c42:	8d 2f       	mov	r24, r29
    1c44:	0e 94 35 0c 	call	0x186a	; 0x186a <gfx_hline>
    1c48:	4a c0       	rjmp	.+148    	; 0x1cde <gfx_lineTo+0xf4>
    1c4a:	1d 17       	cp	r17, r29
    1c4c:	28 f4       	brcc	.+10     	; 0x1c58 <gfx_lineTo+0x6e>
    1c4e:	dd 2e       	mov	r13, r29
    1c50:	d1 1a       	sub	r13, r17
    1c52:	cc 24       	eor	r12, r12
    1c54:	ca 94       	dec	r12
    1c56:	09 c0       	rjmp	.+18     	; 0x1c6a <gfx_lineTo+0x80>
    1c58:	d1 17       	cp	r29, r17
    1c5a:	28 f4       	brcc	.+10     	; 0x1c66 <gfx_lineTo+0x7c>
    1c5c:	d1 2e       	mov	r13, r17
    1c5e:	dd 1a       	sub	r13, r29
    1c60:	cc 24       	eor	r12, r12
    1c62:	c3 94       	inc	r12
    1c64:	02 c0       	rjmp	.+4      	; 0x1c6a <gfx_lineTo+0x80>
    1c66:	c1 2c       	mov	r12, r1
    1c68:	d1 2c       	mov	r13, r1
    1c6a:	08 17       	cp	r16, r24
    1c6c:	28 f4       	brcc	.+10     	; 0x1c78 <gfx_lineTo+0x8e>
    1c6e:	c8 2f       	mov	r28, r24
    1c70:	c0 1b       	sub	r28, r16
    1c72:	bb 24       	eor	r11, r11
    1c74:	ba 94       	dec	r11
    1c76:	09 c0       	rjmp	.+18     	; 0x1c8a <gfx_lineTo+0xa0>
    1c78:	80 17       	cp	r24, r16
    1c7a:	28 f4       	brcc	.+10     	; 0x1c86 <gfx_lineTo+0x9c>
    1c7c:	c0 2f       	mov	r28, r16
    1c7e:	c8 1b       	sub	r28, r24
    1c80:	bb 24       	eor	r11, r11
    1c82:	b3 94       	inc	r11
    1c84:	02 c0       	rjmp	.+4      	; 0x1c8a <gfx_lineTo+0xa0>
    1c86:	b1 2c       	mov	r11, r1
    1c88:	c0 e0       	ldi	r28, 0x00	; 0
    1c8a:	81 e0       	ldi	r24, 0x01	; 1
    1c8c:	0e 94 e4 0d 	call	0x1bc8	; 0x1bc8 <gfx_pixel>
    1c90:	cd 15       	cp	r28, r13
    1c92:	98 f4       	brcc	.+38     	; 0x1cba <gfx_lineTo+0xd0>
    1c94:	ed 2c       	mov	r14, r13
    1c96:	e6 94       	lsr	r14
    1c98:	e1 94       	neg	r14
    1c9a:	ec 0e       	add	r14, r28
    1c9c:	dc 0d       	add	r29, r12
    1c9e:	1e 14       	cp	r1, r14
    1ca0:	14 f4       	brge	.+4      	; 0x1ca6 <gfx_lineTo+0xbc>
    1ca2:	ed 18       	sub	r14, r13
    1ca4:	fb 0c       	add	r15, r11
    1ca6:	6f 2d       	mov	r22, r15
    1ca8:	8d 2f       	mov	r24, r29
    1caa:	0e 94 3b 0a 	call	0x1476	; 0x1476 <gfx_move>
    1cae:	81 e0       	ldi	r24, 0x01	; 1
    1cb0:	0e 94 e4 0d 	call	0x1bc8	; 0x1bc8 <gfx_pixel>
    1cb4:	1d 13       	cpse	r17, r29
    1cb6:	f1 cf       	rjmp	.-30     	; 0x1c9a <gfx_lineTo+0xb0>
    1cb8:	12 c0       	rjmp	.+36     	; 0x1cde <gfx_lineTo+0xf4>
    1cba:	ec 2e       	mov	r14, r28
    1cbc:	e6 94       	lsr	r14
    1cbe:	e1 94       	neg	r14
    1cc0:	ed 0c       	add	r14, r13
    1cc2:	fb 0c       	add	r15, r11
    1cc4:	1e 14       	cp	r1, r14
    1cc6:	14 f4       	brge	.+4      	; 0x1ccc <gfx_lineTo+0xe2>
    1cc8:	ec 1a       	sub	r14, r28
    1cca:	dc 0d       	add	r29, r12
    1ccc:	6f 2d       	mov	r22, r15
    1cce:	8d 2f       	mov	r24, r29
    1cd0:	0e 94 3b 0a 	call	0x1476	; 0x1476 <gfx_move>
    1cd4:	81 e0       	ldi	r24, 0x01	; 1
    1cd6:	0e 94 e4 0d 	call	0x1bc8	; 0x1bc8 <gfx_pixel>
    1cda:	0f 11       	cpse	r16, r15
    1cdc:	f1 cf       	rjmp	.-30     	; 0x1cc0 <gfx_lineTo+0xd6>
    1cde:	60 2f       	mov	r22, r16
    1ce0:	81 2f       	mov	r24, r17
    1ce2:	df 91       	pop	r29
    1ce4:	cf 91       	pop	r28
    1ce6:	1f 91       	pop	r17
    1ce8:	0f 91       	pop	r16
    1cea:	ff 90       	pop	r15
    1cec:	ef 90       	pop	r14
    1cee:	df 90       	pop	r13
    1cf0:	cf 90       	pop	r12
    1cf2:	bf 90       	pop	r11
    1cf4:	0c 94 3b 0a 	jmp	0x1476	; 0x1476 <gfx_move>

00001cf8 <gfx_term_clear>:
    1cf8:	80 e0       	ldi	r24, 0x00	; 0
    1cfa:	0e 94 6d 0a 	call	0x14da	; 0x14da <gfx_fill>
    1cfe:	10 92 37 04 	sts	0x0437, r1	; 0x800437 <gfx_term_row>
    1d02:	10 92 43 04 	sts	0x0443, r1	; 0x800443 <gfx_term_col>
    1d06:	08 95       	ret

00001d08 <gfx_term_goto>:
    1d08:	86 31       	cpi	r24, 0x16	; 22
    1d0a:	30 f4       	brcc	.+12     	; 0x1d18 <gfx_term_goto+0x10>
    1d0c:	68 30       	cpi	r22, 0x08	; 8
    1d0e:	20 f4       	brcc	.+8      	; 0x1d18 <gfx_term_goto+0x10>
    1d10:	60 93 37 04 	sts	0x0437, r22	; 0x800437 <gfx_term_row>
    1d14:	80 93 43 04 	sts	0x0443, r24	; 0x800443 <gfx_term_col>
    1d18:	08 95       	ret

00001d1a <gfx_term_scroll>:
    1d1a:	cf 92       	push	r12
    1d1c:	df 92       	push	r13
    1d1e:	ef 92       	push	r14
    1d20:	ff 92       	push	r15
    1d22:	0f 93       	push	r16
    1d24:	1f 93       	push	r17
    1d26:	cf 93       	push	r28
    1d28:	df 93       	push	r29
    1d2a:	c9 eb       	ldi	r28, 0xB9	; 185
    1d2c:	22 e4       	ldi	r18, 0x42	; 66
    1d2e:	c2 2e       	mov	r12, r18
    1d30:	24 e0       	ldi	r18, 0x04	; 4
    1d32:	d2 2e       	mov	r13, r18
    1d34:	10 e0       	ldi	r17, 0x00	; 0
    1d36:	d0 e0       	ldi	r29, 0x00	; 0
    1d38:	07 e4       	ldi	r16, 0x47	; 71
    1d3a:	0c 0f       	add	r16, r28
    1d3c:	d8 30       	cpi	r29, 0x08	; 8
    1d3e:	50 f5       	brcc	.+84     	; 0x1d94 <gfx_term_scroll+0x7a>
    1d40:	80 e0       	ldi	r24, 0x00	; 0
    1d42:	0e 94 ef 07 	call	0xfde	; 0xfde <display_wait>
    1d46:	6c 2f       	mov	r22, r28
    1d48:	80 e0       	ldi	r24, 0x00	; 0
    1d4a:	0e 94 6e 07 	call	0xedc	; 0xedc <display_write>
    1d4e:	80 e0       	ldi	r24, 0x00	; 0
    1d50:	0e 94 ef 07 	call	0xfde	; 0xfde <display_wait>
    1d54:	60 e4       	ldi	r22, 0x40	; 64
    1d56:	61 0f       	add	r22, r17
    1d58:	80 e0       	ldi	r24, 0x00	; 0
    1d5a:	0e 94 6e 07 	call	0xedc	; 0xedc <display_write>
    1d5e:	82 e0       	ldi	r24, 0x02	; 2
    1d60:	0e 94 b0 07 	call	0xf60	; 0xf60 <display_read>
    1d64:	9a e3       	ldi	r25, 0x3A	; 58
    1d66:	e9 2e       	mov	r14, r25
    1d68:	94 e0       	ldi	r25, 0x04	; 4
    1d6a:	f9 2e       	mov	r15, r25
    1d6c:	82 e0       	ldi	r24, 0x02	; 2
    1d6e:	0e 94 b0 07 	call	0xf60	; 0xf60 <display_read>
    1d72:	f7 01       	movw	r30, r14
    1d74:	81 93       	st	Z+, r24
    1d76:	7f 01       	movw	r14, r30
    1d78:	f2 e4       	ldi	r31, 0x42	; 66
    1d7a:	ef 16       	cp	r14, r31
    1d7c:	f4 e0       	ldi	r31, 0x04	; 4
    1d7e:	ff 06       	cpc	r15, r31
    1d80:	a9 f7       	brne	.-22     	; 0x1d6c <gfx_term_scroll+0x52>
    1d82:	60 2f       	mov	r22, r16
    1d84:	8d 2f       	mov	r24, r29
    1d86:	0e 94 e8 09 	call	0x13d0	; 0x13d0 <gfx_store_disp_tile>
    1d8a:	df 5f       	subi	r29, 0xFF	; 255
    1d8c:	18 5f       	subi	r17, 0xF8	; 248
    1d8e:	d0 31       	cpi	r29, 0x10	; 16
    1d90:	a9 f6       	brne	.-86     	; 0x1d3c <gfx_term_scroll+0x22>
    1d92:	1f c0       	rjmp	.+62     	; 0x1dd2 <gfx_term_scroll+0xb8>
    1d94:	81 e0       	ldi	r24, 0x01	; 1
    1d96:	0e 94 ef 07 	call	0xfde	; 0xfde <display_wait>
    1d9a:	6c 2f       	mov	r22, r28
    1d9c:	81 e0       	ldi	r24, 0x01	; 1
    1d9e:	0e 94 6e 07 	call	0xedc	; 0xedc <display_write>
    1da2:	81 e0       	ldi	r24, 0x01	; 1
    1da4:	0e 94 ef 07 	call	0xfde	; 0xfde <display_wait>
    1da8:	61 2f       	mov	r22, r17
    1daa:	81 e0       	ldi	r24, 0x01	; 1
    1dac:	0e 94 6e 07 	call	0xedc	; 0xedc <display_write>
    1db0:	83 e0       	ldi	r24, 0x03	; 3
    1db2:	0e 94 b0 07 	call	0xf60	; 0xf60 <display_read>
    1db6:	8a e3       	ldi	r24, 0x3A	; 58
    1db8:	e8 2e       	mov	r14, r24
    1dba:	84 e0       	ldi	r24, 0x04	; 4
    1dbc:	f8 2e       	mov	r15, r24
    1dbe:	83 e0       	ldi	r24, 0x03	; 3
    1dc0:	0e 94 b0 07 	call	0xf60	; 0xf60 <display_read>
    1dc4:	f7 01       	movw	r30, r14
    1dc6:	81 93       	st	Z+, r24
    1dc8:	7f 01       	movw	r14, r30
    1dca:	ce 16       	cp	r12, r30
    1dcc:	df 06       	cpc	r13, r31
    1dce:	b9 f7       	brne	.-18     	; 0x1dbe <gfx_term_scroll+0xa4>
    1dd0:	d8 cf       	rjmp	.-80     	; 0x1d82 <gfx_term_scroll+0x68>
    1dd2:	cf 5f       	subi	r28, 0xFF	; 255
    1dd4:	c0 3c       	cpi	r28, 0xC0	; 192
    1dd6:	09 f0       	breq	.+2      	; 0x1dda <gfx_term_scroll+0xc0>
    1dd8:	ad cf       	rjmp	.-166    	; 0x1d34 <gfx_term_scroll+0x1a>
    1dda:	ea e3       	ldi	r30, 0x3A	; 58
    1ddc:	f4 e0       	ldi	r31, 0x04	; 4
    1dde:	82 e4       	ldi	r24, 0x42	; 66
    1de0:	94 e0       	ldi	r25, 0x04	; 4
    1de2:	11 92       	st	Z+, r1
    1de4:	8e 17       	cp	r24, r30
    1de6:	9f 07       	cpc	r25, r31
    1de8:	e1 f7       	brne	.-8      	; 0x1de2 <gfx_term_scroll+0xc8>
    1dea:	c0 e0       	ldi	r28, 0x00	; 0
    1dec:	67 e0       	ldi	r22, 0x07	; 7
    1dee:	8c 2f       	mov	r24, r28
    1df0:	0e 94 e8 09 	call	0x13d0	; 0x13d0 <gfx_store_disp_tile>
    1df4:	cf 5f       	subi	r28, 0xFF	; 255
    1df6:	c0 31       	cpi	r28, 0x10	; 16
    1df8:	c9 f7       	brne	.-14     	; 0x1dec <gfx_term_scroll+0xd2>
    1dfa:	80 91 37 04 	lds	r24, 0x0437	; 0x800437 <gfx_term_row>
    1dfe:	88 23       	and	r24, r24
    1e00:	19 f0       	breq	.+6      	; 0x1e08 <gfx_term_scroll+0xee>
    1e02:	81 50       	subi	r24, 0x01	; 1
    1e04:	80 93 37 04 	sts	0x0437, r24	; 0x800437 <gfx_term_row>
    1e08:	df 91       	pop	r29
    1e0a:	cf 91       	pop	r28
    1e0c:	1f 91       	pop	r17
    1e0e:	0f 91       	pop	r16
    1e10:	ff 90       	pop	r15
    1e12:	ef 90       	pop	r14
    1e14:	df 90       	pop	r13
    1e16:	cf 90       	pop	r12
    1e18:	08 95       	ret

00001e1a <gfx_term_print>:
    1e1a:	0f 93       	push	r16
    1e1c:	1f 93       	push	r17
    1e1e:	cf 93       	push	r28
    1e20:	10 92 38 04 	sts	0x0438, r1	; 0x800438 <gfx_proportional>
    1e24:	8c 01       	movw	r16, r24
    1e26:	f8 01       	movw	r30, r16
    1e28:	c1 91       	ld	r28, Z+
    1e2a:	8f 01       	movw	r16, r30
    1e2c:	cc 23       	and	r28, r28
    1e2e:	b9 f1       	breq	.+110    	; 0x1e9e <gfx_term_print+0x84>
    1e30:	ca 30       	cpi	r28, 0x0A	; 10
    1e32:	69 f4       	brne	.+26     	; 0x1e4e <gfx_term_print+0x34>
    1e34:	10 92 43 04 	sts	0x0443, r1	; 0x800443 <gfx_term_col>
    1e38:	80 91 37 04 	lds	r24, 0x0437	; 0x800437 <gfx_term_row>
    1e3c:	8f 5f       	subi	r24, 0xFF	; 255
    1e3e:	80 93 37 04 	sts	0x0437, r24	; 0x800437 <gfx_term_row>
    1e42:	88 30       	cpi	r24, 0x08	; 8
    1e44:	81 f7       	brne	.-32     	; 0x1e26 <gfx_term_print+0xc>
    1e46:	81 e0       	ldi	r24, 0x01	; 1
    1e48:	0e 94 8d 0e 	call	0x1d1a	; 0x1d1a <gfx_term_scroll>
    1e4c:	ec cf       	rjmp	.-40     	; 0x1e26 <gfx_term_print+0xc>
    1e4e:	cd 30       	cpi	r28, 0x0D	; 13
    1e50:	51 f3       	breq	.-44     	; 0x1e26 <gfx_term_print+0xc>
    1e52:	80 91 43 04 	lds	r24, 0x0443	; 0x800443 <gfx_term_col>
    1e56:	85 31       	cpi	r24, 0x15	; 21
    1e58:	60 f0       	brcs	.+24     	; 0x1e72 <gfx_term_print+0x58>
    1e5a:	10 92 43 04 	sts	0x0443, r1	; 0x800443 <gfx_term_col>
    1e5e:	80 91 37 04 	lds	r24, 0x0437	; 0x800437 <gfx_term_row>
    1e62:	8f 5f       	subi	r24, 0xFF	; 255
    1e64:	80 93 37 04 	sts	0x0437, r24	; 0x800437 <gfx_term_row>
    1e68:	88 30       	cpi	r24, 0x08	; 8
    1e6a:	19 f4       	brne	.+6      	; 0x1e72 <gfx_term_print+0x58>
    1e6c:	81 e0       	ldi	r24, 0x01	; 1
    1e6e:	0e 94 8d 0e 	call	0x1d1a	; 0x1d1a <gfx_term_scroll>
    1e72:	60 91 37 04 	lds	r22, 0x0437	; 0x800437 <gfx_term_row>
    1e76:	66 0f       	add	r22, r22
    1e78:	66 0f       	add	r22, r22
    1e7a:	66 0f       	add	r22, r22
    1e7c:	80 91 43 04 	lds	r24, 0x0443	; 0x800443 <gfx_term_col>
    1e80:	98 2f       	mov	r25, r24
    1e82:	99 0f       	add	r25, r25
    1e84:	89 0f       	add	r24, r25
    1e86:	88 0f       	add	r24, r24
    1e88:	0e 94 3b 0a 	call	0x1476	; 0x1476 <gfx_move>
    1e8c:	8c 2f       	mov	r24, r28
    1e8e:	0e 94 7e 0b 	call	0x16fc	; 0x16fc <gfx_print_char>
    1e92:	80 91 43 04 	lds	r24, 0x0443	; 0x800443 <gfx_term_col>
    1e96:	8f 5f       	subi	r24, 0xFF	; 255
    1e98:	80 93 43 04 	sts	0x0443, r24	; 0x800443 <gfx_term_col>
    1e9c:	c4 cf       	rjmp	.-120    	; 0x1e26 <gfx_term_print+0xc>
    1e9e:	cf 91       	pop	r28
    1ea0:	1f 91       	pop	r17
    1ea2:	0f 91       	pop	r16
    1ea4:	08 95       	ret

00001ea6 <wait_copro>:
    1ea6:	78 94       	sei
    1ea8:	20 e1       	ldi	r18, 0x10	; 16
    1eaa:	37 e2       	ldi	r19, 0x27	; 39
    1eac:	97 e0       	ldi	r25, 0x07	; 7
    1eae:	89 9f       	mul	r24, r25
    1eb0:	f0 01       	movw	r30, r0
    1eb2:	11 24       	eor	r1, r1
    1eb4:	e6 5b       	subi	r30, 0xB6	; 182
    1eb6:	fb 4f       	sbci	r31, 0xFB	; 251
    1eb8:	21 50       	subi	r18, 0x01	; 1
    1eba:	31 09       	sbc	r19, r1
    1ebc:	19 f0       	breq	.+6      	; 0x1ec4 <wait_copro+0x1e>
    1ebe:	80 81       	ld	r24, Z
    1ec0:	8f 3f       	cpi	r24, 0xFF	; 255
    1ec2:	d1 f7       	brne	.-12     	; 0x1eb8 <wait_copro+0x12>
    1ec4:	81 e0       	ldi	r24, 0x01	; 1
    1ec6:	23 2b       	or	r18, r19
    1ec8:	09 f4       	brne	.+2      	; 0x1ecc <wait_copro+0x26>
    1eca:	80 e0       	ldi	r24, 0x00	; 0
    1ecc:	08 95       	ret

00001ece <spi_finished_callback>:
    1ece:	90 91 9e 04 	lds	r25, 0x049E	; 0x80049e <copro_seq>
    1ed2:	9f 5f       	subi	r25, 0xFF	; 255
    1ed4:	90 93 9e 04 	sts	0x049E, r25	; 0x80049e <copro_seq>
    1ed8:	8b 31       	cpi	r24, 0x1B	; 27
    1eda:	41 f4       	brne	.+16     	; 0x1eec <spi_finished_callback+0x1e>
    1edc:	e8 e1       	ldi	r30, 0x18	; 24
    1ede:	f4 e0       	ldi	r31, 0x04	; 4
    1ee0:	a1 e8       	ldi	r26, 0x81	; 129
    1ee2:	b4 e0       	ldi	r27, 0x04	; 4
    1ee4:	01 90       	ld	r0, Z+
    1ee6:	0d 92       	st	X+, r0
    1ee8:	8a 95       	dec	r24
    1eea:	e1 f7       	brne	.-8      	; 0x1ee4 <spi_finished_callback+0x16>
    1eec:	8f ef       	ldi	r24, 0xFF	; 255
    1eee:	80 93 06 04 	sts	0x0406, r24	; 0x800406 <spi_tx_buf+0xe>
    1ef2:	80 93 ff 03 	sts	0x03FF, r24	; 0x8003ff <spi_tx_buf+0x7>
    1ef6:	80 93 f8 03 	sts	0x03F8, r24	; 0x8003f8 <spi_tx_buf>
    1efa:	90 91 4a 04 	lds	r25, 0x044A	; 0x80044a <copro_commands>
    1efe:	9f 3f       	cpi	r25, 0xFF	; 255
    1f00:	69 f0       	breq	.+26     	; 0x1f1c <spi_finished_callback+0x4e>
    1f02:	97 e0       	ldi	r25, 0x07	; 7
    1f04:	ea e4       	ldi	r30, 0x4A	; 74
    1f06:	f4 e0       	ldi	r31, 0x04	; 4
    1f08:	a8 ef       	ldi	r26, 0xF8	; 248
    1f0a:	b3 e0       	ldi	r27, 0x03	; 3
    1f0c:	01 90       	ld	r0, Z+
    1f0e:	0d 92       	st	X+, r0
    1f10:	9a 95       	dec	r25
    1f12:	e1 f7       	brne	.-8      	; 0x1f0c <spi_finished_callback+0x3e>
    1f14:	80 93 4a 04 	sts	0x044A, r24	; 0x80044a <copro_commands>
    1f18:	87 e0       	ldi	r24, 0x07	; 7
    1f1a:	01 c0       	rjmp	.+2      	; 0x1f1e <spi_finished_callback+0x50>
    1f1c:	80 e0       	ldi	r24, 0x00	; 0
    1f1e:	90 91 51 04 	lds	r25, 0x0451	; 0x800451 <copro_commands+0x7>
    1f22:	9f 3f       	cpi	r25, 0xFF	; 255
    1f24:	79 f0       	breq	.+30     	; 0x1f44 <spi_finished_callback+0x76>
    1f26:	a8 2f       	mov	r26, r24
    1f28:	b0 e0       	ldi	r27, 0x00	; 0
    1f2a:	a8 50       	subi	r26, 0x08	; 8
    1f2c:	bc 4f       	sbci	r27, 0xFC	; 252
    1f2e:	97 e0       	ldi	r25, 0x07	; 7
    1f30:	e1 e5       	ldi	r30, 0x51	; 81
    1f32:	f4 e0       	ldi	r31, 0x04	; 4
    1f34:	01 90       	ld	r0, Z+
    1f36:	0d 92       	st	X+, r0
    1f38:	9a 95       	dec	r25
    1f3a:	e1 f7       	brne	.-8      	; 0x1f34 <spi_finished_callback+0x66>
    1f3c:	9f ef       	ldi	r25, 0xFF	; 255
    1f3e:	90 93 51 04 	sts	0x0451, r25	; 0x800451 <copro_commands+0x7>
    1f42:	89 5f       	subi	r24, 0xF9	; 249
    1f44:	90 91 58 04 	lds	r25, 0x0458	; 0x800458 <copro_commands+0xe>
    1f48:	9f 3f       	cpi	r25, 0xFF	; 255
    1f4a:	79 f0       	breq	.+30     	; 0x1f6a <spi_finished_callback+0x9c>
    1f4c:	a8 2f       	mov	r26, r24
    1f4e:	b0 e0       	ldi	r27, 0x00	; 0
    1f50:	a8 50       	subi	r26, 0x08	; 8
    1f52:	bc 4f       	sbci	r27, 0xFC	; 252
    1f54:	87 e0       	ldi	r24, 0x07	; 7
    1f56:	e8 e5       	ldi	r30, 0x58	; 88
    1f58:	f4 e0       	ldi	r31, 0x04	; 4
    1f5a:	01 90       	ld	r0, Z+
    1f5c:	0d 92       	st	X+, r0
    1f5e:	8a 95       	dec	r24
    1f60:	e1 f7       	brne	.-8      	; 0x1f5a <spi_finished_callback+0x8c>
    1f62:	8f ef       	ldi	r24, 0xFF	; 255
    1f64:	80 93 58 04 	sts	0x0458, r24	; 0x800458 <copro_commands+0xe>
    1f68:	04 c0       	rjmp	.+8      	; 0x1f72 <spi_finished_callback+0xa4>
    1f6a:	81 11       	cpse	r24, r1
    1f6c:	02 c0       	rjmp	.+4      	; 0x1f72 <spi_finished_callback+0xa4>
    1f6e:	87 e0       	ldi	r24, 0x07	; 7
    1f70:	08 95       	ret
    1f72:	85 e1       	ldi	r24, 0x15	; 21
    1f74:	08 95       	ret

00001f76 <_copro_check_busy>:
    1f76:	27 e0       	ldi	r18, 0x07	; 7
    1f78:	82 9f       	mul	r24, r18
    1f7a:	c0 01       	movw	r24, r0
    1f7c:	11 24       	eor	r1, r1
    1f7e:	fc 01       	movw	r30, r24
    1f80:	e6 5b       	subi	r30, 0xB6	; 182
    1f82:	fb 4f       	sbci	r31, 0xFB	; 251
    1f84:	81 e0       	ldi	r24, 0x01	; 1
    1f86:	90 81       	ld	r25, Z
    1f88:	9f 3f       	cpi	r25, 0xFF	; 255
    1f8a:	09 f4       	brne	.+2      	; 0x1f8e <_copro_check_busy+0x18>
    1f8c:	80 e0       	ldi	r24, 0x00	; 0
    1f8e:	08 95       	ret

00001f90 <copro_update>:
    1f90:	f8 94       	cli
    1f92:	a3 e6       	ldi	r26, 0x63	; 99
    1f94:	b4 e0       	ldi	r27, 0x04	; 4
    1f96:	e1 e8       	ldi	r30, 0x81	; 129
    1f98:	f4 e0       	ldi	r31, 0x04	; 4
    1f9a:	81 81       	ldd	r24, Z+1	; 0x01
    1f9c:	90 e0       	ldi	r25, 0x00	; 0
    1f9e:	98 2f       	mov	r25, r24
    1fa0:	88 27       	eor	r24, r24
    1fa2:	20 81       	ld	r18, Z
    1fa4:	82 0f       	add	r24, r18
    1fa6:	91 1d       	adc	r25, r1
    1fa8:	11 96       	adiw	r26, 0x01	; 1
    1faa:	9c 93       	st	X, r25
    1fac:	8e 93       	st	-X, r24
    1fae:	83 81       	ldd	r24, Z+3	; 0x03
    1fb0:	90 e0       	ldi	r25, 0x00	; 0
    1fb2:	98 2f       	mov	r25, r24
    1fb4:	88 27       	eor	r24, r24
    1fb6:	22 81       	ldd	r18, Z+2	; 0x02
    1fb8:	82 0f       	add	r24, r18
    1fba:	91 1d       	adc	r25, r1
    1fbc:	13 96       	adiw	r26, 0x03	; 3
    1fbe:	9c 93       	st	X, r25
    1fc0:	8e 93       	st	-X, r24
    1fc2:	12 97       	sbiw	r26, 0x02	; 2
    1fc4:	85 81       	ldd	r24, Z+5	; 0x05
    1fc6:	90 e0       	ldi	r25, 0x00	; 0
    1fc8:	98 2f       	mov	r25, r24
    1fca:	88 27       	eor	r24, r24
    1fcc:	24 81       	ldd	r18, Z+4	; 0x04
    1fce:	82 0f       	add	r24, r18
    1fd0:	91 1d       	adc	r25, r1
    1fd2:	15 96       	adiw	r26, 0x05	; 5
    1fd4:	9c 93       	st	X, r25
    1fd6:	8e 93       	st	-X, r24
    1fd8:	14 97       	sbiw	r26, 0x04	; 4
    1fda:	87 81       	ldd	r24, Z+7	; 0x07
    1fdc:	90 e0       	ldi	r25, 0x00	; 0
    1fde:	98 2f       	mov	r25, r24
    1fe0:	88 27       	eor	r24, r24
    1fe2:	26 81       	ldd	r18, Z+6	; 0x06
    1fe4:	82 0f       	add	r24, r18
    1fe6:	91 1d       	adc	r25, r1
    1fe8:	17 96       	adiw	r26, 0x07	; 7
    1fea:	9c 93       	st	X, r25
    1fec:	8e 93       	st	-X, r24
    1fee:	16 97       	sbiw	r26, 0x06	; 6
    1ff0:	81 85       	ldd	r24, Z+9	; 0x09
    1ff2:	90 e0       	ldi	r25, 0x00	; 0
    1ff4:	98 2f       	mov	r25, r24
    1ff6:	88 27       	eor	r24, r24
    1ff8:	20 85       	ldd	r18, Z+8	; 0x08
    1ffa:	82 0f       	add	r24, r18
    1ffc:	91 1d       	adc	r25, r1
    1ffe:	19 96       	adiw	r26, 0x09	; 9
    2000:	9c 93       	st	X, r25
    2002:	8e 93       	st	-X, r24
    2004:	18 97       	sbiw	r26, 0x08	; 8
    2006:	78 94       	sei
    2008:	f8 94       	cli
    200a:	22 85       	ldd	r18, Z+10	; 0x0a
    200c:	80 91 46 04 	lds	r24, 0x0446	; 0x800446 <copro_ticks_offset_l>
    2010:	90 91 47 04 	lds	r25, 0x0447	; 0x800447 <copro_ticks_offset_l+0x1>
    2014:	ac 01       	movw	r20, r24
    2016:	42 0f       	add	r20, r18
    2018:	51 1d       	adc	r21, r1
    201a:	93 85       	ldd	r25, Z+11	; 0x0b
    201c:	89 2f       	mov	r24, r25
    201e:	90 e0       	ldi	r25, 0x00	; 0
    2020:	98 2f       	mov	r25, r24
    2022:	88 27       	eor	r24, r24
    2024:	84 0f       	add	r24, r20
    2026:	95 1f       	adc	r25, r21
    2028:	90 93 60 04 	sts	0x0460, r25	; 0x800460 <copro_ticks_l+0x1>
    202c:	80 93 5f 04 	sts	0x045F, r24	; 0x80045f <copro_ticks_l>
    2030:	24 85       	ldd	r18, Z+12	; 0x0c
    2032:	80 91 44 04 	lds	r24, 0x0444	; 0x800444 <copro_ticks_offset_r>
    2036:	90 91 45 04 	lds	r25, 0x0445	; 0x800445 <copro_ticks_offset_r+0x1>
    203a:	ac 01       	movw	r20, r24
    203c:	42 0f       	add	r20, r18
    203e:	51 1d       	adc	r21, r1
    2040:	95 85       	ldd	r25, Z+13	; 0x0d
    2042:	89 2f       	mov	r24, r25
    2044:	90 e0       	ldi	r25, 0x00	; 0
    2046:	98 2f       	mov	r25, r24
    2048:	88 27       	eor	r24, r24
    204a:	84 0f       	add	r24, r20
    204c:	95 1f       	adc	r25, r21
    204e:	90 93 78 04 	sts	0x0478, r25	; 0x800478 <copro_ticks_r+0x1>
    2052:	80 93 77 04 	sts	0x0477, r24	; 0x800477 <copro_ticks_r>
    2056:	87 85       	ldd	r24, Z+15	; 0x0f
    2058:	90 e0       	ldi	r25, 0x00	; 0
    205a:	98 2f       	mov	r25, r24
    205c:	88 27       	eor	r24, r24
    205e:	26 85       	ldd	r18, Z+14	; 0x0e
    2060:	82 0f       	add	r24, r18
    2062:	91 1d       	adc	r25, r1
    2064:	90 93 a0 04 	sts	0x04A0, r25	; 0x8004a0 <copro_speed_l+0x1>
    2068:	80 93 9f 04 	sts	0x049F, r24	; 0x80049f <copro_speed_l>
    206c:	81 89       	ldd	r24, Z+17	; 0x11
    206e:	90 e0       	ldi	r25, 0x00	; 0
    2070:	98 2f       	mov	r25, r24
    2072:	88 27       	eor	r24, r24
    2074:	20 89       	ldd	r18, Z+16	; 0x10
    2076:	82 0f       	add	r24, r18
    2078:	91 1d       	adc	r25, r1
    207a:	90 93 76 04 	sts	0x0476, r25	; 0x800476 <copro_speed_r+0x1>
    207e:	80 93 75 04 	sts	0x0475, r24	; 0x800475 <copro_speed_r>
    2082:	83 89       	ldd	r24, Z+19	; 0x13
    2084:	90 e0       	ldi	r25, 0x00	; 0
    2086:	98 2f       	mov	r25, r24
    2088:	88 27       	eor	r24, r24
    208a:	22 89       	ldd	r18, Z+18	; 0x12
    208c:	82 0f       	add	r24, r18
    208e:	91 1d       	adc	r25, r1
    2090:	90 93 49 04 	sts	0x0449, r25	; 0x800449 <copro_current_l+0x1>
    2094:	80 93 48 04 	sts	0x0448, r24	; 0x800448 <copro_current_l>
    2098:	85 89       	ldd	r24, Z+21	; 0x15
    209a:	90 e0       	ldi	r25, 0x00	; 0
    209c:	98 2f       	mov	r25, r24
    209e:	88 27       	eor	r24, r24
    20a0:	24 89       	ldd	r18, Z+20	; 0x14
    20a2:	82 0f       	add	r24, r18
    20a4:	91 1d       	adc	r25, r1
    20a6:	90 93 80 04 	sts	0x0480, r25	; 0x800480 <copro_current_r+0x1>
    20aa:	80 93 7f 04 	sts	0x047F, r24	; 0x80047f <copro_current_r>
    20ae:	78 94       	sei
    20b0:	f8 94       	cli
    20b2:	80 8d       	ldd	r24, Z+24	; 0x18
    20b4:	90 e0       	ldi	r25, 0x00	; 0
    20b6:	98 2f       	mov	r25, r24
    20b8:	88 27       	eor	r24, r24
    20ba:	27 89       	ldd	r18, Z+23	; 0x17
    20bc:	82 0f       	add	r24, r18
    20be:	91 1d       	adc	r25, r1
    20c0:	90 93 62 04 	sts	0x0462, r25	; 0x800462 <copro_rc5_cmd+0x1>
    20c4:	80 93 61 04 	sts	0x0461, r24	; 0x800461 <copro_rc5_cmd>
    20c8:	82 8d       	ldd	r24, Z+26	; 0x1a
    20ca:	90 e0       	ldi	r25, 0x00	; 0
    20cc:	98 2f       	mov	r25, r24
    20ce:	88 27       	eor	r24, r24
    20d0:	21 8d       	ldd	r18, Z+25	; 0x19
    20d2:	82 0f       	add	r24, r18
    20d4:	91 1d       	adc	r25, r1
    20d6:	90 93 9d 04 	sts	0x049D, r25	; 0x80049d <copro_target_distance+0x1>
    20da:	80 93 9c 04 	sts	0x049C, r24	; 0x80049c <copro_target_distance>
    20de:	78 94       	sei
    20e0:	81 e0       	ldi	r24, 0x01	; 1
    20e2:	08 95       	ret

000020e4 <copro_stop>:
    20e4:	f8 94       	cli
    20e6:	81 e0       	ldi	r24, 0x01	; 1
    20e8:	80 93 4a 04 	sts	0x044A, r24	; 0x80044a <copro_commands>
    20ec:	78 94       	sei
    20ee:	08 95       	ret

000020f0 <copro_stopImmediate>:
    20f0:	f8 94       	cli
    20f2:	8a e0       	ldi	r24, 0x0A	; 10
    20f4:	80 93 4a 04 	sts	0x044A, r24	; 0x80044a <copro_commands>
    20f8:	78 94       	sei
    20fa:	81 e0       	ldi	r24, 0x01	; 1
    20fc:	08 95       	ret

000020fe <copro_setPWM>:
    20fe:	f8 94       	cli
    2100:	ea e4       	ldi	r30, 0x4A	; 74
    2102:	f4 e0       	ldi	r31, 0x04	; 4
    2104:	25 e0       	ldi	r18, 0x05	; 5
    2106:	20 83       	st	Z, r18
    2108:	81 83       	std	Z+1, r24	; 0x01
    210a:	92 83       	std	Z+2, r25	; 0x02
    210c:	63 83       	std	Z+3, r22	; 0x03
    210e:	74 83       	std	Z+4, r23	; 0x04
    2110:	78 94       	sei
    2112:	81 e0       	ldi	r24, 0x01	; 1
    2114:	08 95       	ret

00002116 <copro_setSpeed>:
    2116:	f8 94       	cli
    2118:	ea e4       	ldi	r30, 0x4A	; 74
    211a:	f4 e0       	ldi	r31, 0x04	; 4
    211c:	22 e0       	ldi	r18, 0x02	; 2
    211e:	20 83       	st	Z, r18
    2120:	81 83       	std	Z+1, r24	; 0x01
    2122:	92 83       	std	Z+2, r25	; 0x02
    2124:	63 83       	std	Z+3, r22	; 0x03
    2126:	74 83       	std	Z+4, r23	; 0x04
    2128:	78 94       	sei
    212a:	81 e0       	ldi	r24, 0x01	; 1
    212c:	08 95       	ret

0000212e <copro_setTargetAbs>:
    212e:	20 91 46 04 	lds	r18, 0x0446	; 0x800446 <copro_ticks_offset_l>
    2132:	30 91 47 04 	lds	r19, 0x0447	; 0x800447 <copro_ticks_offset_l+0x1>
    2136:	82 1b       	sub	r24, r18
    2138:	93 0b       	sbc	r25, r19
    213a:	20 91 44 04 	lds	r18, 0x0444	; 0x800444 <copro_ticks_offset_r>
    213e:	30 91 45 04 	lds	r19, 0x0445	; 0x800445 <copro_ticks_offset_r+0x1>
    2142:	62 1b       	sub	r22, r18
    2144:	73 0b       	sbc	r23, r19
    2146:	f8 94       	cli
    2148:	ea e4       	ldi	r30, 0x4A	; 74
    214a:	f4 e0       	ldi	r31, 0x04	; 4
    214c:	23 e0       	ldi	r18, 0x03	; 3
    214e:	20 83       	st	Z, r18
    2150:	81 83       	std	Z+1, r24	; 0x01
    2152:	92 83       	std	Z+2, r25	; 0x02
    2154:	63 83       	std	Z+3, r22	; 0x03
    2156:	74 83       	std	Z+4, r23	; 0x04
    2158:	45 83       	std	Z+5, r20	; 0x05
    215a:	56 83       	std	Z+6, r21	; 0x06
    215c:	78 94       	sei
    215e:	81 e0       	ldi	r24, 0x01	; 1
    2160:	08 95       	ret

00002162 <copro_setTargetRel>:
    2162:	f8 94       	cli
    2164:	ea e4       	ldi	r30, 0x4A	; 74
    2166:	f4 e0       	ldi	r31, 0x04	; 4
    2168:	24 e0       	ldi	r18, 0x04	; 4
    216a:	20 83       	st	Z, r18
    216c:	81 83       	std	Z+1, r24	; 0x01
    216e:	92 83       	std	Z+2, r25	; 0x02
    2170:	63 83       	std	Z+3, r22	; 0x03
    2172:	74 83       	std	Z+4, r23	; 0x04
    2174:	45 83       	std	Z+5, r20	; 0x05
    2176:	56 83       	std	Z+6, r21	; 0x06
    2178:	78 94       	sei
    217a:	81 e0       	ldi	r24, 0x01	; 1
    217c:	08 95       	ret

0000217e <copro_setSpeedParameters>:
    217e:	1f 93       	push	r17
    2180:	cf 93       	push	r28
    2182:	df 93       	push	r29
    2184:	18 2f       	mov	r17, r24
    2186:	d6 2f       	mov	r29, r22
    2188:	c4 2f       	mov	r28, r20
    218a:	82 e0       	ldi	r24, 0x02	; 2
    218c:	0e 94 53 0f 	call	0x1ea6	; 0x1ea6 <wait_copro>
    2190:	f8 94       	cli
    2192:	ea e4       	ldi	r30, 0x4A	; 74
    2194:	f4 e0       	ldi	r31, 0x04	; 4
    2196:	86 e0       	ldi	r24, 0x06	; 6
    2198:	86 87       	std	Z+14, r24	; 0x0e
    219a:	17 87       	std	Z+15, r17	; 0x0f
    219c:	d0 8b       	std	Z+16, r29	; 0x10
    219e:	c1 8b       	std	Z+17, r28	; 0x11
    21a0:	78 94       	sei
    21a2:	81 e0       	ldi	r24, 0x01	; 1
    21a4:	df 91       	pop	r29
    21a6:	cf 91       	pop	r28
    21a8:	1f 91       	pop	r17
    21aa:	08 95       	ret

000021ac <copro_setPositionParameters>:
    21ac:	81 e0       	ldi	r24, 0x01	; 1
    21ae:	08 95       	ret

000021b0 <copro_resetOdometry>:
    21b0:	f8 94       	cli
    21b2:	e1 e8       	ldi	r30, 0x81	; 129
    21b4:	f4 e0       	ldi	r31, 0x04	; 4
    21b6:	25 85       	ldd	r18, Z+13	; 0x0d
    21b8:	30 e0       	ldi	r19, 0x00	; 0
    21ba:	32 2f       	mov	r19, r18
    21bc:	22 27       	eor	r18, r18
    21be:	44 85       	ldd	r20, Z+12	; 0x0c
    21c0:	24 0f       	add	r18, r20
    21c2:	31 1d       	adc	r19, r1
    21c4:	43 85       	ldd	r20, Z+11	; 0x0b
    21c6:	50 e0       	ldi	r21, 0x00	; 0
    21c8:	54 2f       	mov	r21, r20
    21ca:	44 27       	eor	r20, r20
    21cc:	e2 85       	ldd	r30, Z+10	; 0x0a
    21ce:	4e 0f       	add	r20, r30
    21d0:	51 1d       	adc	r21, r1
    21d2:	fc 01       	movw	r30, r24
    21d4:	e4 1b       	sub	r30, r20
    21d6:	f5 0b       	sbc	r31, r21
    21d8:	f0 93 47 04 	sts	0x0447, r31	; 0x800447 <copro_ticks_offset_l+0x1>
    21dc:	e0 93 46 04 	sts	0x0446, r30	; 0x800446 <copro_ticks_offset_l>
    21e0:	ab 01       	movw	r20, r22
    21e2:	42 1b       	sub	r20, r18
    21e4:	53 0b       	sbc	r21, r19
    21e6:	50 93 45 04 	sts	0x0445, r21	; 0x800445 <copro_ticks_offset_r+0x1>
    21ea:	40 93 44 04 	sts	0x0444, r20	; 0x800444 <copro_ticks_offset_r>
    21ee:	90 93 60 04 	sts	0x0460, r25	; 0x800460 <copro_ticks_l+0x1>
    21f2:	80 93 5f 04 	sts	0x045F, r24	; 0x80045f <copro_ticks_l>
    21f6:	70 93 78 04 	sts	0x0478, r23	; 0x800478 <copro_ticks_r+0x1>
    21fa:	60 93 77 04 	sts	0x0477, r22	; 0x800477 <copro_ticks_r>
    21fe:	78 94       	sei
    2200:	81 e0       	ldi	r24, 0x01	; 1
    2202:	08 95       	ret

00002204 <copro_ir_stop>:
    2204:	81 e0       	ldi	r24, 0x01	; 1
    2206:	0e 94 53 0f 	call	0x1ea6	; 0x1ea6 <wait_copro>
    220a:	f8 94       	cli
    220c:	88 e0       	ldi	r24, 0x08	; 8
    220e:	80 93 51 04 	sts	0x0451, r24	; 0x800451 <copro_commands+0x7>
    2212:	78 94       	sei
    2214:	81 e0       	ldi	r24, 0x01	; 1
    2216:	08 95       	ret

00002218 <copro_ir_startMeasure>:
    2218:	81 e0       	ldi	r24, 0x01	; 1
    221a:	0e 94 53 0f 	call	0x1ea6	; 0x1ea6 <wait_copro>
    221e:	f8 94       	cli
    2220:	87 e0       	ldi	r24, 0x07	; 7
    2222:	80 93 51 04 	sts	0x0451, r24	; 0x800451 <copro_commands+0x7>
    2226:	78 94       	sei
    2228:	81 e0       	ldi	r24, 0x01	; 1
    222a:	08 95       	ret

0000222c <copro_transmitRC5>:
    222c:	cf 93       	push	r28
    222e:	df 93       	push	r29
    2230:	d8 2f       	mov	r29, r24
    2232:	c9 2f       	mov	r28, r25
    2234:	81 e0       	ldi	r24, 0x01	; 1
    2236:	0e 94 53 0f 	call	0x1ea6	; 0x1ea6 <wait_copro>
    223a:	f8 94       	cli
    223c:	ea e4       	ldi	r30, 0x4A	; 74
    223e:	f4 e0       	ldi	r31, 0x04	; 4
    2240:	89 e0       	ldi	r24, 0x09	; 9
    2242:	87 83       	std	Z+7, r24	; 0x07
    2244:	d0 87       	std	Z+8, r29	; 0x08
    2246:	c1 87       	std	Z+9, r28	; 0x09
    2248:	78 94       	sei
    224a:	81 e0       	ldi	r24, 0x01	; 1
    224c:	df 91       	pop	r29
    224e:	cf 91       	pop	r28
    2250:	08 95       	ret

00002252 <bot_init>:
    2252:	8f 9a       	sbi	0x11, 7	; 17
    2254:	97 98       	cbi	0x12, 7	; 18
    2256:	8a e0       	ldi	r24, 0x0A	; 10
    2258:	90 e0       	ldi	r25, 0x00	; 0
    225a:	0e 94 27 09 	call	0x124e	; 0x124e <delay>
    225e:	97 9a       	sbi	0x12, 7	; 18
    2260:	84 e6       	ldi	r24, 0x64	; 100
    2262:	90 e0       	ldi	r25, 0x00	; 0
    2264:	0c 94 27 09 	jmp	0x124e	; 0x124e <delay>

00002268 <bot_update>:
    2268:	87 e0       	ldi	r24, 0x07	; 7
    226a:	0e 94 bf 11 	call	0x237e	; 0x237e <adc_read>
    226e:	90 93 a2 04 	sts	0x04A2, r25	; 0x8004a2 <bot_supply+0x1>
    2272:	80 93 a1 04 	sts	0x04A1, r24	; 0x8004a1 <bot_supply>
    2276:	08 95       	ret

00002278 <leds_init>:
    2278:	bf 9a       	sbi	0x17, 7	; 23
    227a:	c7 9a       	sbi	0x18, 7	; 24
    227c:	bd 9a       	sbi	0x17, 5	; 23
    227e:	be 9a       	sbi	0x17, 6	; 23
    2280:	8f ef       	ldi	r24, 0xFF	; 255
    2282:	82 b9       	out	0x02, r24	; 2
    2284:	84 bb       	out	0x14, r24	; 20
    2286:	08 95       	ret

00002288 <leds_set_status>:
    2288:	95 b3       	in	r25, 0x15	; 21
    228a:	21 e0       	ldi	r18, 0x01	; 1
    228c:	30 e0       	ldi	r19, 0x00	; 0
    228e:	06 2e       	mov	r0, r22
    2290:	01 c0       	rjmp	.+2      	; 0x2294 <leds_set_status+0xc>
    2292:	22 0f       	add	r18, r18
    2294:	0a 94       	dec	r0
    2296:	ea f7       	brpl	.-6      	; 0x2292 <leds_set_status+0xa>
    2298:	80 ff       	sbrs	r24, 0
    229a:	02 c0       	rjmp	.+4      	; 0x22a0 <leds_set_status+0x18>
    229c:	29 2b       	or	r18, r25
    229e:	02 c0       	rjmp	.+4      	; 0x22a4 <leds_set_status+0x1c>
    22a0:	20 95       	com	r18
    22a2:	29 23       	and	r18, r25
    22a4:	25 bb       	out	0x15, r18	; 21
    22a6:	23 b1       	in	r18, 0x03	; 3
    22a8:	81 ff       	sbrs	r24, 1
    22aa:	08 c0       	rjmp	.+16     	; 0x22bc <leds_set_status+0x34>
    22ac:	81 e0       	ldi	r24, 0x01	; 1
    22ae:	90 e0       	ldi	r25, 0x00	; 0
    22b0:	01 c0       	rjmp	.+2      	; 0x22b4 <leds_set_status+0x2c>
    22b2:	88 0f       	add	r24, r24
    22b4:	6a 95       	dec	r22
    22b6:	ea f7       	brpl	.-6      	; 0x22b2 <leds_set_status+0x2a>
    22b8:	82 2b       	or	r24, r18
    22ba:	08 c0       	rjmp	.+16     	; 0x22cc <leds_set_status+0x44>
    22bc:	81 e0       	ldi	r24, 0x01	; 1
    22be:	90 e0       	ldi	r25, 0x00	; 0
    22c0:	01 c0       	rjmp	.+2      	; 0x22c4 <leds_set_status+0x3c>
    22c2:	88 0f       	add	r24, r24
    22c4:	6a 95       	dec	r22
    22c6:	ea f7       	brpl	.-6      	; 0x22c2 <leds_set_status+0x3a>
    22c8:	80 95       	com	r24
    22ca:	82 23       	and	r24, r18
    22cc:	83 b9       	out	0x03, r24	; 3
    22ce:	08 95       	ret

000022d0 <leds_set_status_intensity>:
    22d0:	90 93 f1 03 	sts	0x03F1, r25	; 0x8003f1 <pwm_channel_C+0x1>
    22d4:	80 93 f0 03 	sts	0x03F0, r24	; 0x8003f0 <pwm_channel_C>
    22d8:	08 95       	ret

000022da <leds_get_status_intensity>:
    22da:	80 91 f0 03 	lds	r24, 0x03F0	; 0x8003f0 <pwm_channel_C>
    22de:	90 91 f1 03 	lds	r25, 0x03F1	; 0x8003f1 <pwm_channel_C+0x1>
    22e2:	08 95       	ret

000022e4 <leds_set_headlights>:
    22e4:	90 93 eb 03 	sts	0x03EB, r25	; 0x8003eb <pwm_channel_A+0x1>
    22e8:	80 93 ea 03 	sts	0x03EA, r24	; 0x8003ea <pwm_channel_A>
    22ec:	08 95       	ret

000022ee <leds_get_headlights>:
    22ee:	80 91 ea 03 	lds	r24, 0x03EA	; 0x8003ea <pwm_channel_A>
    22f2:	90 91 eb 03 	lds	r25, 0x03EB	; 0x8003eb <pwm_channel_A+0x1>
    22f6:	08 95       	ret

000022f8 <leds_set_displaylight>:
    22f8:	90 93 ed 03 	sts	0x03ED, r25	; 0x8003ed <pwm_channel_B+0x1>
    22fc:	80 93 ec 03 	sts	0x03EC, r24	; 0x8003ec <pwm_channel_B>
    2300:	08 95       	ret

00002302 <leds_get_displaylight>:
    2302:	80 91 ec 03 	lds	r24, 0x03EC	; 0x8003ec <pwm_channel_B>
    2306:	90 91 ed 03 	lds	r25, 0x03ED	; 0x8003ed <pwm_channel_B+0x1>
    230a:	08 95       	ret

0000230c <sound_init>:
    230c:	bc 9a       	sbi	0x17, 4	; 23
    230e:	08 95       	ret

00002310 <sound_tone>:
    2310:	61 15       	cp	r22, r1
    2312:	71 05       	cpc	r23, r1
    2314:	09 f1       	breq	.+66     	; 0x2358 <sound_tone+0x48>
    2316:	c4 98       	cbi	0x18, 4	; 24
    2318:	9b 01       	movw	r18, r22
    231a:	28 1b       	sub	r18, r24
    231c:	39 0b       	sbc	r19, r25
    231e:	62 17       	cp	r22, r18
    2320:	73 07       	cpc	r23, r19
    2322:	49 f0       	breq	.+18     	; 0x2336 <sound_tone+0x26>
    2324:	61 50       	subi	r22, 0x01	; 1
    2326:	71 09       	sbc	r23, r1
    2328:	45 e3       	ldi	r20, 0x35	; 53
    232a:	4a 95       	dec	r20
    232c:	f1 f7       	brne	.-4      	; 0x232a <sound_tone+0x1a>
    232e:	00 00       	nop
    2330:	61 15       	cp	r22, r1
    2332:	71 05       	cpc	r23, r1
    2334:	a1 f7       	brne	.-24     	; 0x231e <sound_tone+0xe>
    2336:	c4 9a       	sbi	0x18, 4	; 24
    2338:	9b 01       	movw	r18, r22
    233a:	28 1b       	sub	r18, r24
    233c:	39 0b       	sbc	r19, r25
    233e:	61 15       	cp	r22, r1
    2340:	71 05       	cpc	r23, r1
    2342:	31 f3       	breq	.-52     	; 0x2310 <sound_tone>
    2344:	62 17       	cp	r22, r18
    2346:	73 07       	cpc	r23, r19
    2348:	19 f3       	breq	.-58     	; 0x2310 <sound_tone>
    234a:	61 50       	subi	r22, 0x01	; 1
    234c:	71 09       	sbc	r23, r1
    234e:	45 e3       	ldi	r20, 0x35	; 53
    2350:	4a 95       	dec	r20
    2352:	f1 f7       	brne	.-4      	; 0x2350 <sound_tone+0x40>
    2354:	00 00       	nop
    2356:	f3 cf       	rjmp	.-26     	; 0x233e <sound_tone+0x2e>
    2358:	08 95       	ret

0000235a <adc_init>:
    235a:	e1 e6       	ldi	r30, 0x61	; 97
    235c:	f0 e0       	ldi	r31, 0x00	; 0
    235e:	90 81       	ld	r25, Z
    2360:	21 e0       	ldi	r18, 0x01	; 1
    2362:	30 e0       	ldi	r19, 0x00	; 0
    2364:	01 c0       	rjmp	.+2      	; 0x2368 <adc_init+0xe>
    2366:	22 0f       	add	r18, r18
    2368:	8a 95       	dec	r24
    236a:	ea f7       	brpl	.-6      	; 0x2366 <adc_init+0xc>
    236c:	20 95       	com	r18
    236e:	92 23       	and	r25, r18
    2370:	90 83       	st	Z, r25
    2372:	e2 e6       	ldi	r30, 0x62	; 98
    2374:	f0 e0       	ldi	r31, 0x00	; 0
    2376:	80 81       	ld	r24, Z
    2378:	28 23       	and	r18, r24
    237a:	20 83       	st	Z, r18
    237c:	08 95       	ret

0000237e <adc_read>:
    237e:	90 e4       	ldi	r25, 0x40	; 64
    2380:	97 b9       	out	0x07, r25	; 7
    2382:	97 b1       	in	r25, 0x07	; 7
    2384:	87 70       	andi	r24, 0x07	; 7
    2386:	98 2b       	or	r25, r24
    2388:	97 b9       	out	0x07, r25	; 7
    238a:	87 ec       	ldi	r24, 0xC7	; 199
    238c:	86 b9       	out	0x06, r24	; 6
    238e:	36 9b       	sbis	0x06, 6	; 6
    2390:	02 c0       	rjmp	.+4      	; 0x2396 <adc_read+0x18>
    2392:	00 00       	nop
    2394:	fc cf       	rjmp	.-8      	; 0x238e <adc_read+0x10>
    2396:	24 b1       	in	r18, 0x04	; 4
    2398:	85 b1       	in	r24, 0x05	; 5
    239a:	90 e0       	ldi	r25, 0x00	; 0
    239c:	98 2f       	mov	r25, r24
    239e:	88 27       	eor	r24, r24
    23a0:	82 0f       	add	r24, r18
    23a2:	91 1d       	adc	r25, r1
    23a4:	20 91 a3 04 	lds	r18, 0x04A3	; 0x8004a3 <adc_random_seed>
    23a8:	30 91 a4 04 	lds	r19, 0x04A4	; 0x8004a4 <adc_random_seed+0x1>
    23ac:	28 0f       	add	r18, r24
    23ae:	39 1f       	adc	r19, r25
    23b0:	30 93 a4 04 	sts	0x04A4, r19	; 0x8004a4 <adc_random_seed+0x1>
    23b4:	20 93 a3 04 	sts	0x04A3, r18	; 0x8004a3 <adc_random_seed>
    23b8:	08 95       	ret

000023ba <adc_get_random_seed>:
    23ba:	80 91 a3 04 	lds	r24, 0x04A3	; 0x8004a3 <adc_random_seed>
    23be:	90 91 a4 04 	lds	r25, 0x04A4	; 0x8004a4 <adc_random_seed+0x1>
    23c2:	08 95       	ret

000023c4 <__cmpsf2>:
    23c4:	0e 94 88 12 	call	0x2510	; 0x2510 <__fp_cmp>
    23c8:	08 f4       	brcc	.+2      	; 0x23cc <__cmpsf2+0x8>
    23ca:	81 e0       	ldi	r24, 0x01	; 1
    23cc:	08 95       	ret

000023ce <__divsf3>:
    23ce:	0e 94 fb 11 	call	0x23f6	; 0x23f6 <__divsf3x>
    23d2:	0c 94 c3 12 	jmp	0x2586	; 0x2586 <__fp_round>
    23d6:	0e 94 bc 12 	call	0x2578	; 0x2578 <__fp_pscB>
    23da:	58 f0       	brcs	.+22     	; 0x23f2 <__divsf3+0x24>
    23dc:	0e 94 b5 12 	call	0x256a	; 0x256a <__fp_pscA>
    23e0:	40 f0       	brcs	.+16     	; 0x23f2 <__divsf3+0x24>
    23e2:	29 f4       	brne	.+10     	; 0x23ee <__divsf3+0x20>
    23e4:	5f 3f       	cpi	r21, 0xFF	; 255
    23e6:	29 f0       	breq	.+10     	; 0x23f2 <__divsf3+0x24>
    23e8:	0c 94 ac 12 	jmp	0x2558	; 0x2558 <__fp_inf>
    23ec:	51 11       	cpse	r21, r1
    23ee:	0c 94 f7 12 	jmp	0x25ee	; 0x25ee <__fp_szero>
    23f2:	0c 94 b2 12 	jmp	0x2564	; 0x2564 <__fp_nan>

000023f6 <__divsf3x>:
    23f6:	0e 94 d4 12 	call	0x25a8	; 0x25a8 <__fp_split3>
    23fa:	68 f3       	brcs	.-38     	; 0x23d6 <__divsf3+0x8>

000023fc <__divsf3_pse>:
    23fc:	99 23       	and	r25, r25
    23fe:	b1 f3       	breq	.-20     	; 0x23ec <__divsf3+0x1e>
    2400:	55 23       	and	r21, r21
    2402:	91 f3       	breq	.-28     	; 0x23e8 <__divsf3+0x1a>
    2404:	95 1b       	sub	r25, r21
    2406:	55 0b       	sbc	r21, r21
    2408:	bb 27       	eor	r27, r27
    240a:	aa 27       	eor	r26, r26
    240c:	62 17       	cp	r22, r18
    240e:	73 07       	cpc	r23, r19
    2410:	84 07       	cpc	r24, r20
    2412:	38 f0       	brcs	.+14     	; 0x2422 <__divsf3_pse+0x26>
    2414:	9f 5f       	subi	r25, 0xFF	; 255
    2416:	5f 4f       	sbci	r21, 0xFF	; 255
    2418:	22 0f       	add	r18, r18
    241a:	33 1f       	adc	r19, r19
    241c:	44 1f       	adc	r20, r20
    241e:	aa 1f       	adc	r26, r26
    2420:	a9 f3       	breq	.-22     	; 0x240c <__divsf3_pse+0x10>
    2422:	35 d0       	rcall	.+106    	; 0x248e <__divsf3_pse+0x92>
    2424:	0e 2e       	mov	r0, r30
    2426:	3a f0       	brmi	.+14     	; 0x2436 <__divsf3_pse+0x3a>
    2428:	e0 e8       	ldi	r30, 0x80	; 128
    242a:	32 d0       	rcall	.+100    	; 0x2490 <__divsf3_pse+0x94>
    242c:	91 50       	subi	r25, 0x01	; 1
    242e:	50 40       	sbci	r21, 0x00	; 0
    2430:	e6 95       	lsr	r30
    2432:	00 1c       	adc	r0, r0
    2434:	ca f7       	brpl	.-14     	; 0x2428 <__divsf3_pse+0x2c>
    2436:	2b d0       	rcall	.+86     	; 0x248e <__divsf3_pse+0x92>
    2438:	fe 2f       	mov	r31, r30
    243a:	29 d0       	rcall	.+82     	; 0x248e <__divsf3_pse+0x92>
    243c:	66 0f       	add	r22, r22
    243e:	77 1f       	adc	r23, r23
    2440:	88 1f       	adc	r24, r24
    2442:	bb 1f       	adc	r27, r27
    2444:	26 17       	cp	r18, r22
    2446:	37 07       	cpc	r19, r23
    2448:	48 07       	cpc	r20, r24
    244a:	ab 07       	cpc	r26, r27
    244c:	b0 e8       	ldi	r27, 0x80	; 128
    244e:	09 f0       	breq	.+2      	; 0x2452 <__divsf3_pse+0x56>
    2450:	bb 0b       	sbc	r27, r27
    2452:	80 2d       	mov	r24, r0
    2454:	bf 01       	movw	r22, r30
    2456:	ff 27       	eor	r31, r31
    2458:	93 58       	subi	r25, 0x83	; 131
    245a:	5f 4f       	sbci	r21, 0xFF	; 255
    245c:	3a f0       	brmi	.+14     	; 0x246c <__divsf3_pse+0x70>
    245e:	9e 3f       	cpi	r25, 0xFE	; 254
    2460:	51 05       	cpc	r21, r1
    2462:	78 f0       	brcs	.+30     	; 0x2482 <__divsf3_pse+0x86>
    2464:	0c 94 ac 12 	jmp	0x2558	; 0x2558 <__fp_inf>
    2468:	0c 94 f7 12 	jmp	0x25ee	; 0x25ee <__fp_szero>
    246c:	5f 3f       	cpi	r21, 0xFF	; 255
    246e:	e4 f3       	brlt	.-8      	; 0x2468 <__divsf3_pse+0x6c>
    2470:	98 3e       	cpi	r25, 0xE8	; 232
    2472:	d4 f3       	brlt	.-12     	; 0x2468 <__divsf3_pse+0x6c>
    2474:	86 95       	lsr	r24
    2476:	77 95       	ror	r23
    2478:	67 95       	ror	r22
    247a:	b7 95       	ror	r27
    247c:	f7 95       	ror	r31
    247e:	9f 5f       	subi	r25, 0xFF	; 255
    2480:	c9 f7       	brne	.-14     	; 0x2474 <__divsf3_pse+0x78>
    2482:	88 0f       	add	r24, r24
    2484:	91 1d       	adc	r25, r1
    2486:	96 95       	lsr	r25
    2488:	87 95       	ror	r24
    248a:	97 f9       	bld	r25, 7
    248c:	08 95       	ret
    248e:	e1 e0       	ldi	r30, 0x01	; 1
    2490:	66 0f       	add	r22, r22
    2492:	77 1f       	adc	r23, r23
    2494:	88 1f       	adc	r24, r24
    2496:	bb 1f       	adc	r27, r27
    2498:	62 17       	cp	r22, r18
    249a:	73 07       	cpc	r23, r19
    249c:	84 07       	cpc	r24, r20
    249e:	ba 07       	cpc	r27, r26
    24a0:	20 f0       	brcs	.+8      	; 0x24aa <__divsf3_pse+0xae>
    24a2:	62 1b       	sub	r22, r18
    24a4:	73 0b       	sbc	r23, r19
    24a6:	84 0b       	sbc	r24, r20
    24a8:	ba 0b       	sbc	r27, r26
    24aa:	ee 1f       	adc	r30, r30
    24ac:	88 f7       	brcc	.-30     	; 0x2490 <__divsf3_pse+0x94>
    24ae:	e0 95       	com	r30
    24b0:	08 95       	ret

000024b2 <__fixunssfsi>:
    24b2:	0e 94 dc 12 	call	0x25b8	; 0x25b8 <__fp_splitA>
    24b6:	88 f0       	brcs	.+34     	; 0x24da <__fixunssfsi+0x28>
    24b8:	9f 57       	subi	r25, 0x7F	; 127
    24ba:	98 f0       	brcs	.+38     	; 0x24e2 <__fixunssfsi+0x30>
    24bc:	b9 2f       	mov	r27, r25
    24be:	99 27       	eor	r25, r25
    24c0:	b7 51       	subi	r27, 0x17	; 23
    24c2:	b0 f0       	brcs	.+44     	; 0x24f0 <__fixunssfsi+0x3e>
    24c4:	e1 f0       	breq	.+56     	; 0x24fe <__fixunssfsi+0x4c>
    24c6:	66 0f       	add	r22, r22
    24c8:	77 1f       	adc	r23, r23
    24ca:	88 1f       	adc	r24, r24
    24cc:	99 1f       	adc	r25, r25
    24ce:	1a f0       	brmi	.+6      	; 0x24d6 <__fixunssfsi+0x24>
    24d0:	ba 95       	dec	r27
    24d2:	c9 f7       	brne	.-14     	; 0x24c6 <__fixunssfsi+0x14>
    24d4:	14 c0       	rjmp	.+40     	; 0x24fe <__fixunssfsi+0x4c>
    24d6:	b1 30       	cpi	r27, 0x01	; 1
    24d8:	91 f0       	breq	.+36     	; 0x24fe <__fixunssfsi+0x4c>
    24da:	0e 94 f6 12 	call	0x25ec	; 0x25ec <__fp_zero>
    24de:	b1 e0       	ldi	r27, 0x01	; 1
    24e0:	08 95       	ret
    24e2:	0c 94 f6 12 	jmp	0x25ec	; 0x25ec <__fp_zero>
    24e6:	67 2f       	mov	r22, r23
    24e8:	78 2f       	mov	r23, r24
    24ea:	88 27       	eor	r24, r24
    24ec:	b8 5f       	subi	r27, 0xF8	; 248
    24ee:	39 f0       	breq	.+14     	; 0x24fe <__fixunssfsi+0x4c>
    24f0:	b9 3f       	cpi	r27, 0xF9	; 249
    24f2:	cc f3       	brlt	.-14     	; 0x24e6 <__fixunssfsi+0x34>
    24f4:	86 95       	lsr	r24
    24f6:	77 95       	ror	r23
    24f8:	67 95       	ror	r22
    24fa:	b3 95       	inc	r27
    24fc:	d9 f7       	brne	.-10     	; 0x24f4 <__fixunssfsi+0x42>
    24fe:	3e f4       	brtc	.+14     	; 0x250e <__fixunssfsi+0x5c>
    2500:	90 95       	com	r25
    2502:	80 95       	com	r24
    2504:	70 95       	com	r23
    2506:	61 95       	neg	r22
    2508:	7f 4f       	sbci	r23, 0xFF	; 255
    250a:	8f 4f       	sbci	r24, 0xFF	; 255
    250c:	9f 4f       	sbci	r25, 0xFF	; 255
    250e:	08 95       	ret

00002510 <__fp_cmp>:
    2510:	99 0f       	add	r25, r25
    2512:	00 08       	sbc	r0, r0
    2514:	55 0f       	add	r21, r21
    2516:	aa 0b       	sbc	r26, r26
    2518:	e0 e8       	ldi	r30, 0x80	; 128
    251a:	fe ef       	ldi	r31, 0xFE	; 254
    251c:	16 16       	cp	r1, r22
    251e:	17 06       	cpc	r1, r23
    2520:	e8 07       	cpc	r30, r24
    2522:	f9 07       	cpc	r31, r25
    2524:	c0 f0       	brcs	.+48     	; 0x2556 <__fp_cmp+0x46>
    2526:	12 16       	cp	r1, r18
    2528:	13 06       	cpc	r1, r19
    252a:	e4 07       	cpc	r30, r20
    252c:	f5 07       	cpc	r31, r21
    252e:	98 f0       	brcs	.+38     	; 0x2556 <__fp_cmp+0x46>
    2530:	62 1b       	sub	r22, r18
    2532:	73 0b       	sbc	r23, r19
    2534:	84 0b       	sbc	r24, r20
    2536:	95 0b       	sbc	r25, r21
    2538:	39 f4       	brne	.+14     	; 0x2548 <__fp_cmp+0x38>
    253a:	0a 26       	eor	r0, r26
    253c:	61 f0       	breq	.+24     	; 0x2556 <__fp_cmp+0x46>
    253e:	23 2b       	or	r18, r19
    2540:	24 2b       	or	r18, r20
    2542:	25 2b       	or	r18, r21
    2544:	21 f4       	brne	.+8      	; 0x254e <__fp_cmp+0x3e>
    2546:	08 95       	ret
    2548:	0a 26       	eor	r0, r26
    254a:	09 f4       	brne	.+2      	; 0x254e <__fp_cmp+0x3e>
    254c:	a1 40       	sbci	r26, 0x01	; 1
    254e:	a6 95       	lsr	r26
    2550:	8f ef       	ldi	r24, 0xFF	; 255
    2552:	81 1d       	adc	r24, r1
    2554:	81 1d       	adc	r24, r1
    2556:	08 95       	ret

00002558 <__fp_inf>:
    2558:	97 f9       	bld	r25, 7
    255a:	9f 67       	ori	r25, 0x7F	; 127
    255c:	80 e8       	ldi	r24, 0x80	; 128
    255e:	70 e0       	ldi	r23, 0x00	; 0
    2560:	60 e0       	ldi	r22, 0x00	; 0
    2562:	08 95       	ret

00002564 <__fp_nan>:
    2564:	9f ef       	ldi	r25, 0xFF	; 255
    2566:	80 ec       	ldi	r24, 0xC0	; 192
    2568:	08 95       	ret

0000256a <__fp_pscA>:
    256a:	00 24       	eor	r0, r0
    256c:	0a 94       	dec	r0
    256e:	16 16       	cp	r1, r22
    2570:	17 06       	cpc	r1, r23
    2572:	18 06       	cpc	r1, r24
    2574:	09 06       	cpc	r0, r25
    2576:	08 95       	ret

00002578 <__fp_pscB>:
    2578:	00 24       	eor	r0, r0
    257a:	0a 94       	dec	r0
    257c:	12 16       	cp	r1, r18
    257e:	13 06       	cpc	r1, r19
    2580:	14 06       	cpc	r1, r20
    2582:	05 06       	cpc	r0, r21
    2584:	08 95       	ret

00002586 <__fp_round>:
    2586:	09 2e       	mov	r0, r25
    2588:	03 94       	inc	r0
    258a:	00 0c       	add	r0, r0
    258c:	11 f4       	brne	.+4      	; 0x2592 <__fp_round+0xc>
    258e:	88 23       	and	r24, r24
    2590:	52 f0       	brmi	.+20     	; 0x25a6 <__fp_round+0x20>
    2592:	bb 0f       	add	r27, r27
    2594:	40 f4       	brcc	.+16     	; 0x25a6 <__fp_round+0x20>
    2596:	bf 2b       	or	r27, r31
    2598:	11 f4       	brne	.+4      	; 0x259e <__fp_round+0x18>
    259a:	60 ff       	sbrs	r22, 0
    259c:	04 c0       	rjmp	.+8      	; 0x25a6 <__fp_round+0x20>
    259e:	6f 5f       	subi	r22, 0xFF	; 255
    25a0:	7f 4f       	sbci	r23, 0xFF	; 255
    25a2:	8f 4f       	sbci	r24, 0xFF	; 255
    25a4:	9f 4f       	sbci	r25, 0xFF	; 255
    25a6:	08 95       	ret

000025a8 <__fp_split3>:
    25a8:	57 fd       	sbrc	r21, 7
    25aa:	90 58       	subi	r25, 0x80	; 128
    25ac:	44 0f       	add	r20, r20
    25ae:	55 1f       	adc	r21, r21
    25b0:	59 f0       	breq	.+22     	; 0x25c8 <__fp_splitA+0x10>
    25b2:	5f 3f       	cpi	r21, 0xFF	; 255
    25b4:	71 f0       	breq	.+28     	; 0x25d2 <__fp_splitA+0x1a>
    25b6:	47 95       	ror	r20

000025b8 <__fp_splitA>:
    25b8:	88 0f       	add	r24, r24
    25ba:	97 fb       	bst	r25, 7
    25bc:	99 1f       	adc	r25, r25
    25be:	61 f0       	breq	.+24     	; 0x25d8 <__fp_splitA+0x20>
    25c0:	9f 3f       	cpi	r25, 0xFF	; 255
    25c2:	79 f0       	breq	.+30     	; 0x25e2 <__fp_splitA+0x2a>
    25c4:	87 95       	ror	r24
    25c6:	08 95       	ret
    25c8:	12 16       	cp	r1, r18
    25ca:	13 06       	cpc	r1, r19
    25cc:	14 06       	cpc	r1, r20
    25ce:	55 1f       	adc	r21, r21
    25d0:	f2 cf       	rjmp	.-28     	; 0x25b6 <__fp_split3+0xe>
    25d2:	46 95       	lsr	r20
    25d4:	f1 df       	rcall	.-30     	; 0x25b8 <__fp_splitA>
    25d6:	08 c0       	rjmp	.+16     	; 0x25e8 <__fp_splitA+0x30>
    25d8:	16 16       	cp	r1, r22
    25da:	17 06       	cpc	r1, r23
    25dc:	18 06       	cpc	r1, r24
    25de:	99 1f       	adc	r25, r25
    25e0:	f1 cf       	rjmp	.-30     	; 0x25c4 <__fp_splitA+0xc>
    25e2:	86 95       	lsr	r24
    25e4:	71 05       	cpc	r23, r1
    25e6:	61 05       	cpc	r22, r1
    25e8:	08 94       	sec
    25ea:	08 95       	ret

000025ec <__fp_zero>:
    25ec:	e8 94       	clt

000025ee <__fp_szero>:
    25ee:	bb 27       	eor	r27, r27
    25f0:	66 27       	eor	r22, r22
    25f2:	77 27       	eor	r23, r23
    25f4:	cb 01       	movw	r24, r22
    25f6:	97 f9       	bld	r25, 7
    25f8:	08 95       	ret

000025fa <__gesf2>:
    25fa:	0e 94 88 12 	call	0x2510	; 0x2510 <__fp_cmp>
    25fe:	08 f4       	brcc	.+2      	; 0x2602 <__gesf2+0x8>
    2600:	8f ef       	ldi	r24, 0xFF	; 255
    2602:	08 95       	ret

00002604 <__mulsf3>:
    2604:	0e 94 15 13 	call	0x262a	; 0x262a <__mulsf3x>
    2608:	0c 94 c3 12 	jmp	0x2586	; 0x2586 <__fp_round>
    260c:	0e 94 b5 12 	call	0x256a	; 0x256a <__fp_pscA>
    2610:	38 f0       	brcs	.+14     	; 0x2620 <__mulsf3+0x1c>
    2612:	0e 94 bc 12 	call	0x2578	; 0x2578 <__fp_pscB>
    2616:	20 f0       	brcs	.+8      	; 0x2620 <__mulsf3+0x1c>
    2618:	95 23       	and	r25, r21
    261a:	11 f0       	breq	.+4      	; 0x2620 <__mulsf3+0x1c>
    261c:	0c 94 ac 12 	jmp	0x2558	; 0x2558 <__fp_inf>
    2620:	0c 94 b2 12 	jmp	0x2564	; 0x2564 <__fp_nan>
    2624:	11 24       	eor	r1, r1
    2626:	0c 94 f7 12 	jmp	0x25ee	; 0x25ee <__fp_szero>

0000262a <__mulsf3x>:
    262a:	0e 94 d4 12 	call	0x25a8	; 0x25a8 <__fp_split3>
    262e:	70 f3       	brcs	.-36     	; 0x260c <__mulsf3+0x8>

00002630 <__mulsf3_pse>:
    2630:	95 9f       	mul	r25, r21
    2632:	c1 f3       	breq	.-16     	; 0x2624 <__mulsf3+0x20>
    2634:	95 0f       	add	r25, r21
    2636:	50 e0       	ldi	r21, 0x00	; 0
    2638:	55 1f       	adc	r21, r21
    263a:	62 9f       	mul	r22, r18
    263c:	f0 01       	movw	r30, r0
    263e:	72 9f       	mul	r23, r18
    2640:	bb 27       	eor	r27, r27
    2642:	f0 0d       	add	r31, r0
    2644:	b1 1d       	adc	r27, r1
    2646:	63 9f       	mul	r22, r19
    2648:	aa 27       	eor	r26, r26
    264a:	f0 0d       	add	r31, r0
    264c:	b1 1d       	adc	r27, r1
    264e:	aa 1f       	adc	r26, r26
    2650:	64 9f       	mul	r22, r20
    2652:	66 27       	eor	r22, r22
    2654:	b0 0d       	add	r27, r0
    2656:	a1 1d       	adc	r26, r1
    2658:	66 1f       	adc	r22, r22
    265a:	82 9f       	mul	r24, r18
    265c:	22 27       	eor	r18, r18
    265e:	b0 0d       	add	r27, r0
    2660:	a1 1d       	adc	r26, r1
    2662:	62 1f       	adc	r22, r18
    2664:	73 9f       	mul	r23, r19
    2666:	b0 0d       	add	r27, r0
    2668:	a1 1d       	adc	r26, r1
    266a:	62 1f       	adc	r22, r18
    266c:	83 9f       	mul	r24, r19
    266e:	a0 0d       	add	r26, r0
    2670:	61 1d       	adc	r22, r1
    2672:	22 1f       	adc	r18, r18
    2674:	74 9f       	mul	r23, r20
    2676:	33 27       	eor	r19, r19
    2678:	a0 0d       	add	r26, r0
    267a:	61 1d       	adc	r22, r1
    267c:	23 1f       	adc	r18, r19
    267e:	84 9f       	mul	r24, r20
    2680:	60 0d       	add	r22, r0
    2682:	21 1d       	adc	r18, r1
    2684:	82 2f       	mov	r24, r18
    2686:	76 2f       	mov	r23, r22
    2688:	6a 2f       	mov	r22, r26
    268a:	11 24       	eor	r1, r1
    268c:	9f 57       	subi	r25, 0x7F	; 127
    268e:	50 40       	sbci	r21, 0x00	; 0
    2690:	9a f0       	brmi	.+38     	; 0x26b8 <__mulsf3_pse+0x88>
    2692:	f1 f0       	breq	.+60     	; 0x26d0 <__mulsf3_pse+0xa0>
    2694:	88 23       	and	r24, r24
    2696:	4a f0       	brmi	.+18     	; 0x26aa <__mulsf3_pse+0x7a>
    2698:	ee 0f       	add	r30, r30
    269a:	ff 1f       	adc	r31, r31
    269c:	bb 1f       	adc	r27, r27
    269e:	66 1f       	adc	r22, r22
    26a0:	77 1f       	adc	r23, r23
    26a2:	88 1f       	adc	r24, r24
    26a4:	91 50       	subi	r25, 0x01	; 1
    26a6:	50 40       	sbci	r21, 0x00	; 0
    26a8:	a9 f7       	brne	.-22     	; 0x2694 <__mulsf3_pse+0x64>
    26aa:	9e 3f       	cpi	r25, 0xFE	; 254
    26ac:	51 05       	cpc	r21, r1
    26ae:	80 f0       	brcs	.+32     	; 0x26d0 <__mulsf3_pse+0xa0>
    26b0:	0c 94 ac 12 	jmp	0x2558	; 0x2558 <__fp_inf>
    26b4:	0c 94 f7 12 	jmp	0x25ee	; 0x25ee <__fp_szero>
    26b8:	5f 3f       	cpi	r21, 0xFF	; 255
    26ba:	e4 f3       	brlt	.-8      	; 0x26b4 <__mulsf3_pse+0x84>
    26bc:	98 3e       	cpi	r25, 0xE8	; 232
    26be:	d4 f3       	brlt	.-12     	; 0x26b4 <__mulsf3_pse+0x84>
    26c0:	86 95       	lsr	r24
    26c2:	77 95       	ror	r23
    26c4:	67 95       	ror	r22
    26c6:	b7 95       	ror	r27
    26c8:	f7 95       	ror	r31
    26ca:	e7 95       	ror	r30
    26cc:	9f 5f       	subi	r25, 0xFF	; 255
    26ce:	c1 f7       	brne	.-16     	; 0x26c0 <__mulsf3_pse+0x90>
    26d0:	fe 2b       	or	r31, r30
    26d2:	88 0f       	add	r24, r24
    26d4:	91 1d       	adc	r25, r1
    26d6:	96 95       	lsr	r25
    26d8:	87 95       	ror	r24
    26da:	97 f9       	bld	r25, 7
    26dc:	08 95       	ret

000026de <__divmodsi4>:
    26de:	05 2e       	mov	r0, r21
    26e0:	97 fb       	bst	r25, 7
    26e2:	1e f4       	brtc	.+6      	; 0x26ea <__divmodsi4+0xc>
    26e4:	00 94       	com	r0
    26e6:	0e 94 86 13 	call	0x270c	; 0x270c <__negsi2>
    26ea:	57 fd       	sbrc	r21, 7
    26ec:	07 d0       	rcall	.+14     	; 0x26fc <__divmodsi4_neg2>
    26ee:	0e 94 8e 13 	call	0x271c	; 0x271c <__udivmodsi4>
    26f2:	07 fc       	sbrc	r0, 7
    26f4:	03 d0       	rcall	.+6      	; 0x26fc <__divmodsi4_neg2>
    26f6:	4e f4       	brtc	.+18     	; 0x270a <__divmodsi4_exit>
    26f8:	0c 94 86 13 	jmp	0x270c	; 0x270c <__negsi2>

000026fc <__divmodsi4_neg2>:
    26fc:	50 95       	com	r21
    26fe:	40 95       	com	r20
    2700:	30 95       	com	r19
    2702:	21 95       	neg	r18
    2704:	3f 4f       	sbci	r19, 0xFF	; 255
    2706:	4f 4f       	sbci	r20, 0xFF	; 255
    2708:	5f 4f       	sbci	r21, 0xFF	; 255

0000270a <__divmodsi4_exit>:
    270a:	08 95       	ret

0000270c <__negsi2>:
    270c:	90 95       	com	r25
    270e:	80 95       	com	r24
    2710:	70 95       	com	r23
    2712:	61 95       	neg	r22
    2714:	7f 4f       	sbci	r23, 0xFF	; 255
    2716:	8f 4f       	sbci	r24, 0xFF	; 255
    2718:	9f 4f       	sbci	r25, 0xFF	; 255
    271a:	08 95       	ret

0000271c <__udivmodsi4>:
    271c:	a1 e2       	ldi	r26, 0x21	; 33
    271e:	1a 2e       	mov	r1, r26
    2720:	aa 1b       	sub	r26, r26
    2722:	bb 1b       	sub	r27, r27
    2724:	fd 01       	movw	r30, r26
    2726:	0d c0       	rjmp	.+26     	; 0x2742 <__udivmodsi4_ep>

00002728 <__udivmodsi4_loop>:
    2728:	aa 1f       	adc	r26, r26
    272a:	bb 1f       	adc	r27, r27
    272c:	ee 1f       	adc	r30, r30
    272e:	ff 1f       	adc	r31, r31
    2730:	a2 17       	cp	r26, r18
    2732:	b3 07       	cpc	r27, r19
    2734:	e4 07       	cpc	r30, r20
    2736:	f5 07       	cpc	r31, r21
    2738:	20 f0       	brcs	.+8      	; 0x2742 <__udivmodsi4_ep>
    273a:	a2 1b       	sub	r26, r18
    273c:	b3 0b       	sbc	r27, r19
    273e:	e4 0b       	sbc	r30, r20
    2740:	f5 0b       	sbc	r31, r21

00002742 <__udivmodsi4_ep>:
    2742:	66 1f       	adc	r22, r22
    2744:	77 1f       	adc	r23, r23
    2746:	88 1f       	adc	r24, r24
    2748:	99 1f       	adc	r25, r25
    274a:	1a 94       	dec	r1
    274c:	69 f7       	brne	.-38     	; 0x2728 <__udivmodsi4_loop>
    274e:	60 95       	com	r22
    2750:	70 95       	com	r23
    2752:	80 95       	com	r24
    2754:	90 95       	com	r25
    2756:	9b 01       	movw	r18, r22
    2758:	ac 01       	movw	r20, r24
    275a:	bd 01       	movw	r22, r26
    275c:	cf 01       	movw	r24, r30
    275e:	08 95       	ret

00002760 <sprintf>:
    2760:	0f 93       	push	r16
    2762:	1f 93       	push	r17
    2764:	cf 93       	push	r28
    2766:	df 93       	push	r29
    2768:	cd b7       	in	r28, 0x3d	; 61
    276a:	de b7       	in	r29, 0x3e	; 62
    276c:	2e 97       	sbiw	r28, 0x0e	; 14
    276e:	0f b6       	in	r0, 0x3f	; 63
    2770:	f8 94       	cli
    2772:	de bf       	out	0x3e, r29	; 62
    2774:	0f be       	out	0x3f, r0	; 63
    2776:	cd bf       	out	0x3d, r28	; 61
    2778:	0d 89       	ldd	r16, Y+21	; 0x15
    277a:	1e 89       	ldd	r17, Y+22	; 0x16
    277c:	86 e0       	ldi	r24, 0x06	; 6
    277e:	8c 83       	std	Y+4, r24	; 0x04
    2780:	1a 83       	std	Y+2, r17	; 0x02
    2782:	09 83       	std	Y+1, r16	; 0x01
    2784:	8f ef       	ldi	r24, 0xFF	; 255
    2786:	9f e7       	ldi	r25, 0x7F	; 127
    2788:	9e 83       	std	Y+6, r25	; 0x06
    278a:	8d 83       	std	Y+5, r24	; 0x05
    278c:	ae 01       	movw	r20, r28
    278e:	47 5e       	subi	r20, 0xE7	; 231
    2790:	5f 4f       	sbci	r21, 0xFF	; 255
    2792:	6f 89       	ldd	r22, Y+23	; 0x17
    2794:	78 8d       	ldd	r23, Y+24	; 0x18
    2796:	ce 01       	movw	r24, r28
    2798:	01 96       	adiw	r24, 0x01	; 1
    279a:	0e 94 df 13 	call	0x27be	; 0x27be <vfprintf>
    279e:	ef 81       	ldd	r30, Y+7	; 0x07
    27a0:	f8 85       	ldd	r31, Y+8	; 0x08
    27a2:	e0 0f       	add	r30, r16
    27a4:	f1 1f       	adc	r31, r17
    27a6:	10 82       	st	Z, r1
    27a8:	2e 96       	adiw	r28, 0x0e	; 14
    27aa:	0f b6       	in	r0, 0x3f	; 63
    27ac:	f8 94       	cli
    27ae:	de bf       	out	0x3e, r29	; 62
    27b0:	0f be       	out	0x3f, r0	; 63
    27b2:	cd bf       	out	0x3d, r28	; 61
    27b4:	df 91       	pop	r29
    27b6:	cf 91       	pop	r28
    27b8:	1f 91       	pop	r17
    27ba:	0f 91       	pop	r16
    27bc:	08 95       	ret

000027be <vfprintf>:
    27be:	2f 92       	push	r2
    27c0:	3f 92       	push	r3
    27c2:	4f 92       	push	r4
    27c4:	5f 92       	push	r5
    27c6:	6f 92       	push	r6
    27c8:	7f 92       	push	r7
    27ca:	8f 92       	push	r8
    27cc:	9f 92       	push	r9
    27ce:	af 92       	push	r10
    27d0:	bf 92       	push	r11
    27d2:	cf 92       	push	r12
    27d4:	df 92       	push	r13
    27d6:	ef 92       	push	r14
    27d8:	ff 92       	push	r15
    27da:	0f 93       	push	r16
    27dc:	1f 93       	push	r17
    27de:	cf 93       	push	r28
    27e0:	df 93       	push	r29
    27e2:	cd b7       	in	r28, 0x3d	; 61
    27e4:	de b7       	in	r29, 0x3e	; 62
    27e6:	2b 97       	sbiw	r28, 0x0b	; 11
    27e8:	0f b6       	in	r0, 0x3f	; 63
    27ea:	f8 94       	cli
    27ec:	de bf       	out	0x3e, r29	; 62
    27ee:	0f be       	out	0x3f, r0	; 63
    27f0:	cd bf       	out	0x3d, r28	; 61
    27f2:	6c 01       	movw	r12, r24
    27f4:	7b 01       	movw	r14, r22
    27f6:	8a 01       	movw	r16, r20
    27f8:	fc 01       	movw	r30, r24
    27fa:	17 82       	std	Z+7, r1	; 0x07
    27fc:	16 82       	std	Z+6, r1	; 0x06
    27fe:	83 81       	ldd	r24, Z+3	; 0x03
    2800:	81 ff       	sbrs	r24, 1
    2802:	cc c1       	rjmp	.+920    	; 0x2b9c <vfprintf+0x3de>
    2804:	ce 01       	movw	r24, r28
    2806:	01 96       	adiw	r24, 0x01	; 1
    2808:	3c 01       	movw	r6, r24
    280a:	f6 01       	movw	r30, r12
    280c:	93 81       	ldd	r25, Z+3	; 0x03
    280e:	f7 01       	movw	r30, r14
    2810:	93 fd       	sbrc	r25, 3
    2812:	85 91       	lpm	r24, Z+
    2814:	93 ff       	sbrs	r25, 3
    2816:	81 91       	ld	r24, Z+
    2818:	7f 01       	movw	r14, r30
    281a:	88 23       	and	r24, r24
    281c:	09 f4       	brne	.+2      	; 0x2820 <vfprintf+0x62>
    281e:	ba c1       	rjmp	.+884    	; 0x2b94 <vfprintf+0x3d6>
    2820:	85 32       	cpi	r24, 0x25	; 37
    2822:	39 f4       	brne	.+14     	; 0x2832 <vfprintf+0x74>
    2824:	93 fd       	sbrc	r25, 3
    2826:	85 91       	lpm	r24, Z+
    2828:	93 ff       	sbrs	r25, 3
    282a:	81 91       	ld	r24, Z+
    282c:	7f 01       	movw	r14, r30
    282e:	85 32       	cpi	r24, 0x25	; 37
    2830:	29 f4       	brne	.+10     	; 0x283c <vfprintf+0x7e>
    2832:	b6 01       	movw	r22, r12
    2834:	90 e0       	ldi	r25, 0x00	; 0
    2836:	0e 94 ff 15 	call	0x2bfe	; 0x2bfe <fputc>
    283a:	e7 cf       	rjmp	.-50     	; 0x280a <vfprintf+0x4c>
    283c:	91 2c       	mov	r9, r1
    283e:	21 2c       	mov	r2, r1
    2840:	31 2c       	mov	r3, r1
    2842:	ff e1       	ldi	r31, 0x1F	; 31
    2844:	f3 15       	cp	r31, r3
    2846:	d8 f0       	brcs	.+54     	; 0x287e <vfprintf+0xc0>
    2848:	8b 32       	cpi	r24, 0x2B	; 43
    284a:	79 f0       	breq	.+30     	; 0x286a <vfprintf+0xac>
    284c:	38 f4       	brcc	.+14     	; 0x285c <vfprintf+0x9e>
    284e:	80 32       	cpi	r24, 0x20	; 32
    2850:	79 f0       	breq	.+30     	; 0x2870 <vfprintf+0xb2>
    2852:	83 32       	cpi	r24, 0x23	; 35
    2854:	a1 f4       	brne	.+40     	; 0x287e <vfprintf+0xc0>
    2856:	23 2d       	mov	r18, r3
    2858:	20 61       	ori	r18, 0x10	; 16
    285a:	1d c0       	rjmp	.+58     	; 0x2896 <vfprintf+0xd8>
    285c:	8d 32       	cpi	r24, 0x2D	; 45
    285e:	61 f0       	breq	.+24     	; 0x2878 <vfprintf+0xba>
    2860:	80 33       	cpi	r24, 0x30	; 48
    2862:	69 f4       	brne	.+26     	; 0x287e <vfprintf+0xc0>
    2864:	23 2d       	mov	r18, r3
    2866:	21 60       	ori	r18, 0x01	; 1
    2868:	16 c0       	rjmp	.+44     	; 0x2896 <vfprintf+0xd8>
    286a:	83 2d       	mov	r24, r3
    286c:	82 60       	ori	r24, 0x02	; 2
    286e:	38 2e       	mov	r3, r24
    2870:	e3 2d       	mov	r30, r3
    2872:	e4 60       	ori	r30, 0x04	; 4
    2874:	3e 2e       	mov	r3, r30
    2876:	2a c0       	rjmp	.+84     	; 0x28cc <vfprintf+0x10e>
    2878:	f3 2d       	mov	r31, r3
    287a:	f8 60       	ori	r31, 0x08	; 8
    287c:	1d c0       	rjmp	.+58     	; 0x28b8 <vfprintf+0xfa>
    287e:	37 fc       	sbrc	r3, 7
    2880:	2d c0       	rjmp	.+90     	; 0x28dc <vfprintf+0x11e>
    2882:	20 ed       	ldi	r18, 0xD0	; 208
    2884:	28 0f       	add	r18, r24
    2886:	2a 30       	cpi	r18, 0x0A	; 10
    2888:	40 f0       	brcs	.+16     	; 0x289a <vfprintf+0xdc>
    288a:	8e 32       	cpi	r24, 0x2E	; 46
    288c:	b9 f4       	brne	.+46     	; 0x28bc <vfprintf+0xfe>
    288e:	36 fc       	sbrc	r3, 6
    2890:	81 c1       	rjmp	.+770    	; 0x2b94 <vfprintf+0x3d6>
    2892:	23 2d       	mov	r18, r3
    2894:	20 64       	ori	r18, 0x40	; 64
    2896:	32 2e       	mov	r3, r18
    2898:	19 c0       	rjmp	.+50     	; 0x28cc <vfprintf+0x10e>
    289a:	36 fe       	sbrs	r3, 6
    289c:	06 c0       	rjmp	.+12     	; 0x28aa <vfprintf+0xec>
    289e:	8a e0       	ldi	r24, 0x0A	; 10
    28a0:	98 9e       	mul	r9, r24
    28a2:	20 0d       	add	r18, r0
    28a4:	11 24       	eor	r1, r1
    28a6:	92 2e       	mov	r9, r18
    28a8:	11 c0       	rjmp	.+34     	; 0x28cc <vfprintf+0x10e>
    28aa:	ea e0       	ldi	r30, 0x0A	; 10
    28ac:	2e 9e       	mul	r2, r30
    28ae:	20 0d       	add	r18, r0
    28b0:	11 24       	eor	r1, r1
    28b2:	22 2e       	mov	r2, r18
    28b4:	f3 2d       	mov	r31, r3
    28b6:	f0 62       	ori	r31, 0x20	; 32
    28b8:	3f 2e       	mov	r3, r31
    28ba:	08 c0       	rjmp	.+16     	; 0x28cc <vfprintf+0x10e>
    28bc:	8c 36       	cpi	r24, 0x6C	; 108
    28be:	21 f4       	brne	.+8      	; 0x28c8 <vfprintf+0x10a>
    28c0:	83 2d       	mov	r24, r3
    28c2:	80 68       	ori	r24, 0x80	; 128
    28c4:	38 2e       	mov	r3, r24
    28c6:	02 c0       	rjmp	.+4      	; 0x28cc <vfprintf+0x10e>
    28c8:	88 36       	cpi	r24, 0x68	; 104
    28ca:	41 f4       	brne	.+16     	; 0x28dc <vfprintf+0x11e>
    28cc:	f7 01       	movw	r30, r14
    28ce:	93 fd       	sbrc	r25, 3
    28d0:	85 91       	lpm	r24, Z+
    28d2:	93 ff       	sbrs	r25, 3
    28d4:	81 91       	ld	r24, Z+
    28d6:	7f 01       	movw	r14, r30
    28d8:	81 11       	cpse	r24, r1
    28da:	b3 cf       	rjmp	.-154    	; 0x2842 <vfprintf+0x84>
    28dc:	98 2f       	mov	r25, r24
    28de:	9f 7d       	andi	r25, 0xDF	; 223
    28e0:	95 54       	subi	r25, 0x45	; 69
    28e2:	93 30       	cpi	r25, 0x03	; 3
    28e4:	28 f4       	brcc	.+10     	; 0x28f0 <vfprintf+0x132>
    28e6:	0c 5f       	subi	r16, 0xFC	; 252
    28e8:	1f 4f       	sbci	r17, 0xFF	; 255
    28ea:	9f e3       	ldi	r25, 0x3F	; 63
    28ec:	99 83       	std	Y+1, r25	; 0x01
    28ee:	0d c0       	rjmp	.+26     	; 0x290a <vfprintf+0x14c>
    28f0:	83 36       	cpi	r24, 0x63	; 99
    28f2:	31 f0       	breq	.+12     	; 0x2900 <vfprintf+0x142>
    28f4:	83 37       	cpi	r24, 0x73	; 115
    28f6:	71 f0       	breq	.+28     	; 0x2914 <vfprintf+0x156>
    28f8:	83 35       	cpi	r24, 0x53	; 83
    28fa:	09 f0       	breq	.+2      	; 0x28fe <vfprintf+0x140>
    28fc:	59 c0       	rjmp	.+178    	; 0x29b0 <vfprintf+0x1f2>
    28fe:	21 c0       	rjmp	.+66     	; 0x2942 <vfprintf+0x184>
    2900:	f8 01       	movw	r30, r16
    2902:	80 81       	ld	r24, Z
    2904:	89 83       	std	Y+1, r24	; 0x01
    2906:	0e 5f       	subi	r16, 0xFE	; 254
    2908:	1f 4f       	sbci	r17, 0xFF	; 255
    290a:	88 24       	eor	r8, r8
    290c:	83 94       	inc	r8
    290e:	91 2c       	mov	r9, r1
    2910:	53 01       	movw	r10, r6
    2912:	13 c0       	rjmp	.+38     	; 0x293a <vfprintf+0x17c>
    2914:	28 01       	movw	r4, r16
    2916:	f2 e0       	ldi	r31, 0x02	; 2
    2918:	4f 0e       	add	r4, r31
    291a:	51 1c       	adc	r5, r1
    291c:	f8 01       	movw	r30, r16
    291e:	a0 80       	ld	r10, Z
    2920:	b1 80       	ldd	r11, Z+1	; 0x01
    2922:	36 fe       	sbrs	r3, 6
    2924:	03 c0       	rjmp	.+6      	; 0x292c <vfprintf+0x16e>
    2926:	69 2d       	mov	r22, r9
    2928:	70 e0       	ldi	r23, 0x00	; 0
    292a:	02 c0       	rjmp	.+4      	; 0x2930 <vfprintf+0x172>
    292c:	6f ef       	ldi	r22, 0xFF	; 255
    292e:	7f ef       	ldi	r23, 0xFF	; 255
    2930:	c5 01       	movw	r24, r10
    2932:	0e 94 f4 15 	call	0x2be8	; 0x2be8 <strnlen>
    2936:	4c 01       	movw	r8, r24
    2938:	82 01       	movw	r16, r4
    293a:	f3 2d       	mov	r31, r3
    293c:	ff 77       	andi	r31, 0x7F	; 127
    293e:	3f 2e       	mov	r3, r31
    2940:	16 c0       	rjmp	.+44     	; 0x296e <vfprintf+0x1b0>
    2942:	28 01       	movw	r4, r16
    2944:	22 e0       	ldi	r18, 0x02	; 2
    2946:	42 0e       	add	r4, r18
    2948:	51 1c       	adc	r5, r1
    294a:	f8 01       	movw	r30, r16
    294c:	a0 80       	ld	r10, Z
    294e:	b1 80       	ldd	r11, Z+1	; 0x01
    2950:	36 fe       	sbrs	r3, 6
    2952:	03 c0       	rjmp	.+6      	; 0x295a <vfprintf+0x19c>
    2954:	69 2d       	mov	r22, r9
    2956:	70 e0       	ldi	r23, 0x00	; 0
    2958:	02 c0       	rjmp	.+4      	; 0x295e <vfprintf+0x1a0>
    295a:	6f ef       	ldi	r22, 0xFF	; 255
    295c:	7f ef       	ldi	r23, 0xFF	; 255
    295e:	c5 01       	movw	r24, r10
    2960:	0e 94 e9 15 	call	0x2bd2	; 0x2bd2 <strnlen_P>
    2964:	4c 01       	movw	r8, r24
    2966:	f3 2d       	mov	r31, r3
    2968:	f0 68       	ori	r31, 0x80	; 128
    296a:	3f 2e       	mov	r3, r31
    296c:	82 01       	movw	r16, r4
    296e:	33 fc       	sbrc	r3, 3
    2970:	1b c0       	rjmp	.+54     	; 0x29a8 <vfprintf+0x1ea>
    2972:	82 2d       	mov	r24, r2
    2974:	90 e0       	ldi	r25, 0x00	; 0
    2976:	88 16       	cp	r8, r24
    2978:	99 06       	cpc	r9, r25
    297a:	b0 f4       	brcc	.+44     	; 0x29a8 <vfprintf+0x1ea>
    297c:	b6 01       	movw	r22, r12
    297e:	80 e2       	ldi	r24, 0x20	; 32
    2980:	90 e0       	ldi	r25, 0x00	; 0
    2982:	0e 94 ff 15 	call	0x2bfe	; 0x2bfe <fputc>
    2986:	2a 94       	dec	r2
    2988:	f4 cf       	rjmp	.-24     	; 0x2972 <vfprintf+0x1b4>
    298a:	f5 01       	movw	r30, r10
    298c:	37 fc       	sbrc	r3, 7
    298e:	85 91       	lpm	r24, Z+
    2990:	37 fe       	sbrs	r3, 7
    2992:	81 91       	ld	r24, Z+
    2994:	5f 01       	movw	r10, r30
    2996:	b6 01       	movw	r22, r12
    2998:	90 e0       	ldi	r25, 0x00	; 0
    299a:	0e 94 ff 15 	call	0x2bfe	; 0x2bfe <fputc>
    299e:	21 10       	cpse	r2, r1
    29a0:	2a 94       	dec	r2
    29a2:	21 e0       	ldi	r18, 0x01	; 1
    29a4:	82 1a       	sub	r8, r18
    29a6:	91 08       	sbc	r9, r1
    29a8:	81 14       	cp	r8, r1
    29aa:	91 04       	cpc	r9, r1
    29ac:	71 f7       	brne	.-36     	; 0x298a <vfprintf+0x1cc>
    29ae:	e8 c0       	rjmp	.+464    	; 0x2b80 <vfprintf+0x3c2>
    29b0:	84 36       	cpi	r24, 0x64	; 100
    29b2:	11 f0       	breq	.+4      	; 0x29b8 <vfprintf+0x1fa>
    29b4:	89 36       	cpi	r24, 0x69	; 105
    29b6:	41 f5       	brne	.+80     	; 0x2a08 <vfprintf+0x24a>
    29b8:	f8 01       	movw	r30, r16
    29ba:	37 fe       	sbrs	r3, 7
    29bc:	07 c0       	rjmp	.+14     	; 0x29cc <vfprintf+0x20e>
    29be:	60 81       	ld	r22, Z
    29c0:	71 81       	ldd	r23, Z+1	; 0x01
    29c2:	82 81       	ldd	r24, Z+2	; 0x02
    29c4:	93 81       	ldd	r25, Z+3	; 0x03
    29c6:	0c 5f       	subi	r16, 0xFC	; 252
    29c8:	1f 4f       	sbci	r17, 0xFF	; 255
    29ca:	08 c0       	rjmp	.+16     	; 0x29dc <vfprintf+0x21e>
    29cc:	60 81       	ld	r22, Z
    29ce:	71 81       	ldd	r23, Z+1	; 0x01
    29d0:	07 2e       	mov	r0, r23
    29d2:	00 0c       	add	r0, r0
    29d4:	88 0b       	sbc	r24, r24
    29d6:	99 0b       	sbc	r25, r25
    29d8:	0e 5f       	subi	r16, 0xFE	; 254
    29da:	1f 4f       	sbci	r17, 0xFF	; 255
    29dc:	f3 2d       	mov	r31, r3
    29de:	ff 76       	andi	r31, 0x6F	; 111
    29e0:	3f 2e       	mov	r3, r31
    29e2:	97 ff       	sbrs	r25, 7
    29e4:	09 c0       	rjmp	.+18     	; 0x29f8 <vfprintf+0x23a>
    29e6:	90 95       	com	r25
    29e8:	80 95       	com	r24
    29ea:	70 95       	com	r23
    29ec:	61 95       	neg	r22
    29ee:	7f 4f       	sbci	r23, 0xFF	; 255
    29f0:	8f 4f       	sbci	r24, 0xFF	; 255
    29f2:	9f 4f       	sbci	r25, 0xFF	; 255
    29f4:	f0 68       	ori	r31, 0x80	; 128
    29f6:	3f 2e       	mov	r3, r31
    29f8:	2a e0       	ldi	r18, 0x0A	; 10
    29fa:	30 e0       	ldi	r19, 0x00	; 0
    29fc:	a3 01       	movw	r20, r6
    29fe:	0e 94 3b 16 	call	0x2c76	; 0x2c76 <__ultoa_invert>
    2a02:	88 2e       	mov	r8, r24
    2a04:	86 18       	sub	r8, r6
    2a06:	45 c0       	rjmp	.+138    	; 0x2a92 <vfprintf+0x2d4>
    2a08:	85 37       	cpi	r24, 0x75	; 117
    2a0a:	31 f4       	brne	.+12     	; 0x2a18 <vfprintf+0x25a>
    2a0c:	23 2d       	mov	r18, r3
    2a0e:	2f 7e       	andi	r18, 0xEF	; 239
    2a10:	b2 2e       	mov	r11, r18
    2a12:	2a e0       	ldi	r18, 0x0A	; 10
    2a14:	30 e0       	ldi	r19, 0x00	; 0
    2a16:	25 c0       	rjmp	.+74     	; 0x2a62 <vfprintf+0x2a4>
    2a18:	93 2d       	mov	r25, r3
    2a1a:	99 7f       	andi	r25, 0xF9	; 249
    2a1c:	b9 2e       	mov	r11, r25
    2a1e:	8f 36       	cpi	r24, 0x6F	; 111
    2a20:	c1 f0       	breq	.+48     	; 0x2a52 <vfprintf+0x294>
    2a22:	18 f4       	brcc	.+6      	; 0x2a2a <vfprintf+0x26c>
    2a24:	88 35       	cpi	r24, 0x58	; 88
    2a26:	79 f0       	breq	.+30     	; 0x2a46 <vfprintf+0x288>
    2a28:	b5 c0       	rjmp	.+362    	; 0x2b94 <vfprintf+0x3d6>
    2a2a:	80 37       	cpi	r24, 0x70	; 112
    2a2c:	19 f0       	breq	.+6      	; 0x2a34 <vfprintf+0x276>
    2a2e:	88 37       	cpi	r24, 0x78	; 120
    2a30:	21 f0       	breq	.+8      	; 0x2a3a <vfprintf+0x27c>
    2a32:	b0 c0       	rjmp	.+352    	; 0x2b94 <vfprintf+0x3d6>
    2a34:	e9 2f       	mov	r30, r25
    2a36:	e0 61       	ori	r30, 0x10	; 16
    2a38:	be 2e       	mov	r11, r30
    2a3a:	b4 fe       	sbrs	r11, 4
    2a3c:	0d c0       	rjmp	.+26     	; 0x2a58 <vfprintf+0x29a>
    2a3e:	fb 2d       	mov	r31, r11
    2a40:	f4 60       	ori	r31, 0x04	; 4
    2a42:	bf 2e       	mov	r11, r31
    2a44:	09 c0       	rjmp	.+18     	; 0x2a58 <vfprintf+0x29a>
    2a46:	34 fe       	sbrs	r3, 4
    2a48:	0a c0       	rjmp	.+20     	; 0x2a5e <vfprintf+0x2a0>
    2a4a:	29 2f       	mov	r18, r25
    2a4c:	26 60       	ori	r18, 0x06	; 6
    2a4e:	b2 2e       	mov	r11, r18
    2a50:	06 c0       	rjmp	.+12     	; 0x2a5e <vfprintf+0x2a0>
    2a52:	28 e0       	ldi	r18, 0x08	; 8
    2a54:	30 e0       	ldi	r19, 0x00	; 0
    2a56:	05 c0       	rjmp	.+10     	; 0x2a62 <vfprintf+0x2a4>
    2a58:	20 e1       	ldi	r18, 0x10	; 16
    2a5a:	30 e0       	ldi	r19, 0x00	; 0
    2a5c:	02 c0       	rjmp	.+4      	; 0x2a62 <vfprintf+0x2a4>
    2a5e:	20 e1       	ldi	r18, 0x10	; 16
    2a60:	32 e0       	ldi	r19, 0x02	; 2
    2a62:	f8 01       	movw	r30, r16
    2a64:	b7 fe       	sbrs	r11, 7
    2a66:	07 c0       	rjmp	.+14     	; 0x2a76 <vfprintf+0x2b8>
    2a68:	60 81       	ld	r22, Z
    2a6a:	71 81       	ldd	r23, Z+1	; 0x01
    2a6c:	82 81       	ldd	r24, Z+2	; 0x02
    2a6e:	93 81       	ldd	r25, Z+3	; 0x03
    2a70:	0c 5f       	subi	r16, 0xFC	; 252
    2a72:	1f 4f       	sbci	r17, 0xFF	; 255
    2a74:	06 c0       	rjmp	.+12     	; 0x2a82 <vfprintf+0x2c4>
    2a76:	60 81       	ld	r22, Z
    2a78:	71 81       	ldd	r23, Z+1	; 0x01
    2a7a:	80 e0       	ldi	r24, 0x00	; 0
    2a7c:	90 e0       	ldi	r25, 0x00	; 0
    2a7e:	0e 5f       	subi	r16, 0xFE	; 254
    2a80:	1f 4f       	sbci	r17, 0xFF	; 255
    2a82:	a3 01       	movw	r20, r6
    2a84:	0e 94 3b 16 	call	0x2c76	; 0x2c76 <__ultoa_invert>
    2a88:	88 2e       	mov	r8, r24
    2a8a:	86 18       	sub	r8, r6
    2a8c:	fb 2d       	mov	r31, r11
    2a8e:	ff 77       	andi	r31, 0x7F	; 127
    2a90:	3f 2e       	mov	r3, r31
    2a92:	36 fe       	sbrs	r3, 6
    2a94:	0d c0       	rjmp	.+26     	; 0x2ab0 <vfprintf+0x2f2>
    2a96:	23 2d       	mov	r18, r3
    2a98:	2e 7f       	andi	r18, 0xFE	; 254
    2a9a:	a2 2e       	mov	r10, r18
    2a9c:	89 14       	cp	r8, r9
    2a9e:	58 f4       	brcc	.+22     	; 0x2ab6 <vfprintf+0x2f8>
    2aa0:	34 fe       	sbrs	r3, 4
    2aa2:	0b c0       	rjmp	.+22     	; 0x2aba <vfprintf+0x2fc>
    2aa4:	32 fc       	sbrc	r3, 2
    2aa6:	09 c0       	rjmp	.+18     	; 0x2aba <vfprintf+0x2fc>
    2aa8:	83 2d       	mov	r24, r3
    2aaa:	8e 7e       	andi	r24, 0xEE	; 238
    2aac:	a8 2e       	mov	r10, r24
    2aae:	05 c0       	rjmp	.+10     	; 0x2aba <vfprintf+0x2fc>
    2ab0:	b8 2c       	mov	r11, r8
    2ab2:	a3 2c       	mov	r10, r3
    2ab4:	03 c0       	rjmp	.+6      	; 0x2abc <vfprintf+0x2fe>
    2ab6:	b8 2c       	mov	r11, r8
    2ab8:	01 c0       	rjmp	.+2      	; 0x2abc <vfprintf+0x2fe>
    2aba:	b9 2c       	mov	r11, r9
    2abc:	a4 fe       	sbrs	r10, 4
    2abe:	0f c0       	rjmp	.+30     	; 0x2ade <vfprintf+0x320>
    2ac0:	fe 01       	movw	r30, r28
    2ac2:	e8 0d       	add	r30, r8
    2ac4:	f1 1d       	adc	r31, r1
    2ac6:	80 81       	ld	r24, Z
    2ac8:	80 33       	cpi	r24, 0x30	; 48
    2aca:	21 f4       	brne	.+8      	; 0x2ad4 <vfprintf+0x316>
    2acc:	9a 2d       	mov	r25, r10
    2ace:	99 7e       	andi	r25, 0xE9	; 233
    2ad0:	a9 2e       	mov	r10, r25
    2ad2:	09 c0       	rjmp	.+18     	; 0x2ae6 <vfprintf+0x328>
    2ad4:	a2 fe       	sbrs	r10, 2
    2ad6:	06 c0       	rjmp	.+12     	; 0x2ae4 <vfprintf+0x326>
    2ad8:	b3 94       	inc	r11
    2ada:	b3 94       	inc	r11
    2adc:	04 c0       	rjmp	.+8      	; 0x2ae6 <vfprintf+0x328>
    2ade:	8a 2d       	mov	r24, r10
    2ae0:	86 78       	andi	r24, 0x86	; 134
    2ae2:	09 f0       	breq	.+2      	; 0x2ae6 <vfprintf+0x328>
    2ae4:	b3 94       	inc	r11
    2ae6:	a3 fc       	sbrc	r10, 3
    2ae8:	11 c0       	rjmp	.+34     	; 0x2b0c <vfprintf+0x34e>
    2aea:	a0 fe       	sbrs	r10, 0
    2aec:	06 c0       	rjmp	.+12     	; 0x2afa <vfprintf+0x33c>
    2aee:	b2 14       	cp	r11, r2
    2af0:	88 f4       	brcc	.+34     	; 0x2b14 <vfprintf+0x356>
    2af2:	28 0c       	add	r2, r8
    2af4:	92 2c       	mov	r9, r2
    2af6:	9b 18       	sub	r9, r11
    2af8:	0e c0       	rjmp	.+28     	; 0x2b16 <vfprintf+0x358>
    2afa:	b2 14       	cp	r11, r2
    2afc:	60 f4       	brcc	.+24     	; 0x2b16 <vfprintf+0x358>
    2afe:	b6 01       	movw	r22, r12
    2b00:	80 e2       	ldi	r24, 0x20	; 32
    2b02:	90 e0       	ldi	r25, 0x00	; 0
    2b04:	0e 94 ff 15 	call	0x2bfe	; 0x2bfe <fputc>
    2b08:	b3 94       	inc	r11
    2b0a:	f7 cf       	rjmp	.-18     	; 0x2afa <vfprintf+0x33c>
    2b0c:	b2 14       	cp	r11, r2
    2b0e:	18 f4       	brcc	.+6      	; 0x2b16 <vfprintf+0x358>
    2b10:	2b 18       	sub	r2, r11
    2b12:	02 c0       	rjmp	.+4      	; 0x2b18 <vfprintf+0x35a>
    2b14:	98 2c       	mov	r9, r8
    2b16:	21 2c       	mov	r2, r1
    2b18:	a4 fe       	sbrs	r10, 4
    2b1a:	10 c0       	rjmp	.+32     	; 0x2b3c <vfprintf+0x37e>
    2b1c:	b6 01       	movw	r22, r12
    2b1e:	80 e3       	ldi	r24, 0x30	; 48
    2b20:	90 e0       	ldi	r25, 0x00	; 0
    2b22:	0e 94 ff 15 	call	0x2bfe	; 0x2bfe <fputc>
    2b26:	a2 fe       	sbrs	r10, 2
    2b28:	17 c0       	rjmp	.+46     	; 0x2b58 <vfprintf+0x39a>
    2b2a:	a1 fc       	sbrc	r10, 1
    2b2c:	03 c0       	rjmp	.+6      	; 0x2b34 <vfprintf+0x376>
    2b2e:	88 e7       	ldi	r24, 0x78	; 120
    2b30:	90 e0       	ldi	r25, 0x00	; 0
    2b32:	02 c0       	rjmp	.+4      	; 0x2b38 <vfprintf+0x37a>
    2b34:	88 e5       	ldi	r24, 0x58	; 88
    2b36:	90 e0       	ldi	r25, 0x00	; 0
    2b38:	b6 01       	movw	r22, r12
    2b3a:	0c c0       	rjmp	.+24     	; 0x2b54 <vfprintf+0x396>
    2b3c:	8a 2d       	mov	r24, r10
    2b3e:	86 78       	andi	r24, 0x86	; 134
    2b40:	59 f0       	breq	.+22     	; 0x2b58 <vfprintf+0x39a>
    2b42:	a1 fe       	sbrs	r10, 1
    2b44:	02 c0       	rjmp	.+4      	; 0x2b4a <vfprintf+0x38c>
    2b46:	8b e2       	ldi	r24, 0x2B	; 43
    2b48:	01 c0       	rjmp	.+2      	; 0x2b4c <vfprintf+0x38e>
    2b4a:	80 e2       	ldi	r24, 0x20	; 32
    2b4c:	a7 fc       	sbrc	r10, 7
    2b4e:	8d e2       	ldi	r24, 0x2D	; 45
    2b50:	b6 01       	movw	r22, r12
    2b52:	90 e0       	ldi	r25, 0x00	; 0
    2b54:	0e 94 ff 15 	call	0x2bfe	; 0x2bfe <fputc>
    2b58:	89 14       	cp	r8, r9
    2b5a:	38 f4       	brcc	.+14     	; 0x2b6a <vfprintf+0x3ac>
    2b5c:	b6 01       	movw	r22, r12
    2b5e:	80 e3       	ldi	r24, 0x30	; 48
    2b60:	90 e0       	ldi	r25, 0x00	; 0
    2b62:	0e 94 ff 15 	call	0x2bfe	; 0x2bfe <fputc>
    2b66:	9a 94       	dec	r9
    2b68:	f7 cf       	rjmp	.-18     	; 0x2b58 <vfprintf+0x39a>
    2b6a:	8a 94       	dec	r8
    2b6c:	f3 01       	movw	r30, r6
    2b6e:	e8 0d       	add	r30, r8
    2b70:	f1 1d       	adc	r31, r1
    2b72:	80 81       	ld	r24, Z
    2b74:	b6 01       	movw	r22, r12
    2b76:	90 e0       	ldi	r25, 0x00	; 0
    2b78:	0e 94 ff 15 	call	0x2bfe	; 0x2bfe <fputc>
    2b7c:	81 10       	cpse	r8, r1
    2b7e:	f5 cf       	rjmp	.-22     	; 0x2b6a <vfprintf+0x3ac>
    2b80:	22 20       	and	r2, r2
    2b82:	09 f4       	brne	.+2      	; 0x2b86 <vfprintf+0x3c8>
    2b84:	42 ce       	rjmp	.-892    	; 0x280a <vfprintf+0x4c>
    2b86:	b6 01       	movw	r22, r12
    2b88:	80 e2       	ldi	r24, 0x20	; 32
    2b8a:	90 e0       	ldi	r25, 0x00	; 0
    2b8c:	0e 94 ff 15 	call	0x2bfe	; 0x2bfe <fputc>
    2b90:	2a 94       	dec	r2
    2b92:	f6 cf       	rjmp	.-20     	; 0x2b80 <vfprintf+0x3c2>
    2b94:	f6 01       	movw	r30, r12
    2b96:	86 81       	ldd	r24, Z+6	; 0x06
    2b98:	97 81       	ldd	r25, Z+7	; 0x07
    2b9a:	02 c0       	rjmp	.+4      	; 0x2ba0 <vfprintf+0x3e2>
    2b9c:	8f ef       	ldi	r24, 0xFF	; 255
    2b9e:	9f ef       	ldi	r25, 0xFF	; 255
    2ba0:	2b 96       	adiw	r28, 0x0b	; 11
    2ba2:	0f b6       	in	r0, 0x3f	; 63
    2ba4:	f8 94       	cli
    2ba6:	de bf       	out	0x3e, r29	; 62
    2ba8:	0f be       	out	0x3f, r0	; 63
    2baa:	cd bf       	out	0x3d, r28	; 61
    2bac:	df 91       	pop	r29
    2bae:	cf 91       	pop	r28
    2bb0:	1f 91       	pop	r17
    2bb2:	0f 91       	pop	r16
    2bb4:	ff 90       	pop	r15
    2bb6:	ef 90       	pop	r14
    2bb8:	df 90       	pop	r13
    2bba:	cf 90       	pop	r12
    2bbc:	bf 90       	pop	r11
    2bbe:	af 90       	pop	r10
    2bc0:	9f 90       	pop	r9
    2bc2:	8f 90       	pop	r8
    2bc4:	7f 90       	pop	r7
    2bc6:	6f 90       	pop	r6
    2bc8:	5f 90       	pop	r5
    2bca:	4f 90       	pop	r4
    2bcc:	3f 90       	pop	r3
    2bce:	2f 90       	pop	r2
    2bd0:	08 95       	ret

00002bd2 <strnlen_P>:
    2bd2:	fc 01       	movw	r30, r24
    2bd4:	05 90       	lpm	r0, Z+
    2bd6:	61 50       	subi	r22, 0x01	; 1
    2bd8:	70 40       	sbci	r23, 0x00	; 0
    2bda:	01 10       	cpse	r0, r1
    2bdc:	d8 f7       	brcc	.-10     	; 0x2bd4 <strnlen_P+0x2>
    2bde:	80 95       	com	r24
    2be0:	90 95       	com	r25
    2be2:	8e 0f       	add	r24, r30
    2be4:	9f 1f       	adc	r25, r31
    2be6:	08 95       	ret

00002be8 <strnlen>:
    2be8:	fc 01       	movw	r30, r24
    2bea:	61 50       	subi	r22, 0x01	; 1
    2bec:	70 40       	sbci	r23, 0x00	; 0
    2bee:	01 90       	ld	r0, Z+
    2bf0:	01 10       	cpse	r0, r1
    2bf2:	d8 f7       	brcc	.-10     	; 0x2bea <strnlen+0x2>
    2bf4:	80 95       	com	r24
    2bf6:	90 95       	com	r25
    2bf8:	8e 0f       	add	r24, r30
    2bfa:	9f 1f       	adc	r25, r31
    2bfc:	08 95       	ret

00002bfe <fputc>:
    2bfe:	0f 93       	push	r16
    2c00:	1f 93       	push	r17
    2c02:	cf 93       	push	r28
    2c04:	df 93       	push	r29
    2c06:	fb 01       	movw	r30, r22
    2c08:	23 81       	ldd	r18, Z+3	; 0x03
    2c0a:	21 fd       	sbrc	r18, 1
    2c0c:	03 c0       	rjmp	.+6      	; 0x2c14 <fputc+0x16>
    2c0e:	8f ef       	ldi	r24, 0xFF	; 255
    2c10:	9f ef       	ldi	r25, 0xFF	; 255
    2c12:	2c c0       	rjmp	.+88     	; 0x2c6c <fputc+0x6e>
    2c14:	22 ff       	sbrs	r18, 2
    2c16:	16 c0       	rjmp	.+44     	; 0x2c44 <fputc+0x46>
    2c18:	46 81       	ldd	r20, Z+6	; 0x06
    2c1a:	57 81       	ldd	r21, Z+7	; 0x07
    2c1c:	24 81       	ldd	r18, Z+4	; 0x04
    2c1e:	35 81       	ldd	r19, Z+5	; 0x05
    2c20:	42 17       	cp	r20, r18
    2c22:	53 07       	cpc	r21, r19
    2c24:	44 f4       	brge	.+16     	; 0x2c36 <fputc+0x38>
    2c26:	a0 81       	ld	r26, Z
    2c28:	b1 81       	ldd	r27, Z+1	; 0x01
    2c2a:	9d 01       	movw	r18, r26
    2c2c:	2f 5f       	subi	r18, 0xFF	; 255
    2c2e:	3f 4f       	sbci	r19, 0xFF	; 255
    2c30:	31 83       	std	Z+1, r19	; 0x01
    2c32:	20 83       	st	Z, r18
    2c34:	8c 93       	st	X, r24
    2c36:	26 81       	ldd	r18, Z+6	; 0x06
    2c38:	37 81       	ldd	r19, Z+7	; 0x07
    2c3a:	2f 5f       	subi	r18, 0xFF	; 255
    2c3c:	3f 4f       	sbci	r19, 0xFF	; 255
    2c3e:	37 83       	std	Z+7, r19	; 0x07
    2c40:	26 83       	std	Z+6, r18	; 0x06
    2c42:	14 c0       	rjmp	.+40     	; 0x2c6c <fputc+0x6e>
    2c44:	8b 01       	movw	r16, r22
    2c46:	ec 01       	movw	r28, r24
    2c48:	fb 01       	movw	r30, r22
    2c4a:	00 84       	ldd	r0, Z+8	; 0x08
    2c4c:	f1 85       	ldd	r31, Z+9	; 0x09
    2c4e:	e0 2d       	mov	r30, r0
    2c50:	09 95       	icall
    2c52:	89 2b       	or	r24, r25
    2c54:	e1 f6       	brne	.-72     	; 0x2c0e <fputc+0x10>
    2c56:	d8 01       	movw	r26, r16
    2c58:	16 96       	adiw	r26, 0x06	; 6
    2c5a:	8d 91       	ld	r24, X+
    2c5c:	9c 91       	ld	r25, X
    2c5e:	17 97       	sbiw	r26, 0x07	; 7
    2c60:	01 96       	adiw	r24, 0x01	; 1
    2c62:	17 96       	adiw	r26, 0x07	; 7
    2c64:	9c 93       	st	X, r25
    2c66:	8e 93       	st	-X, r24
    2c68:	16 97       	sbiw	r26, 0x06	; 6
    2c6a:	ce 01       	movw	r24, r28
    2c6c:	df 91       	pop	r29
    2c6e:	cf 91       	pop	r28
    2c70:	1f 91       	pop	r17
    2c72:	0f 91       	pop	r16
    2c74:	08 95       	ret

00002c76 <__ultoa_invert>:
    2c76:	fa 01       	movw	r30, r20
    2c78:	aa 27       	eor	r26, r26
    2c7a:	28 30       	cpi	r18, 0x08	; 8
    2c7c:	51 f1       	breq	.+84     	; 0x2cd2 <__ultoa_invert+0x5c>
    2c7e:	20 31       	cpi	r18, 0x10	; 16
    2c80:	81 f1       	breq	.+96     	; 0x2ce2 <__ultoa_invert+0x6c>
    2c82:	e8 94       	clt
    2c84:	6f 93       	push	r22
    2c86:	6e 7f       	andi	r22, 0xFE	; 254
    2c88:	6e 5f       	subi	r22, 0xFE	; 254
    2c8a:	7f 4f       	sbci	r23, 0xFF	; 255
    2c8c:	8f 4f       	sbci	r24, 0xFF	; 255
    2c8e:	9f 4f       	sbci	r25, 0xFF	; 255
    2c90:	af 4f       	sbci	r26, 0xFF	; 255
    2c92:	b1 e0       	ldi	r27, 0x01	; 1
    2c94:	3e d0       	rcall	.+124    	; 0x2d12 <__ultoa_invert+0x9c>
    2c96:	b4 e0       	ldi	r27, 0x04	; 4
    2c98:	3c d0       	rcall	.+120    	; 0x2d12 <__ultoa_invert+0x9c>
    2c9a:	67 0f       	add	r22, r23
    2c9c:	78 1f       	adc	r23, r24
    2c9e:	89 1f       	adc	r24, r25
    2ca0:	9a 1f       	adc	r25, r26
    2ca2:	a1 1d       	adc	r26, r1
    2ca4:	68 0f       	add	r22, r24
    2ca6:	79 1f       	adc	r23, r25
    2ca8:	8a 1f       	adc	r24, r26
    2caa:	91 1d       	adc	r25, r1
    2cac:	a1 1d       	adc	r26, r1
    2cae:	6a 0f       	add	r22, r26
    2cb0:	71 1d       	adc	r23, r1
    2cb2:	81 1d       	adc	r24, r1
    2cb4:	91 1d       	adc	r25, r1
    2cb6:	a1 1d       	adc	r26, r1
    2cb8:	20 d0       	rcall	.+64     	; 0x2cfa <__ultoa_invert+0x84>
    2cba:	09 f4       	brne	.+2      	; 0x2cbe <__ultoa_invert+0x48>
    2cbc:	68 94       	set
    2cbe:	3f 91       	pop	r19
    2cc0:	2a e0       	ldi	r18, 0x0A	; 10
    2cc2:	26 9f       	mul	r18, r22
    2cc4:	11 24       	eor	r1, r1
    2cc6:	30 19       	sub	r19, r0
    2cc8:	30 5d       	subi	r19, 0xD0	; 208
    2cca:	31 93       	st	Z+, r19
    2ccc:	de f6       	brtc	.-74     	; 0x2c84 <__ultoa_invert+0xe>
    2cce:	cf 01       	movw	r24, r30
    2cd0:	08 95       	ret
    2cd2:	46 2f       	mov	r20, r22
    2cd4:	47 70       	andi	r20, 0x07	; 7
    2cd6:	40 5d       	subi	r20, 0xD0	; 208
    2cd8:	41 93       	st	Z+, r20
    2cda:	b3 e0       	ldi	r27, 0x03	; 3
    2cdc:	0f d0       	rcall	.+30     	; 0x2cfc <__ultoa_invert+0x86>
    2cde:	c9 f7       	brne	.-14     	; 0x2cd2 <__ultoa_invert+0x5c>
    2ce0:	f6 cf       	rjmp	.-20     	; 0x2cce <__ultoa_invert+0x58>
    2ce2:	46 2f       	mov	r20, r22
    2ce4:	4f 70       	andi	r20, 0x0F	; 15
    2ce6:	40 5d       	subi	r20, 0xD0	; 208
    2ce8:	4a 33       	cpi	r20, 0x3A	; 58
    2cea:	18 f0       	brcs	.+6      	; 0x2cf2 <__ultoa_invert+0x7c>
    2cec:	49 5d       	subi	r20, 0xD9	; 217
    2cee:	31 fd       	sbrc	r19, 1
    2cf0:	40 52       	subi	r20, 0x20	; 32
    2cf2:	41 93       	st	Z+, r20
    2cf4:	02 d0       	rcall	.+4      	; 0x2cfa <__ultoa_invert+0x84>
    2cf6:	a9 f7       	brne	.-22     	; 0x2ce2 <__ultoa_invert+0x6c>
    2cf8:	ea cf       	rjmp	.-44     	; 0x2cce <__ultoa_invert+0x58>
    2cfa:	b4 e0       	ldi	r27, 0x04	; 4
    2cfc:	a6 95       	lsr	r26
    2cfe:	97 95       	ror	r25
    2d00:	87 95       	ror	r24
    2d02:	77 95       	ror	r23
    2d04:	67 95       	ror	r22
    2d06:	ba 95       	dec	r27
    2d08:	c9 f7       	brne	.-14     	; 0x2cfc <__ultoa_invert+0x86>
    2d0a:	00 97       	sbiw	r24, 0x00	; 0
    2d0c:	61 05       	cpc	r22, r1
    2d0e:	71 05       	cpc	r23, r1
    2d10:	08 95       	ret
    2d12:	9b 01       	movw	r18, r22
    2d14:	ac 01       	movw	r20, r24
    2d16:	0a 2e       	mov	r0, r26
    2d18:	06 94       	lsr	r0
    2d1a:	57 95       	ror	r21
    2d1c:	47 95       	ror	r20
    2d1e:	37 95       	ror	r19
    2d20:	27 95       	ror	r18
    2d22:	ba 95       	dec	r27
    2d24:	c9 f7       	brne	.-14     	; 0x2d18 <__ultoa_invert+0xa2>
    2d26:	62 0f       	add	r22, r18
    2d28:	73 1f       	adc	r23, r19
    2d2a:	84 1f       	adc	r24, r20
    2d2c:	95 1f       	adc	r25, r21
    2d2e:	a0 1d       	adc	r26, r0
    2d30:	08 95       	ret

00002d32 <_exit>:
    2d32:	f8 94       	cli

00002d34 <__stop_program>:
    2d34:	ff cf       	rjmp	.-2      	; 0x2d34 <__stop_program>
