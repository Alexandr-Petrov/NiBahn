
Project3.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000002d6  00800100  00002dd2  00002e66  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00002dd2  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000000cf  008003d6  008003d6  0000313c  2**0
                  ALLOC
  3 .stab         00002610  00000000  00000000  0000313c  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00001591  00000000  00000000  0000574c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .comment      00000011  00000000  00000000  00006cdd  2**0
                  CONTENTS, READONLY
  6 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00006cf0  2**2
                  CONTENTS, READONLY
  7 .debug_info   00000780  00000000  00000000  00006d2c  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00000718  00000000  00000000  000074ac  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   0000001a  00000000  00000000  00007bc4  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000027d  00000000  00000000  00007bde  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 49 00 	jmp	0x92	; 0x92 <__ctors_end>
       4:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
       8:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
       c:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
      10:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
      14:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
      18:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
      1c:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
      20:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
      24:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
      28:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
      2c:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
      30:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
      34:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
      38:	0c 94 ef 08 	jmp	0x11de	; 0x11de <__vector_14>
      3c:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
      40:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
      44:	0c 94 a9 09 	jmp	0x1352	; 0x1352 <__vector_17>
      48:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
      4c:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
      50:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
      54:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
      58:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
      5c:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
      60:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
      64:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
      68:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
      6c:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
      70:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
      74:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
      78:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
      7c:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
      80:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
      84:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>
      88:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__bad_interrupt>

0000008c <__trampolines_end>:
      8c:	32 2e       	mov	r3, r18
      8e:	31 31       	cpi	r19, 0x11	; 17
	...

00000091 <bot_lib_revision>:
	...

00000092 <__ctors_end>:
      92:	11 24       	eor	r1, r1
      94:	1f be       	out	0x3f, r1	; 63
      96:	cf ef       	ldi	r28, 0xFF	; 255
      98:	d0 e1       	ldi	r29, 0x10	; 16
      9a:	de bf       	out	0x3e, r29	; 62
      9c:	cd bf       	out	0x3d, r28	; 61

0000009e <__do_copy_data>:
      9e:	13 e0       	ldi	r17, 0x03	; 3
      a0:	a0 e0       	ldi	r26, 0x00	; 0
      a2:	b1 e0       	ldi	r27, 0x01	; 1
      a4:	e2 ed       	ldi	r30, 0xD2	; 210
      a6:	fd e2       	ldi	r31, 0x2D	; 45
      a8:	00 e0       	ldi	r16, 0x00	; 0
      aa:	0b bf       	out	0x3b, r16	; 59
      ac:	02 c0       	rjmp	.+4      	; 0xb2 <__do_copy_data+0x14>
      ae:	07 90       	elpm	r0, Z+
      b0:	0d 92       	st	X+, r0
      b2:	a6 3d       	cpi	r26, 0xD6	; 214
      b4:	b1 07       	cpc	r27, r17
      b6:	d9 f7       	brne	.-10     	; 0xae <__do_copy_data+0x10>

000000b8 <__do_clear_bss>:
      b8:	24 e0       	ldi	r18, 0x04	; 4
      ba:	a6 ed       	ldi	r26, 0xD6	; 214
      bc:	b3 e0       	ldi	r27, 0x03	; 3
      be:	01 c0       	rjmp	.+2      	; 0xc2 <.do_clear_bss_start>

000000c0 <.do_clear_bss_loop>:
      c0:	1d 92       	st	X+, r1

000000c2 <.do_clear_bss_start>:
      c2:	a5 3a       	cpi	r26, 0xA5	; 165
      c4:	b2 07       	cpc	r27, r18
      c6:	e1 f7       	brne	.-8      	; 0xc0 <.do_clear_bss_loop>
      c8:	0e 94 69 03 	call	0x6d2	; 0x6d2 <main>
      cc:	0c 94 e7 16 	jmp	0x2dce	; 0x2dce <_exit>

000000d0 <__bad_interrupt>:
      d0:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000d4 <findDirection>:
#include "main.h"
void findDirection()
{
      d4:	cf 93       	push	r28
      d6:	df 93       	push	r29
      d8:	cd b7       	in	r28, 0x3d	; 61
      da:	de b7       	in	r29, 0x3e	; 62
      dc:	a8 97       	sbiw	r28, 0x28	; 40
      de:	0f b6       	in	r0, 0x3f	; 63
      e0:	f8 94       	cli
      e2:	de bf       	out	0x3e, r29	; 62
      e4:	0f be       	out	0x3f, r0	; 63
      e6:	cd bf       	out	0x3d, r28	; 61
	char text[20] = "";
      e8:	1a 82       	std	Y+2, r1	; 0x02
      ea:	19 82       	std	Y+1, r1	; 0x01
      ec:	22 e1       	ldi	r18, 0x12	; 18
      ee:	ce 01       	movw	r24, r28
      f0:	03 96       	adiw	r24, 0x03	; 3
      f2:	fc 01       	movw	r30, r24
      f4:	32 2f       	mov	r19, r18
      f6:	11 92       	st	Z+, r1
      f8:	3a 95       	dec	r19
      fa:	e9 f7       	brne	.-6      	; 0xf6 <findDirection+0x22>
	char output[20] = "";
      fc:	1e 8a       	std	Y+22, r1	; 0x16
      fe:	1d 8a       	std	Y+21, r1	; 0x15
     100:	22 e1       	ldi	r18, 0x12	; 18
     102:	ce 01       	movw	r24, r28
     104:	47 96       	adiw	r24, 0x17	; 23
     106:	fc 01       	movw	r30, r24
     108:	32 2f       	mov	r19, r18
     10a:	11 92       	st	Z+, r1
     10c:	3a 95       	dec	r19
     10e:	e9 f7       	brne	.-6      	; 0x10a <findDirection+0x36>
	copro_update();
     110:	0e 94 16 10 	call	0x202c	; 0x202c <copro_update>
	copro_ir_startMeasure();
     114:	0e 94 5a 11 	call	0x22b4	; 0x22b4 <copro_ir_startMeasure>
	drive();
     118:	0e 94 f1 02 	call	0x5e2	; 0x5e2 <drive>
	showNibo();
     11c:	0e 94 c6 03 	call	0x78c	; 0x78c <showNibo>
	static int flag;
	static int timer=0;
	//Tunnel
	if (copro_distance[0]/256 > 50 &&
     120:	80 91 63 04 	lds	r24, 0x0463	; 0x800463 <copro_distance>
     124:	90 91 64 04 	lds	r25, 0x0464	; 0x800464 <copro_distance+0x1>
     128:	81 15       	cp	r24, r1
     12a:	93 43       	sbci	r25, 0x33	; 51
     12c:	c0 f1       	brcs	.+112    	; 0x19e <findDirection+0xca>
		copro_distance[2]/256 > 50 &&
     12e:	80 91 67 04 	lds	r24, 0x0467	; 0x800467 <copro_distance+0x4>
     132:	90 91 68 04 	lds	r25, 0x0468	; 0x800468 <copro_distance+0x5>
	drive();
	showNibo();
	static int flag;
	static int timer=0;
	//Tunnel
	if (copro_distance[0]/256 > 50 &&
     136:	81 15       	cp	r24, r1
     138:	93 43       	sbci	r25, 0x33	; 51
     13a:	88 f1       	brcs	.+98     	; 0x19e <findDirection+0xca>
		copro_distance[2]/256 > 50 &&
		copro_distance[4]/256 > 50 )
     13c:	80 91 6b 04 	lds	r24, 0x046B	; 0x80046b <copro_distance+0x8>
     140:	90 91 6c 04 	lds	r25, 0x046C	; 0x80046c <copro_distance+0x9>
	showNibo();
	static int flag;
	static int timer=0;
	//Tunnel
	if (copro_distance[0]/256 > 50 &&
		copro_distance[2]/256 > 50 &&
     144:	81 15       	cp	r24, r1
     146:	93 43       	sbci	r25, 0x33	; 51
     148:	50 f1       	brcs	.+84     	; 0x19e <findDirection+0xca>
		copro_distance[4]/256 > 50 )
		{
			flag=1;
     14a:	81 e0       	ldi	r24, 0x01	; 1
     14c:	90 e0       	ldi	r25, 0x00	; 0
     14e:	90 93 d7 03 	sts	0x03D7, r25	; 0x8003d7 <__data_end+0x1>
     152:	80 93 d6 03 	sts	0x03D6, r24	; 0x8003d6 <__data_end>
			sprintf(text, "Flag stop: %3i", (int) flag);
     156:	80 91 d6 03 	lds	r24, 0x03D6	; 0x8003d6 <__data_end>
     15a:	90 91 d7 03 	lds	r25, 0x03D7	; 0x8003d7 <__data_end+0x1>
     15e:	29 2f       	mov	r18, r25
     160:	2f 93       	push	r18
     162:	8f 93       	push	r24
     164:	80 e0       	ldi	r24, 0x00	; 0
     166:	91 e0       	ldi	r25, 0x01	; 1
     168:	89 2f       	mov	r24, r25
     16a:	8f 93       	push	r24
     16c:	80 e0       	ldi	r24, 0x00	; 0
     16e:	91 e0       	ldi	r25, 0x01	; 1
     170:	8f 93       	push	r24
     172:	ce 01       	movw	r24, r28
     174:	01 96       	adiw	r24, 0x01	; 1
     176:	9f 93       	push	r25
     178:	8f 93       	push	r24
     17a:	0e 94 fe 13 	call	0x27fc	; 0x27fc <sprintf>
     17e:	0f 90       	pop	r0
     180:	0f 90       	pop	r0
     182:	0f 90       	pop	r0
     184:	0f 90       	pop	r0
     186:	0f 90       	pop	r0
     188:	0f 90       	pop	r0
			gfx_move(0,40);
     18a:	68 e2       	ldi	r22, 0x28	; 40
     18c:	80 e0       	ldi	r24, 0x00	; 0
     18e:	0e 94 89 0a 	call	0x1512	; 0x1512 <gfx_move>
			gfx_print_text(text);
     192:	ce 01       	movw	r24, r28
     194:	01 96       	adiw	r24, 0x01	; 1
     196:	0e 94 f3 0b 	call	0x17e6	; 0x17e6 <gfx_print_text>
			goBack();
     19a:	0e 94 55 03 	call	0x6aa	; 0x6aa <goBack>
		}
	if (copro_distance[0]/256 > 50 &&
     19e:	80 91 63 04 	lds	r24, 0x0463	; 0x800463 <copro_distance>
     1a2:	90 91 64 04 	lds	r25, 0x0464	; 0x800464 <copro_distance+0x1>
     1a6:	81 15       	cp	r24, r1
     1a8:	93 43       	sbci	r25, 0x33	; 51
     1aa:	08 f4       	brcc	.+2      	; 0x1ae <findDirection+0xda>
     1ac:	52 c0       	rjmp	.+164    	; 0x252 <findDirection+0x17e>
		copro_distance[4]/256 > 50)
     1ae:	80 91 6b 04 	lds	r24, 0x046B	; 0x80046b <copro_distance+0x8>
     1b2:	90 91 6c 04 	lds	r25, 0x046C	; 0x80046c <copro_distance+0x9>
			sprintf(text, "Flag stop: %3i", (int) flag);
			gfx_move(0,40);
			gfx_print_text(text);
			goBack();
		}
	if (copro_distance[0]/256 > 50 &&
     1b6:	81 15       	cp	r24, r1
     1b8:	93 43       	sbci	r25, 0x33	; 51
     1ba:	08 f4       	brcc	.+2      	; 0x1be <findDirection+0xea>
     1bc:	4a c0       	rjmp	.+148    	; 0x252 <findDirection+0x17e>
		copro_distance[4]/256 > 50)
			{
				timer++;
     1be:	80 91 d8 03 	lds	r24, 0x03D8	; 0x8003d8 <timer.2345>
     1c2:	90 91 d9 03 	lds	r25, 0x03D9	; 0x8003d9 <timer.2345+0x1>
     1c6:	01 96       	adiw	r24, 0x01	; 1
     1c8:	90 93 d9 03 	sts	0x03D9, r25	; 0x8003d9 <timer.2345+0x1>
     1cc:	80 93 d8 03 	sts	0x03D8, r24	; 0x8003d8 <timer.2345>
				sprintf(text, "Time: %3i", (int) timer);
     1d0:	80 91 d8 03 	lds	r24, 0x03D8	; 0x8003d8 <timer.2345>
     1d4:	90 91 d9 03 	lds	r25, 0x03D9	; 0x8003d9 <timer.2345+0x1>
     1d8:	29 2f       	mov	r18, r25
     1da:	2f 93       	push	r18
     1dc:	8f 93       	push	r24
     1de:	8f e0       	ldi	r24, 0x0F	; 15
     1e0:	91 e0       	ldi	r25, 0x01	; 1
     1e2:	89 2f       	mov	r24, r25
     1e4:	8f 93       	push	r24
     1e6:	8f e0       	ldi	r24, 0x0F	; 15
     1e8:	91 e0       	ldi	r25, 0x01	; 1
     1ea:	8f 93       	push	r24
     1ec:	ce 01       	movw	r24, r28
     1ee:	01 96       	adiw	r24, 0x01	; 1
     1f0:	9f 93       	push	r25
     1f2:	8f 93       	push	r24
     1f4:	0e 94 fe 13 	call	0x27fc	; 0x27fc <sprintf>
     1f8:	0f 90       	pop	r0
     1fa:	0f 90       	pop	r0
     1fc:	0f 90       	pop	r0
     1fe:	0f 90       	pop	r0
     200:	0f 90       	pop	r0
     202:	0f 90       	pop	r0
				gfx_move(0, 0);
     204:	60 e0       	ldi	r22, 0x00	; 0
     206:	80 e0       	ldi	r24, 0x00	; 0
     208:	0e 94 89 0a 	call	0x1512	; 0x1512 <gfx_move>
				gfx_print_text(text);
     20c:	ce 01       	movw	r24, r28
     20e:	01 96       	adiw	r24, 0x01	; 1
     210:	0e 94 f3 0b 	call	0x17e6	; 0x17e6 <gfx_print_text>
				if(flag==1 && timer!=-6)
     214:	80 91 d6 03 	lds	r24, 0x03D6	; 0x8003d6 <__data_end>
     218:	90 91 d7 03 	lds	r25, 0x03D7	; 0x8003d7 <__data_end+0x1>
     21c:	01 97       	sbiw	r24, 0x01	; 1
     21e:	11 f5       	brne	.+68     	; 0x264 <findDirection+0x190>
     220:	80 91 d8 03 	lds	r24, 0x03D8	; 0x8003d8 <timer.2345>
     224:	90 91 d9 03 	lds	r25, 0x03D9	; 0x8003d9 <timer.2345+0x1>
     228:	06 96       	adiw	r24, 0x06	; 6
     22a:	e1 f0       	breq	.+56     	; 0x264 <findDirection+0x190>
				{
					goBack();
     22c:	0e 94 55 03 	call	0x6aa	; 0x6aa <goBack>
					LEDShow('r', 0, 1);
     230:	41 e0       	ldi	r20, 0x01	; 1
     232:	50 e0       	ldi	r21, 0x00	; 0
     234:	60 e0       	ldi	r22, 0x00	; 0
     236:	70 e0       	ldi	r23, 0x00	; 0
     238:	82 e7       	ldi	r24, 0x72	; 114
     23a:	0e 94 8e 03 	call	0x71c	; 0x71c <LEDShow>
					timer=timer-1;
     23e:	80 91 d8 03 	lds	r24, 0x03D8	; 0x8003d8 <timer.2345>
     242:	90 91 d9 03 	lds	r25, 0x03D9	; 0x8003d9 <timer.2345+0x1>
     246:	01 97       	sbiw	r24, 0x01	; 1
     248:	90 93 d9 03 	sts	0x03D9, r25	; 0x8003d9 <timer.2345+0x1>
     24c:	80 93 d8 03 	sts	0x03D8, r24	; 0x8003d8 <timer.2345>
			{
				timer++;
				sprintf(text, "Time: %3i", (int) timer);
				gfx_move(0, 0);
				gfx_print_text(text);
				if(flag==1 && timer!=-6)
     250:	09 c0       	rjmp	.+18     	; 0x264 <findDirection+0x190>
					timer=timer-1;
				}
			}
	else
	{
		leds_set_status(LEDS_OFF, 0);
     252:	60 e0       	ldi	r22, 0x00	; 0
     254:	80 e0       	ldi	r24, 0x00	; 0
     256:	0e 94 92 11 	call	0x2324	; 0x2324 <leds_set_status>
		leds_set_status(LEDS_OFF, 1);
     25a:	61 e0       	ldi	r22, 0x01	; 1
     25c:	80 e0       	ldi	r24, 0x00	; 0
     25e:	0e 94 92 11 	call	0x2324	; 0x2324 <leds_set_status>
     262:	01 c0       	rjmp	.+2      	; 0x266 <findDirection+0x192>
			{
				timer++;
				sprintf(text, "Time: %3i", (int) timer);
				gfx_move(0, 0);
				gfx_print_text(text);
				if(flag==1 && timer!=-6)
     264:	00 00       	nop
	{
		leds_set_status(LEDS_OFF, 0);
		leds_set_status(LEDS_OFF, 1);
	}
	// exit from the tunnel
	if (copro_distance[0]/256 > 50 &&
     266:	80 91 63 04 	lds	r24, 0x0463	; 0x800463 <copro_distance>
     26a:	90 91 64 04 	lds	r25, 0x0464	; 0x800464 <copro_distance+0x1>
     26e:	81 15       	cp	r24, r1
     270:	93 43       	sbci	r25, 0x33	; 51
     272:	c8 f1       	brcs	.+114    	; 0x2e6 <findDirection+0x212>
		copro_distance[4]/256 < 50 &&
     274:	80 91 6b 04 	lds	r24, 0x046B	; 0x80046b <copro_distance+0x8>
     278:	90 91 6c 04 	lds	r25, 0x046C	; 0x80046c <copro_distance+0x9>
	{
		leds_set_status(LEDS_OFF, 0);
		leds_set_status(LEDS_OFF, 1);
	}
	// exit from the tunnel
	if (copro_distance[0]/256 > 50 &&
     27c:	81 15       	cp	r24, r1
     27e:	92 43       	sbci	r25, 0x32	; 50
     280:	90 f5       	brcc	.+100    	; 0x2e6 <findDirection+0x212>
		copro_distance[4]/256 < 50 &&
		flag==1)
     282:	80 91 d6 03 	lds	r24, 0x03D6	; 0x8003d6 <__data_end>
     286:	90 91 d7 03 	lds	r25, 0x03D7	; 0x8003d7 <__data_end+0x1>
		leds_set_status(LEDS_OFF, 0);
		leds_set_status(LEDS_OFF, 1);
	}
	// exit from the tunnel
	if (copro_distance[0]/256 > 50 &&
		copro_distance[4]/256 < 50 &&
     28a:	01 97       	sbiw	r24, 0x01	; 1
     28c:	61 f5       	brne	.+88     	; 0x2e6 <findDirection+0x212>
		flag==1)
		{
			turnLeft();
     28e:	0e 94 19 03 	call	0x632	; 0x632 <turnLeft>
			sprintf(output, "Flag turn: %3i", (int) flag);
     292:	80 91 d6 03 	lds	r24, 0x03D6	; 0x8003d6 <__data_end>
     296:	90 91 d7 03 	lds	r25, 0x03D7	; 0x8003d7 <__data_end+0x1>
     29a:	29 2f       	mov	r18, r25
     29c:	2f 93       	push	r18
     29e:	8f 93       	push	r24
     2a0:	89 e1       	ldi	r24, 0x19	; 25
     2a2:	91 e0       	ldi	r25, 0x01	; 1
     2a4:	89 2f       	mov	r24, r25
     2a6:	8f 93       	push	r24
     2a8:	89 e1       	ldi	r24, 0x19	; 25
     2aa:	91 e0       	ldi	r25, 0x01	; 1
     2ac:	8f 93       	push	r24
     2ae:	ce 01       	movw	r24, r28
     2b0:	45 96       	adiw	r24, 0x15	; 21
     2b2:	29 2f       	mov	r18, r25
     2b4:	2f 93       	push	r18
     2b6:	8f 93       	push	r24
     2b8:	0e 94 fe 13 	call	0x27fc	; 0x27fc <sprintf>
     2bc:	0f 90       	pop	r0
     2be:	0f 90       	pop	r0
     2c0:	0f 90       	pop	r0
     2c2:	0f 90       	pop	r0
     2c4:	0f 90       	pop	r0
     2c6:	0f 90       	pop	r0
			gfx_move(0,40);
     2c8:	68 e2       	ldi	r22, 0x28	; 40
     2ca:	80 e0       	ldi	r24, 0x00	; 0
     2cc:	0e 94 89 0a 	call	0x1512	; 0x1512 <gfx_move>
			gfx_print_text(output);
     2d0:	ce 01       	movw	r24, r28
     2d2:	45 96       	adiw	r24, 0x15	; 21
     2d4:	0e 94 f3 0b 	call	0x17e6	; 0x17e6 <gfx_print_text>
			LEDShow('g', 0, 1);
     2d8:	41 e0       	ldi	r20, 0x01	; 1
     2da:	50 e0       	ldi	r21, 0x00	; 0
     2dc:	60 e0       	ldi	r22, 0x00	; 0
     2de:	70 e0       	ldi	r23, 0x00	; 0
     2e0:	87 e6       	ldi	r24, 0x67	; 103
     2e2:	0e 94 8e 03 	call	0x71c	; 0x71c <LEDShow>

		}
	if (copro_distance[4]/256 > 50 &&
     2e6:	80 91 6b 04 	lds	r24, 0x046B	; 0x80046b <copro_distance+0x8>
     2ea:	90 91 6c 04 	lds	r25, 0x046C	; 0x80046c <copro_distance+0x9>
     2ee:	81 15       	cp	r24, r1
     2f0:	93 43       	sbci	r25, 0x33	; 51
     2f2:	c8 f1       	brcs	.+114    	; 0x366 <findDirection+0x292>
		copro_distance[0]/256 < 50 &&
     2f4:	80 91 63 04 	lds	r24, 0x0463	; 0x800463 <copro_distance>
     2f8:	90 91 64 04 	lds	r25, 0x0464	; 0x800464 <copro_distance+0x1>
			gfx_move(0,40);
			gfx_print_text(output);
			LEDShow('g', 0, 1);

		}
	if (copro_distance[4]/256 > 50 &&
     2fc:	81 15       	cp	r24, r1
     2fe:	92 43       	sbci	r25, 0x32	; 50
     300:	90 f5       	brcc	.+100    	; 0x366 <findDirection+0x292>
		copro_distance[0]/256 < 50 &&
		flag==1)
     302:	80 91 d6 03 	lds	r24, 0x03D6	; 0x8003d6 <__data_end>
     306:	90 91 d7 03 	lds	r25, 0x03D7	; 0x8003d7 <__data_end+0x1>
			gfx_print_text(output);
			LEDShow('g', 0, 1);

		}
	if (copro_distance[4]/256 > 50 &&
		copro_distance[0]/256 < 50 &&
     30a:	01 97       	sbiw	r24, 0x01	; 1
     30c:	61 f5       	brne	.+88     	; 0x366 <findDirection+0x292>
		flag==1)
		{
			turnRight();
     30e:	0e 94 41 03 	call	0x682	; 0x682 <turnRight>
			sprintf(output, "Flag turn: %3i", (int) flag);
     312:	80 91 d6 03 	lds	r24, 0x03D6	; 0x8003d6 <__data_end>
     316:	90 91 d7 03 	lds	r25, 0x03D7	; 0x8003d7 <__data_end+0x1>
     31a:	29 2f       	mov	r18, r25
     31c:	2f 93       	push	r18
     31e:	8f 93       	push	r24
     320:	89 e1       	ldi	r24, 0x19	; 25
     322:	91 e0       	ldi	r25, 0x01	; 1
     324:	89 2f       	mov	r24, r25
     326:	8f 93       	push	r24
     328:	89 e1       	ldi	r24, 0x19	; 25
     32a:	91 e0       	ldi	r25, 0x01	; 1
     32c:	8f 93       	push	r24
     32e:	ce 01       	movw	r24, r28
     330:	45 96       	adiw	r24, 0x15	; 21
     332:	29 2f       	mov	r18, r25
     334:	2f 93       	push	r18
     336:	8f 93       	push	r24
     338:	0e 94 fe 13 	call	0x27fc	; 0x27fc <sprintf>
     33c:	0f 90       	pop	r0
     33e:	0f 90       	pop	r0
     340:	0f 90       	pop	r0
     342:	0f 90       	pop	r0
     344:	0f 90       	pop	r0
     346:	0f 90       	pop	r0
					gfx_move(0,40);
     348:	68 e2       	ldi	r22, 0x28	; 40
     34a:	80 e0       	ldi	r24, 0x00	; 0
     34c:	0e 94 89 0a 	call	0x1512	; 0x1512 <gfx_move>
					gfx_print_text(output);
     350:	ce 01       	movw	r24, r28
     352:	45 96       	adiw	r24, 0x15	; 21
     354:	0e 94 f3 0b 	call	0x17e6	; 0x17e6 <gfx_print_text>
					LEDShow('g', 0, 1);
     358:	41 e0       	ldi	r20, 0x01	; 1
     35a:	50 e0       	ldi	r21, 0x00	; 0
     35c:	60 e0       	ldi	r22, 0x00	; 0
     35e:	70 e0       	ldi	r23, 0x00	; 0
     360:	87 e6       	ldi	r24, 0x67	; 103
     362:	0e 94 8e 03 	call	0x71c	; 0x71c <LEDShow>
		}

	//turn left
	if (copro_distance[0]/256 > 45 &&
     366:	80 91 63 04 	lds	r24, 0x0463	; 0x800463 <copro_distance>
     36a:	90 91 64 04 	lds	r25, 0x0464	; 0x800464 <copro_distance+0x1>
     36e:	81 15       	cp	r24, r1
     370:	9e 42       	sbci	r25, 0x2E	; 46
     372:	08 f4       	brcc	.+2      	; 0x376 <findDirection+0x2a2>
     374:	3e c0       	rjmp	.+124    	; 0x3f2 <findDirection+0x31e>
		copro_distance[1]/256 > 45 &&
     376:	80 91 65 04 	lds	r24, 0x0465	; 0x800465 <copro_distance+0x2>
     37a:	90 91 66 04 	lds	r25, 0x0466	; 0x800466 <copro_distance+0x3>
					gfx_print_text(output);
					LEDShow('g', 0, 1);
		}

	//turn left
	if (copro_distance[0]/256 > 45 &&
     37e:	81 15       	cp	r24, r1
     380:	9e 42       	sbci	r25, 0x2E	; 46
     382:	b8 f1       	brcs	.+110    	; 0x3f2 <findDirection+0x31e>
		copro_distance[1]/256 > 45 &&
		copro_distance[2]/256 > 45 &&
     384:	80 91 67 04 	lds	r24, 0x0467	; 0x800467 <copro_distance+0x4>
     388:	90 91 68 04 	lds	r25, 0x0468	; 0x800468 <copro_distance+0x5>
					LEDShow('g', 0, 1);
		}

	//turn left
	if (copro_distance[0]/256 > 45 &&
		copro_distance[1]/256 > 45 &&
     38c:	81 15       	cp	r24, r1
     38e:	9e 42       	sbci	r25, 0x2E	; 46
     390:	80 f1       	brcs	.+96     	; 0x3f2 <findDirection+0x31e>
		copro_distance[2]/256 > 45 &&
		copro_distance[3]/256 < 45 &&
     392:	80 91 69 04 	lds	r24, 0x0469	; 0x800469 <copro_distance+0x6>
     396:	90 91 6a 04 	lds	r25, 0x046A	; 0x80046a <copro_distance+0x7>
		}

	//turn left
	if (copro_distance[0]/256 > 45 &&
		copro_distance[1]/256 > 45 &&
		copro_distance[2]/256 > 45 &&
     39a:	81 15       	cp	r24, r1
     39c:	9d 42       	sbci	r25, 0x2D	; 45
     39e:	48 f5       	brcc	.+82     	; 0x3f2 <findDirection+0x31e>
		copro_distance[3]/256 < 45 &&
		copro_distance[4]/256 < 45 &&
     3a0:	80 91 6b 04 	lds	r24, 0x046B	; 0x80046b <copro_distance+0x8>
     3a4:	90 91 6c 04 	lds	r25, 0x046C	; 0x80046c <copro_distance+0x9>

	//turn left
	if (copro_distance[0]/256 > 45 &&
		copro_distance[1]/256 > 45 &&
		copro_distance[2]/256 > 45 &&
		copro_distance[3]/256 < 45 &&
     3a8:	81 15       	cp	r24, r1
     3aa:	9d 42       	sbci	r25, 0x2D	; 45
     3ac:	10 f5       	brcc	.+68     	; 0x3f2 <findDirection+0x31e>
		copro_distance[4]/256 < 45 &&
		flag==0)
     3ae:	80 91 d6 03 	lds	r24, 0x03D6	; 0x8003d6 <__data_end>
     3b2:	90 91 d7 03 	lds	r25, 0x03D7	; 0x8003d7 <__data_end+0x1>
	//turn left
	if (copro_distance[0]/256 > 45 &&
		copro_distance[1]/256 > 45 &&
		copro_distance[2]/256 > 45 &&
		copro_distance[3]/256 < 45 &&
		copro_distance[4]/256 < 45 &&
     3b6:	89 2b       	or	r24, r25
     3b8:	e1 f4       	brne	.+56     	; 0x3f2 <findDirection+0x31e>
		flag==0)
	{
		LEDShow('r', 5, 7);
     3ba:	47 e0       	ldi	r20, 0x07	; 7
     3bc:	50 e0       	ldi	r21, 0x00	; 0
     3be:	65 e0       	ldi	r22, 0x05	; 5
     3c0:	70 e0       	ldi	r23, 0x00	; 0
     3c2:	82 e7       	ldi	r24, 0x72	; 114
     3c4:	0e 94 8e 03 	call	0x71c	; 0x71c <LEDShow>
		HindranceShow(40, 50);
     3c8:	62 e3       	ldi	r22, 0x32	; 50
     3ca:	70 e0       	ldi	r23, 0x00	; 0
     3cc:	88 e2       	ldi	r24, 0x28	; 40
     3ce:	90 e0       	ldi	r25, 0x00	; 0
     3d0:	0e 94 ee 03 	call	0x7dc	; 0x7dc <HindranceShow>
		HindranceShow(40, 30);
     3d4:	6e e1       	ldi	r22, 0x1E	; 30
     3d6:	70 e0       	ldi	r23, 0x00	; 0
     3d8:	88 e2       	ldi	r24, 0x28	; 40
     3da:	90 e0       	ldi	r25, 0x00	; 0
     3dc:	0e 94 ee 03 	call	0x7dc	; 0x7dc <HindranceShow>
		HindranceShow(65, 50);
     3e0:	62 e3       	ldi	r22, 0x32	; 50
     3e2:	70 e0       	ldi	r23, 0x00	; 0
     3e4:	81 e4       	ldi	r24, 0x41	; 65
     3e6:	90 e0       	ldi	r25, 0x00	; 0
     3e8:	0e 94 ee 03 	call	0x7dc	; 0x7dc <HindranceShow>
		turnLeft();
     3ec:	0e 94 19 03 	call	0x632	; 0x632 <turnLeft>
     3f0:	07 c0       	rjmp	.+14     	; 0x400 <__LOCK_REGION_LENGTH__>
	}
	else
	{
		LEDShow('g', 5, 7);
     3f2:	47 e0       	ldi	r20, 0x07	; 7
     3f4:	50 e0       	ldi	r21, 0x00	; 0
     3f6:	65 e0       	ldi	r22, 0x05	; 5
     3f8:	70 e0       	ldi	r23, 0x00	; 0
     3fa:	87 e6       	ldi	r24, 0x67	; 103
     3fc:	0e 94 8e 03 	call	0x71c	; 0x71c <LEDShow>
	}

	//turn half left
	if (copro_distance[1]/256 > 50 &&
     400:	80 91 65 04 	lds	r24, 0x0465	; 0x800465 <copro_distance+0x2>
     404:	90 91 66 04 	lds	r25, 0x0466	; 0x800466 <copro_distance+0x3>
     408:	81 15       	cp	r24, r1
     40a:	93 43       	sbci	r25, 0x33	; 51
     40c:	20 f1       	brcs	.+72     	; 0x456 <__LOCK_REGION_LENGTH__+0x56>
		copro_distance[3]/256 < 50 &&
     40e:	80 91 69 04 	lds	r24, 0x0469	; 0x800469 <copro_distance+0x6>
     412:	90 91 6a 04 	lds	r25, 0x046A	; 0x80046a <copro_distance+0x7>
	{
		LEDShow('g', 5, 7);
	}

	//turn half left
	if (copro_distance[1]/256 > 50 &&
     416:	81 15       	cp	r24, r1
     418:	92 43       	sbci	r25, 0x32	; 50
     41a:	e8 f4       	brcc	.+58     	; 0x456 <__LOCK_REGION_LENGTH__+0x56>
		copro_distance[3]/256 < 50 &&
		copro_distance[0]/256 < 50 &&
     41c:	80 91 63 04 	lds	r24, 0x0463	; 0x800463 <copro_distance>
     420:	90 91 64 04 	lds	r25, 0x0464	; 0x800464 <copro_distance+0x1>
		LEDShow('g', 5, 7);
	}

	//turn half left
	if (copro_distance[1]/256 > 50 &&
		copro_distance[3]/256 < 50 &&
     424:	81 15       	cp	r24, r1
     426:	92 43       	sbci	r25, 0x32	; 50
     428:	b0 f4       	brcc	.+44     	; 0x456 <__LOCK_REGION_LENGTH__+0x56>
		copro_distance[0]/256 < 50 &&
		flag==0)
     42a:	80 91 d6 03 	lds	r24, 0x03D6	; 0x8003d6 <__data_end>
     42e:	90 91 d7 03 	lds	r25, 0x03D7	; 0x8003d7 <__data_end+0x1>
	}

	//turn half left
	if (copro_distance[1]/256 > 50 &&
		copro_distance[3]/256 < 50 &&
		copro_distance[0]/256 < 50 &&
     432:	89 2b       	or	r24, r25
     434:	81 f4       	brne	.+32     	; 0x456 <__LOCK_REGION_LENGTH__+0x56>
		flag==0)
	{
		LEDShow('r', 6, 6);
     436:	46 e0       	ldi	r20, 0x06	; 6
     438:	50 e0       	ldi	r21, 0x00	; 0
     43a:	66 e0       	ldi	r22, 0x06	; 6
     43c:	70 e0       	ldi	r23, 0x00	; 0
     43e:	82 e7       	ldi	r24, 0x72	; 114
     440:	0e 94 8e 03 	call	0x71c	; 0x71c <LEDShow>
		HindranceShow(40, 50);
     444:	62 e3       	ldi	r22, 0x32	; 50
     446:	70 e0       	ldi	r23, 0x00	; 0
     448:	88 e2       	ldi	r24, 0x28	; 40
     44a:	90 e0       	ldi	r25, 0x00	; 0
     44c:	0e 94 ee 03 	call	0x7dc	; 0x7dc <HindranceShow>
		turnLeft();
     450:	0e 94 19 03 	call	0x632	; 0x632 <turnLeft>
     454:	07 c0       	rjmp	.+14     	; 0x464 <__LOCK_REGION_LENGTH__+0x64>
     }
	else {LEDShow('g', 6, 6);}
     456:	46 e0       	ldi	r20, 0x06	; 6
     458:	50 e0       	ldi	r21, 0x00	; 0
     45a:	66 e0       	ldi	r22, 0x06	; 6
     45c:	70 e0       	ldi	r23, 0x00	; 0
     45e:	87 e6       	ldi	r24, 0x67	; 103
     460:	0e 94 8e 03 	call	0x71c	; 0x71c <LEDShow>

	//turn right
	if (copro_distance[4]/256 > 45 &&
     464:	80 91 6b 04 	lds	r24, 0x046B	; 0x80046b <copro_distance+0x8>
     468:	90 91 6c 04 	lds	r25, 0x046C	; 0x80046c <copro_distance+0x9>
     46c:	81 15       	cp	r24, r1
     46e:	9e 42       	sbci	r25, 0x2E	; 46
     470:	08 f4       	brcc	.+2      	; 0x474 <__LOCK_REGION_LENGTH__+0x74>
     472:	3e c0       	rjmp	.+124    	; 0x4f0 <__LOCK_REGION_LENGTH__+0xf0>
		copro_distance[3]/256 > 45 &&
     474:	80 91 69 04 	lds	r24, 0x0469	; 0x800469 <copro_distance+0x6>
     478:	90 91 6a 04 	lds	r25, 0x046A	; 0x80046a <copro_distance+0x7>
		turnLeft();
     }
	else {LEDShow('g', 6, 6);}

	//turn right
	if (copro_distance[4]/256 > 45 &&
     47c:	81 15       	cp	r24, r1
     47e:	9e 42       	sbci	r25, 0x2E	; 46
     480:	b8 f1       	brcs	.+110    	; 0x4f0 <__LOCK_REGION_LENGTH__+0xf0>
		copro_distance[3]/256 > 45 &&
		copro_distance[2]/256 > 45 &&
     482:	80 91 67 04 	lds	r24, 0x0467	; 0x800467 <copro_distance+0x4>
     486:	90 91 68 04 	lds	r25, 0x0468	; 0x800468 <copro_distance+0x5>
     }
	else {LEDShow('g', 6, 6);}

	//turn right
	if (copro_distance[4]/256 > 45 &&
		copro_distance[3]/256 > 45 &&
     48a:	81 15       	cp	r24, r1
     48c:	9e 42       	sbci	r25, 0x2E	; 46
     48e:	80 f1       	brcs	.+96     	; 0x4f0 <__LOCK_REGION_LENGTH__+0xf0>
		copro_distance[2]/256 > 45 &&
		copro_distance[1]/256 < 45 &&
     490:	80 91 65 04 	lds	r24, 0x0465	; 0x800465 <copro_distance+0x2>
     494:	90 91 66 04 	lds	r25, 0x0466	; 0x800466 <copro_distance+0x3>
	else {LEDShow('g', 6, 6);}

	//turn right
	if (copro_distance[4]/256 > 45 &&
		copro_distance[3]/256 > 45 &&
		copro_distance[2]/256 > 45 &&
     498:	81 15       	cp	r24, r1
     49a:	9d 42       	sbci	r25, 0x2D	; 45
     49c:	48 f5       	brcc	.+82     	; 0x4f0 <__LOCK_REGION_LENGTH__+0xf0>
		copro_distance[1]/256 < 45 &&
		copro_distance[0]/256 < 45 &&
     49e:	80 91 63 04 	lds	r24, 0x0463	; 0x800463 <copro_distance>
     4a2:	90 91 64 04 	lds	r25, 0x0464	; 0x800464 <copro_distance+0x1>

	//turn right
	if (copro_distance[4]/256 > 45 &&
		copro_distance[3]/256 > 45 &&
		copro_distance[2]/256 > 45 &&
		copro_distance[1]/256 < 45 &&
     4a6:	81 15       	cp	r24, r1
     4a8:	9d 42       	sbci	r25, 0x2D	; 45
     4aa:	10 f5       	brcc	.+68     	; 0x4f0 <__LOCK_REGION_LENGTH__+0xf0>
		copro_distance[0]/256 < 45 &&
		flag==0)
     4ac:	80 91 d6 03 	lds	r24, 0x03D6	; 0x8003d6 <__data_end>
     4b0:	90 91 d7 03 	lds	r25, 0x03D7	; 0x8003d7 <__data_end+0x1>
	//turn right
	if (copro_distance[4]/256 > 45 &&
		copro_distance[3]/256 > 45 &&
		copro_distance[2]/256 > 45 &&
		copro_distance[1]/256 < 45 &&
		copro_distance[0]/256 < 45 &&
     4b4:	89 2b       	or	r24, r25
     4b6:	e1 f4       	brne	.+56     	; 0x4f0 <__LOCK_REGION_LENGTH__+0xf0>
		flag==0)
	{
		LEDShow('r', 2, 4);
     4b8:	44 e0       	ldi	r20, 0x04	; 4
     4ba:	50 e0       	ldi	r21, 0x00	; 0
     4bc:	62 e0       	ldi	r22, 0x02	; 2
     4be:	70 e0       	ldi	r23, 0x00	; 0
     4c0:	82 e7       	ldi	r24, 0x72	; 114
     4c2:	0e 94 8e 03 	call	0x71c	; 0x71c <LEDShow>
		HindranceShow(90, 50);
     4c6:	62 e3       	ldi	r22, 0x32	; 50
     4c8:	70 e0       	ldi	r23, 0x00	; 0
     4ca:	8a e5       	ldi	r24, 0x5A	; 90
     4cc:	90 e0       	ldi	r25, 0x00	; 0
     4ce:	0e 94 ee 03 	call	0x7dc	; 0x7dc <HindranceShow>
		HindranceShow(90, 30);
     4d2:	6e e1       	ldi	r22, 0x1E	; 30
     4d4:	70 e0       	ldi	r23, 0x00	; 0
     4d6:	8a e5       	ldi	r24, 0x5A	; 90
     4d8:	90 e0       	ldi	r25, 0x00	; 0
     4da:	0e 94 ee 03 	call	0x7dc	; 0x7dc <HindranceShow>
		HindranceShow(65, 50);
     4de:	62 e3       	ldi	r22, 0x32	; 50
     4e0:	70 e0       	ldi	r23, 0x00	; 0
     4e2:	81 e4       	ldi	r24, 0x41	; 65
     4e4:	90 e0       	ldi	r25, 0x00	; 0
     4e6:	0e 94 ee 03 	call	0x7dc	; 0x7dc <HindranceShow>
		turnRight();
     4ea:	0e 94 41 03 	call	0x682	; 0x682 <turnRight>
     4ee:	07 c0       	rjmp	.+14     	; 0x4fe <__LOCK_REGION_LENGTH__+0xfe>
	}
	else
	{
		LEDShow('g', 2, 4);
     4f0:	44 e0       	ldi	r20, 0x04	; 4
     4f2:	50 e0       	ldi	r21, 0x00	; 0
     4f4:	62 e0       	ldi	r22, 0x02	; 2
     4f6:	70 e0       	ldi	r23, 0x00	; 0
     4f8:	87 e6       	ldi	r24, 0x67	; 103
     4fa:	0e 94 8e 03 	call	0x71c	; 0x71c <LEDShow>
	}
	//turn half right
	if (copro_distance[3]/256 > 50 &&
     4fe:	80 91 69 04 	lds	r24, 0x0469	; 0x800469 <copro_distance+0x6>
     502:	90 91 6a 04 	lds	r25, 0x046A	; 0x80046a <copro_distance+0x7>
     506:	81 15       	cp	r24, r1
     508:	93 43       	sbci	r25, 0x33	; 51
     50a:	20 f1       	brcs	.+72     	; 0x554 <__LOCK_REGION_LENGTH__+0x154>
		copro_distance[4]/256 < 50 &&
     50c:	80 91 6b 04 	lds	r24, 0x046B	; 0x80046b <copro_distance+0x8>
     510:	90 91 6c 04 	lds	r25, 0x046C	; 0x80046c <copro_distance+0x9>
	else
	{
		LEDShow('g', 2, 4);
	}
	//turn half right
	if (copro_distance[3]/256 > 50 &&
     514:	81 15       	cp	r24, r1
     516:	92 43       	sbci	r25, 0x32	; 50
     518:	e8 f4       	brcc	.+58     	; 0x554 <__LOCK_REGION_LENGTH__+0x154>
		copro_distance[4]/256 < 50 &&
		copro_distance[1]/256 < 50 &&
     51a:	80 91 65 04 	lds	r24, 0x0465	; 0x800465 <copro_distance+0x2>
     51e:	90 91 66 04 	lds	r25, 0x0466	; 0x800466 <copro_distance+0x3>
	{
		LEDShow('g', 2, 4);
	}
	//turn half right
	if (copro_distance[3]/256 > 50 &&
		copro_distance[4]/256 < 50 &&
     522:	81 15       	cp	r24, r1
     524:	92 43       	sbci	r25, 0x32	; 50
     526:	b0 f4       	brcc	.+44     	; 0x554 <__LOCK_REGION_LENGTH__+0x154>
		copro_distance[1]/256 < 50 &&
		flag==0)
     528:	80 91 d6 03 	lds	r24, 0x03D6	; 0x8003d6 <__data_end>
     52c:	90 91 d7 03 	lds	r25, 0x03D7	; 0x8003d7 <__data_end+0x1>
		LEDShow('g', 2, 4);
	}
	//turn half right
	if (copro_distance[3]/256 > 50 &&
		copro_distance[4]/256 < 50 &&
		copro_distance[1]/256 < 50 &&
     530:	89 2b       	or	r24, r25
     532:	81 f4       	brne	.+32     	; 0x554 <__LOCK_REGION_LENGTH__+0x154>
		flag==0)
	{
		LEDShow('r', 3, 3);
     534:	43 e0       	ldi	r20, 0x03	; 3
     536:	50 e0       	ldi	r21, 0x00	; 0
     538:	63 e0       	ldi	r22, 0x03	; 3
     53a:	70 e0       	ldi	r23, 0x00	; 0
     53c:	82 e7       	ldi	r24, 0x72	; 114
     53e:	0e 94 8e 03 	call	0x71c	; 0x71c <LEDShow>
		HindranceShow(85, 50);
     542:	62 e3       	ldi	r22, 0x32	; 50
     544:	70 e0       	ldi	r23, 0x00	; 0
     546:	85 e5       	ldi	r24, 0x55	; 85
     548:	90 e0       	ldi	r25, 0x00	; 0
     54a:	0e 94 ee 03 	call	0x7dc	; 0x7dc <HindranceShow>
		turnRight();
     54e:	0e 94 41 03 	call	0x682	; 0x682 <turnRight>
     552:	07 c0       	rjmp	.+14     	; 0x562 <__LOCK_REGION_LENGTH__+0x162>
	 }
	else {LEDShow('g', 3, 3);}
     554:	43 e0       	ldi	r20, 0x03	; 3
     556:	50 e0       	ldi	r21, 0x00	; 0
     558:	63 e0       	ldi	r22, 0x03	; 3
     55a:	70 e0       	ldi	r23, 0x00	; 0
     55c:	87 e6       	ldi	r24, 0x67	; 103
     55e:	0e 94 8e 03 	call	0x71c	; 0x71c <LEDShow>

	//around
	if(copro_distance[0]/256 < 45 &&
     562:	80 91 63 04 	lds	r24, 0x0463	; 0x800463 <copro_distance>
     566:	90 91 64 04 	lds	r25, 0x0464	; 0x800464 <copro_distance+0x1>
     56a:	81 15       	cp	r24, r1
     56c:	9d 42       	sbci	r25, 0x2D	; 45
     56e:	80 f4       	brcc	.+32     	; 0x590 <__LOCK_REGION_LENGTH__+0x190>
		copro_distance[2]/256 > 45)
     570:	80 91 67 04 	lds	r24, 0x0467	; 0x800467 <copro_distance+0x4>
     574:	90 91 68 04 	lds	r25, 0x0468	; 0x800468 <copro_distance+0x5>
		turnRight();
	 }
	else {LEDShow('g', 3, 3);}

	//around
	if(copro_distance[0]/256 < 45 &&
     578:	81 15       	cp	r24, r1
     57a:	9e 42       	sbci	r25, 0x2E	; 46
     57c:	48 f0       	brcs	.+18     	; 0x590 <__LOCK_REGION_LENGTH__+0x190>
		copro_distance[2]/256 > 45)
	{
		LEDShow('r', 4, 5);
     57e:	45 e0       	ldi	r20, 0x05	; 5
     580:	50 e0       	ldi	r21, 0x00	; 0
     582:	64 e0       	ldi	r22, 0x04	; 4
     584:	70 e0       	ldi	r23, 0x00	; 0
     586:	82 e7       	ldi	r24, 0x72	; 114
     588:	0e 94 8e 03 	call	0x71c	; 0x71c <LEDShow>
		turnRight();
     58c:	0e 94 41 03 	call	0x682	; 0x682 <turnRight>
	}
    if 	(copro_distance[2]/256 > 45 &&
     590:	80 91 67 04 	lds	r24, 0x0467	; 0x800467 <copro_distance+0x4>
     594:	90 91 68 04 	lds	r25, 0x0468	; 0x800468 <copro_distance+0x5>
     598:	81 15       	cp	r24, r1
     59a:	9e 42       	sbci	r25, 0x2E	; 46
     59c:	88 f0       	brcs	.+34     	; 0x5c0 <__LOCK_REGION_LENGTH__+0x1c0>
		copro_distance[4]/256 < 45 )
     59e:	80 91 6b 04 	lds	r24, 0x046B	; 0x80046b <copro_distance+0x8>
     5a2:	90 91 6c 04 	lds	r25, 0x046C	; 0x80046c <copro_distance+0x9>
		copro_distance[2]/256 > 45)
	{
		LEDShow('r', 4, 5);
		turnRight();
	}
    if 	(copro_distance[2]/256 > 45 &&
     5a6:	81 15       	cp	r24, r1
     5a8:	9d 42       	sbci	r25, 0x2D	; 45
     5aa:	50 f4       	brcc	.+20     	; 0x5c0 <__LOCK_REGION_LENGTH__+0x1c0>
		copro_distance[4]/256 < 45 )
	{
		LEDShow('r', 4, 5);
     5ac:	45 e0       	ldi	r20, 0x05	; 5
     5ae:	50 e0       	ldi	r21, 0x00	; 0
     5b0:	64 e0       	ldi	r22, 0x04	; 4
     5b2:	70 e0       	ldi	r23, 0x00	; 0
     5b4:	82 e7       	ldi	r24, 0x72	; 114
     5b6:	0e 94 8e 03 	call	0x71c	; 0x71c <LEDShow>
		turnLeft();
     5ba:	0e 94 19 03 	call	0x632	; 0x632 <turnLeft>
     5be:	07 c0       	rjmp	.+14     	; 0x5ce <__LOCK_REGION_LENGTH__+0x1ce>
	}
	else {LEDShow('g', 4, 5);}
     5c0:	45 e0       	ldi	r20, 0x05	; 5
     5c2:	50 e0       	ldi	r21, 0x00	; 0
     5c4:	64 e0       	ldi	r22, 0x04	; 4
     5c6:	70 e0       	ldi	r23, 0x00	; 0
     5c8:	87 e6       	ldi	r24, 0x67	; 103
     5ca:	0e 94 8e 03 	call	0x71c	; 0x71c <LEDShow>

}
     5ce:	00 00       	nop
     5d0:	a8 96       	adiw	r28, 0x28	; 40
     5d2:	0f b6       	in	r0, 0x3f	; 63
     5d4:	f8 94       	cli
     5d6:	de bf       	out	0x3e, r29	; 62
     5d8:	0f be       	out	0x3f, r0	; 63
     5da:	cd bf       	out	0x3d, r28	; 61
     5dc:	df 91       	pop	r29
     5de:	cf 91       	pop	r28
     5e0:	08 95       	ret

000005e2 <drive>:
#include "main.h"
void drive()
{
     5e2:	cf 93       	push	r28
     5e4:	df 93       	push	r29
     5e6:	cd b7       	in	r28, 0x3d	; 61
     5e8:	de b7       	in	r29, 0x3e	; 62
	copro_resetOdometry(0, 0);
     5ea:	60 e0       	ldi	r22, 0x00	; 0
     5ec:	70 e0       	ldi	r23, 0x00	; 0
     5ee:	80 e0       	ldi	r24, 0x00	; 0
     5f0:	90 e0       	ldi	r25, 0x00	; 0
     5f2:	0e 94 26 11 	call	0x224c	; 0x224c <copro_resetOdometry>
	copro_setSpeed(10, 10);
     5f6:	6a e0       	ldi	r22, 0x0A	; 10
     5f8:	70 e0       	ldi	r23, 0x00	; 0
     5fa:	8a e0       	ldi	r24, 0x0A	; 10
     5fc:	90 e0       	ldi	r25, 0x00	; 0
     5fe:	0e 94 d9 10 	call	0x21b2	; 0x21b2 <copro_setSpeed>
}
     602:	00 00       	nop
     604:	df 91       	pop	r29
     606:	cf 91       	pop	r28
     608:	08 95       	ret

0000060a <turnHalfLeft>:
void turnHalfLeft()
{
     60a:	cf 93       	push	r28
     60c:	df 93       	push	r29
     60e:	cd b7       	in	r28, 0x3d	; 61
     610:	de b7       	in	r29, 0x3e	; 62
	copro_setSpeed(-0, 10);
     612:	6a e0       	ldi	r22, 0x0A	; 10
     614:	70 e0       	ldi	r23, 0x00	; 0
     616:	80 e0       	ldi	r24, 0x00	; 0
     618:	90 e0       	ldi	r25, 0x00	; 0
     61a:	0e 94 d9 10 	call	0x21b2	; 0x21b2 <copro_setSpeed>
	copro_resetOdometry(0, 0);
     61e:	60 e0       	ldi	r22, 0x00	; 0
     620:	70 e0       	ldi	r23, 0x00	; 0
     622:	80 e0       	ldi	r24, 0x00	; 0
     624:	90 e0       	ldi	r25, 0x00	; 0
     626:	0e 94 26 11 	call	0x224c	; 0x224c <copro_resetOdometry>
}
     62a:	00 00       	nop
     62c:	df 91       	pop	r29
     62e:	cf 91       	pop	r28
     630:	08 95       	ret

00000632 <turnLeft>:

void turnLeft()
{
     632:	cf 93       	push	r28
     634:	df 93       	push	r29
     636:	cd b7       	in	r28, 0x3d	; 61
     638:	de b7       	in	r29, 0x3e	; 62
	copro_setSpeed(-10, 10);
     63a:	6a e0       	ldi	r22, 0x0A	; 10
     63c:	70 e0       	ldi	r23, 0x00	; 0
     63e:	86 ef       	ldi	r24, 0xF6	; 246
     640:	9f ef       	ldi	r25, 0xFF	; 255
     642:	0e 94 d9 10 	call	0x21b2	; 0x21b2 <copro_setSpeed>
	copro_resetOdometry(0, 0);
     646:	60 e0       	ldi	r22, 0x00	; 0
     648:	70 e0       	ldi	r23, 0x00	; 0
     64a:	80 e0       	ldi	r24, 0x00	; 0
     64c:	90 e0       	ldi	r25, 0x00	; 0
     64e:	0e 94 26 11 	call	0x224c	; 0x224c <copro_resetOdometry>
}
     652:	00 00       	nop
     654:	df 91       	pop	r29
     656:	cf 91       	pop	r28
     658:	08 95       	ret

0000065a <turnHalfRight>:

void turnHalfRight()
{
     65a:	cf 93       	push	r28
     65c:	df 93       	push	r29
     65e:	cd b7       	in	r28, 0x3d	; 61
     660:	de b7       	in	r29, 0x3e	; 62
	copro_setSpeed(10, 0);
     662:	60 e0       	ldi	r22, 0x00	; 0
     664:	70 e0       	ldi	r23, 0x00	; 0
     666:	8a e0       	ldi	r24, 0x0A	; 10
     668:	90 e0       	ldi	r25, 0x00	; 0
     66a:	0e 94 d9 10 	call	0x21b2	; 0x21b2 <copro_setSpeed>
	copro_resetOdometry(0, 0);
     66e:	60 e0       	ldi	r22, 0x00	; 0
     670:	70 e0       	ldi	r23, 0x00	; 0
     672:	80 e0       	ldi	r24, 0x00	; 0
     674:	90 e0       	ldi	r25, 0x00	; 0
     676:	0e 94 26 11 	call	0x224c	; 0x224c <copro_resetOdometry>
}
     67a:	00 00       	nop
     67c:	df 91       	pop	r29
     67e:	cf 91       	pop	r28
     680:	08 95       	ret

00000682 <turnRight>:

void turnRight()
{
     682:	cf 93       	push	r28
     684:	df 93       	push	r29
     686:	cd b7       	in	r28, 0x3d	; 61
     688:	de b7       	in	r29, 0x3e	; 62
	copro_setSpeed(10, -10);
     68a:	66 ef       	ldi	r22, 0xF6	; 246
     68c:	7f ef       	ldi	r23, 0xFF	; 255
     68e:	8a e0       	ldi	r24, 0x0A	; 10
     690:	90 e0       	ldi	r25, 0x00	; 0
     692:	0e 94 d9 10 	call	0x21b2	; 0x21b2 <copro_setSpeed>
	copro_resetOdometry(0, 0);
     696:	60 e0       	ldi	r22, 0x00	; 0
     698:	70 e0       	ldi	r23, 0x00	; 0
     69a:	80 e0       	ldi	r24, 0x00	; 0
     69c:	90 e0       	ldi	r25, 0x00	; 0
     69e:	0e 94 26 11 	call	0x224c	; 0x224c <copro_resetOdometry>
}
     6a2:	00 00       	nop
     6a4:	df 91       	pop	r29
     6a6:	cf 91       	pop	r28
     6a8:	08 95       	ret

000006aa <goBack>:

void goBack()
{
     6aa:	cf 93       	push	r28
     6ac:	df 93       	push	r29
     6ae:	cd b7       	in	r28, 0x3d	; 61
     6b0:	de b7       	in	r29, 0x3e	; 62
	copro_resetOdometry(0, 0);
     6b2:	60 e0       	ldi	r22, 0x00	; 0
     6b4:	70 e0       	ldi	r23, 0x00	; 0
     6b6:	80 e0       	ldi	r24, 0x00	; 0
     6b8:	90 e0       	ldi	r25, 0x00	; 0
     6ba:	0e 94 26 11 	call	0x224c	; 0x224c <copro_resetOdometry>
	copro_setSpeed(-10, -10);
     6be:	66 ef       	ldi	r22, 0xF6	; 246
     6c0:	7f ef       	ldi	r23, 0xFF	; 255
     6c2:	86 ef       	ldi	r24, 0xF6	; 246
     6c4:	9f ef       	ldi	r25, 0xFF	; 255
     6c6:	0e 94 d9 10 	call	0x21b2	; 0x21b2 <copro_setSpeed>
}
     6ca:	00 00       	nop
     6cc:	df 91       	pop	r29
     6ce:	cf 91       	pop	r28
     6d0:	08 95       	ret

000006d2 <main>:
#include <nibo/leds.h>
#include <nibo/i2cmaster.h>
#include <nibo/nds3.h>
#include "main.h"

int main() {
     6d2:	cf 93       	push	r28
     6d4:	df 93       	push	r29
     6d6:	cd b7       	in	r28, 0x3d	; 61
     6d8:	de b7       	in	r29, 0x3e	; 62
		sei();
     6da:	78 94       	sei
		bot_init();
     6dc:	0e 94 77 11 	call	0x22ee	; 0x22ee <bot_init>
		spi_init();
     6e0:	0e 94 a2 09 	call	0x1344	; 0x1344 <spi_init>
		sound_init();
     6e4:	0e 94 d4 11 	call	0x23a8	; 0x23a8 <sound_init>
		leds_init();
     6e8:	0e 94 8a 11 	call	0x2314	; 0x2314 <leds_init>
		pwm_init();
     6ec:	0e 94 bd 08 	call	0x117a	; 0x117a <pwm_init>
		display_init();
     6f0:	0e 94 5b 08 	call	0x10b6	; 0x10b6 <display_init>
		gfx_init();
     6f4:	0e 94 3e 0c 	call	0x187c	; 0x187c <gfx_init>
		copro_ir_startMeasure();
     6f8:	0e 94 5a 11 	call	0x22b4	; 0x22b4 <copro_ir_startMeasure>
		start();
     6fc:	0e 94 e6 06 	call	0xdcc	; 0xdcc <start>
		leds_set_headlights(0);
     700:	80 e0       	ldi	r24, 0x00	; 0
     702:	90 e0       	ldi	r25, 0x00	; 0
     704:	0e 94 c0 11 	call	0x2380	; 0x2380 <leds_set_headlights>
		while (1 == 1) {
			gfx_fill(0);
     708:	80 e0       	ldi	r24, 0x00	; 0
     70a:	0e 94 bb 0a 	call	0x1576	; 0x1576 <gfx_fill>
			findDirection();
     70e:	0e 94 6a 00 	call	0xd4	; 0xd4 <findDirection>
			delay(500);
     712:	84 ef       	ldi	r24, 0xF4	; 244
     714:	91 e0       	ldi	r25, 0x01	; 1
     716:	0e 94 75 09 	call	0x12ea	; 0x12ea <delay>
		}
     71a:	f6 cf       	rjmp	.-20     	; 0x708 <main+0x36>

0000071c <LEDShow>:
#include "main.h"


void LEDShow(char color, int start, int end){
     71c:	cf 93       	push	r28
     71e:	df 93       	push	r29
     720:	cd b7       	in	r28, 0x3d	; 61
     722:	de b7       	in	r29, 0x3e	; 62
     724:	27 97       	sbiw	r28, 0x07	; 7
     726:	0f b6       	in	r0, 0x3f	; 63
     728:	f8 94       	cli
     72a:	de bf       	out	0x3e, r29	; 62
     72c:	0f be       	out	0x3f, r0	; 63
     72e:	cd bf       	out	0x3d, r28	; 61
     730:	8b 83       	std	Y+3, r24	; 0x03
     732:	7d 83       	std	Y+5, r23	; 0x05
     734:	6c 83       	std	Y+4, r22	; 0x04
     736:	5f 83       	std	Y+7, r21	; 0x07
     738:	4e 83       	std	Y+6, r20	; 0x06
	for(int i=start; i<=end; i++){
     73a:	8c 81       	ldd	r24, Y+4	; 0x04
     73c:	9d 81       	ldd	r25, Y+5	; 0x05
     73e:	9a 83       	std	Y+2, r25	; 0x02
     740:	89 83       	std	Y+1, r24	; 0x01
     742:	13 c0       	rjmp	.+38     	; 0x76a <LEDShow+0x4e>
		if(color=='r'){ leds_set_status(LEDS_RED, i);}
     744:	8b 81       	ldd	r24, Y+3	; 0x03
     746:	82 37       	cpi	r24, 0x72	; 114
     748:	31 f4       	brne	.+12     	; 0x756 <LEDShow+0x3a>
     74a:	89 81       	ldd	r24, Y+1	; 0x01
     74c:	68 2f       	mov	r22, r24
     74e:	82 e0       	ldi	r24, 0x02	; 2
     750:	0e 94 92 11 	call	0x2324	; 0x2324 <leds_set_status>
     754:	05 c0       	rjmp	.+10     	; 0x760 <LEDShow+0x44>
		else leds_set_status(LEDS_GREEN, i);
     756:	89 81       	ldd	r24, Y+1	; 0x01
     758:	68 2f       	mov	r22, r24
     75a:	81 e0       	ldi	r24, 0x01	; 1
     75c:	0e 94 92 11 	call	0x2324	; 0x2324 <leds_set_status>
#include "main.h"


void LEDShow(char color, int start, int end){
	for(int i=start; i<=end; i++){
     760:	89 81       	ldd	r24, Y+1	; 0x01
     762:	9a 81       	ldd	r25, Y+2	; 0x02
     764:	01 96       	adiw	r24, 0x01	; 1
     766:	9a 83       	std	Y+2, r25	; 0x02
     768:	89 83       	std	Y+1, r24	; 0x01
     76a:	29 81       	ldd	r18, Y+1	; 0x01
     76c:	3a 81       	ldd	r19, Y+2	; 0x02
     76e:	8e 81       	ldd	r24, Y+6	; 0x06
     770:	9f 81       	ldd	r25, Y+7	; 0x07
     772:	82 17       	cp	r24, r18
     774:	93 07       	cpc	r25, r19
     776:	34 f7       	brge	.-52     	; 0x744 <LEDShow+0x28>
		if(color=='r'){ leds_set_status(LEDS_RED, i);}
		else leds_set_status(LEDS_GREEN, i);
	}
}
     778:	00 00       	nop
     77a:	27 96       	adiw	r28, 0x07	; 7
     77c:	0f b6       	in	r0, 0x3f	; 63
     77e:	f8 94       	cli
     780:	de bf       	out	0x3e, r29	; 62
     782:	0f be       	out	0x3f, r0	; 63
     784:	cd bf       	out	0x3d, r28	; 61
     786:	df 91       	pop	r29
     788:	cf 91       	pop	r28
     78a:	08 95       	ret

0000078c <showNibo>:
void showNibo()
{
     78c:	cf 93       	push	r28
     78e:	df 93       	push	r29
     790:	cd b7       	in	r28, 0x3d	; 61
     792:	de b7       	in	r29, 0x3e	; 62
	//Nibos Bild
	 gfx_move(53, 12); gfx_box(4, 6);
     794:	6c e0       	ldi	r22, 0x0C	; 12
     796:	85 e3       	ldi	r24, 0x35	; 53
     798:	0e 94 89 0a 	call	0x1512	; 0x1512 <gfx_move>
     79c:	66 e0       	ldi	r22, 0x06	; 6
     79e:	84 e0       	ldi	r24, 0x04	; 4
     7a0:	0e 94 99 0c 	call	0x1932	; 0x1932 <gfx_box>
	 gfx_move(75, 12); gfx_box(4, 6);
     7a4:	6c e0       	ldi	r22, 0x0C	; 12
     7a6:	8b e4       	ldi	r24, 0x4B	; 75
     7a8:	0e 94 89 0a 	call	0x1512	; 0x1512 <gfx_move>
     7ac:	66 e0       	ldi	r22, 0x06	; 6
     7ae:	84 e0       	ldi	r24, 0x04	; 4
     7b0:	0e 94 99 0c 	call	0x1932	; 0x1932 <gfx_box>
	 gfx_move(59, 14); gfx_box(14, 6);
     7b4:	6e e0       	ldi	r22, 0x0E	; 14
     7b6:	8b e3       	ldi	r24, 0x3B	; 59
     7b8:	0e 94 89 0a 	call	0x1512	; 0x1512 <gfx_move>
     7bc:	66 e0       	ldi	r22, 0x06	; 6
     7be:	8e e0       	ldi	r24, 0x0E	; 14
     7c0:	0e 94 99 0c 	call	0x1932	; 0x1932 <gfx_box>
	 gfx_move(59, 22); gfx_box(14, 3);
     7c4:	66 e1       	ldi	r22, 0x16	; 22
     7c6:	8b e3       	ldi	r24, 0x3B	; 59
     7c8:	0e 94 89 0a 	call	0x1512	; 0x1512 <gfx_move>
     7cc:	63 e0       	ldi	r22, 0x03	; 3
     7ce:	8e e0       	ldi	r24, 0x0E	; 14
     7d0:	0e 94 99 0c 	call	0x1932	; 0x1932 <gfx_box>
}
     7d4:	00 00       	nop
     7d6:	df 91       	pop	r29
     7d8:	cf 91       	pop	r28
     7da:	08 95       	ret

000007dc <HindranceShow>:

void HindranceShow(int x, int y){
     7dc:	cf 93       	push	r28
     7de:	df 93       	push	r29
     7e0:	00 d0       	rcall	.+0      	; 0x7e2 <HindranceShow+0x6>
     7e2:	00 d0       	rcall	.+0      	; 0x7e4 <HindranceShow+0x8>
     7e4:	cd b7       	in	r28, 0x3d	; 61
     7e6:	de b7       	in	r29, 0x3e	; 62
     7e8:	9a 83       	std	Y+2, r25	; 0x02
     7ea:	89 83       	std	Y+1, r24	; 0x01
     7ec:	7c 83       	std	Y+4, r23	; 0x04
     7ee:	6b 83       	std	Y+3, r22	; 0x03

	gfx_move(x, y);
     7f0:	9b 81       	ldd	r25, Y+3	; 0x03
     7f2:	89 81       	ldd	r24, Y+1	; 0x01
     7f4:	69 2f       	mov	r22, r25
     7f6:	0e 94 89 0a 	call	0x1512	; 0x1512 <gfx_move>
	gfx_lineTo(x+7,y-17);
     7fa:	8b 81       	ldd	r24, Y+3	; 0x03
     7fc:	9f ee       	ldi	r25, 0xEF	; 239
     7fe:	98 0f       	add	r25, r24
     800:	89 81       	ldd	r24, Y+1	; 0x01
     802:	89 5f       	subi	r24, 0xF9	; 249
     804:	69 2f       	mov	r22, r25
     806:	0e 94 43 0e 	call	0x1c86	; 0x1c86 <gfx_lineTo>
	gfx_lineTo(x-7,y-17);
     80a:	8b 81       	ldd	r24, Y+3	; 0x03
     80c:	9f ee       	ldi	r25, 0xEF	; 239
     80e:	98 0f       	add	r25, r24
     810:	89 81       	ldd	r24, Y+1	; 0x01
     812:	87 50       	subi	r24, 0x07	; 7
     814:	69 2f       	mov	r22, r25
     816:	0e 94 43 0e 	call	0x1c86	; 0x1c86 <gfx_lineTo>
	gfx_lineTo(x, y);
     81a:	9b 81       	ldd	r25, Y+3	; 0x03
     81c:	89 81       	ldd	r24, Y+1	; 0x01
     81e:	69 2f       	mov	r22, r25
     820:	0e 94 43 0e 	call	0x1c86	; 0x1c86 <gfx_lineTo>
	gfx_move(x, y-7);
     824:	8b 81       	ldd	r24, Y+3	; 0x03
     826:	99 ef       	ldi	r25, 0xF9	; 249
     828:	98 0f       	add	r25, r24
     82a:	89 81       	ldd	r24, Y+1	; 0x01
     82c:	69 2f       	mov	r22, r25
     82e:	0e 94 89 0a 	call	0x1512	; 0x1512 <gfx_move>
	gfx_lineTo(x,y-13);
     832:	8b 81       	ldd	r24, Y+3	; 0x03
     834:	93 ef       	ldi	r25, 0xF3	; 243
     836:	98 0f       	add	r25, r24
     838:	89 81       	ldd	r24, Y+1	; 0x01
     83a:	69 2f       	mov	r22, r25
     83c:	0e 94 43 0e 	call	0x1c86	; 0x1c86 <gfx_lineTo>
	gfx_move(x, y-15);
     840:	8b 81       	ldd	r24, Y+3	; 0x03
     842:	91 ef       	ldi	r25, 0xF1	; 241
     844:	98 0f       	add	r25, r24
     846:	89 81       	ldd	r24, Y+1	; 0x01
     848:	69 2f       	mov	r22, r25
     84a:	0e 94 89 0a 	call	0x1512	; 0x1512 <gfx_move>
	gfx_hline(1);
     84e:	81 e0       	ldi	r24, 0x01	; 1
     850:	0e 94 83 0c 	call	0x1906	; 0x1906 <gfx_hline>

}
     854:	00 00       	nop
     856:	0f 90       	pop	r0
     858:	0f 90       	pop	r0
     85a:	0f 90       	pop	r0
     85c:	0f 90       	pop	r0
     85e:	df 91       	pop	r29
     860:	cf 91       	pop	r28
     862:	08 95       	ret

00000864 <tone>:
#include <nibo/sound.h>

#include "main.h"

//from HelloSound
int tone(int frequency, int duration) {
     864:	0f 93       	push	r16
     866:	1f 93       	push	r17
     868:	cf 93       	push	r28
     86a:	df 93       	push	r29
     86c:	cd b7       	in	r28, 0x3d	; 61
     86e:	de b7       	in	r29, 0x3e	; 62
     870:	c8 54       	subi	r28, 0x48	; 72
     872:	d1 09       	sbc	r29, r1
     874:	0f b6       	in	r0, 0x3f	; 63
     876:	f8 94       	cli
     878:	de bf       	out	0x3e, r29	; 62
     87a:	0f be       	out	0x3f, r0	; 63
     87c:	cd bf       	out	0x3d, r28	; 61
     87e:	9e 01       	movw	r18, r28
     880:	2b 5b       	subi	r18, 0xBB	; 187
     882:	3f 4f       	sbci	r19, 0xFF	; 255
     884:	f9 01       	movw	r30, r18
     886:	91 83       	std	Z+1, r25	; 0x01
     888:	80 83       	st	Z, r24
     88a:	ce 01       	movw	r24, r28
     88c:	89 5b       	subi	r24, 0xB9	; 185
     88e:	9f 4f       	sbci	r25, 0xFF	; 255
     890:	fc 01       	movw	r30, r24
     892:	71 83       	std	Z+1, r23	; 0x01
     894:	60 83       	st	Z, r22
	int interval = (50000 / frequency);
     896:	ce 01       	movw	r24, r28
     898:	8b 5b       	subi	r24, 0xBB	; 187
     89a:	9f 4f       	sbci	r25, 0xFF	; 255
     89c:	fc 01       	movw	r30, r24
     89e:	80 81       	ld	r24, Z
     8a0:	91 81       	ldd	r25, Z+1	; 0x01
     8a2:	9c 01       	movw	r18, r24
     8a4:	99 0f       	add	r25, r25
     8a6:	44 0b       	sbc	r20, r20
     8a8:	55 0b       	sbc	r21, r21
     8aa:	80 e5       	ldi	r24, 0x50	; 80
     8ac:	93 ec       	ldi	r25, 0xC3	; 195
     8ae:	a0 e0       	ldi	r26, 0x00	; 0
     8b0:	b0 e0       	ldi	r27, 0x00	; 0
     8b2:	bc 01       	movw	r22, r24
     8b4:	cd 01       	movw	r24, r26
     8b6:	0e 94 bd 13 	call	0x277a	; 0x277a <__divmodsi4>
     8ba:	da 01       	movw	r26, r20
     8bc:	c9 01       	movw	r24, r18
     8be:	9c 83       	std	Y+4, r25	; 0x04
     8c0:	8b 83       	std	Y+3, r24	; 0x03
	duration = duration * 100;
     8c2:	ce 01       	movw	r24, r28
     8c4:	89 5b       	subi	r24, 0xB9	; 185
     8c6:	9f 4f       	sbci	r25, 0xFF	; 255
     8c8:	9e 01       	movw	r18, r28
     8ca:	29 5b       	subi	r18, 0xB9	; 185
     8cc:	3f 4f       	sbci	r19, 0xFF	; 255
     8ce:	f9 01       	movw	r30, r18
     8d0:	40 81       	ld	r20, Z
     8d2:	51 81       	ldd	r21, Z+1	; 0x01
     8d4:	64 e6       	ldi	r22, 0x64	; 100
     8d6:	64 9f       	mul	r22, r20
     8d8:	90 01       	movw	r18, r0
     8da:	65 9f       	mul	r22, r21
     8dc:	30 0d       	add	r19, r0
     8de:	11 24       	eor	r1, r1
     8e0:	fc 01       	movw	r30, r24
     8e2:	31 83       	std	Z+1, r19	; 0x01
     8e4:	20 83       	st	Z, r18

	while (duration) {
     8e6:	5b c2       	rjmp	.+1206   	; 0xd9e <tone+0x53a>
		int i = interval;
     8e8:	8b 81       	ldd	r24, Y+3	; 0x03
     8ea:	9c 81       	ldd	r25, Y+4	; 0x04
     8ec:	9a 83       	std	Y+2, r25	; 0x02
     8ee:	89 83       	std	Y+1, r24	; 0x01
		clear_output_bit(IO_AUDIO);
     8f0:	88 e3       	ldi	r24, 0x38	; 56
     8f2:	90 e0       	ldi	r25, 0x00	; 0
     8f4:	28 e3       	ldi	r18, 0x38	; 56
     8f6:	30 e0       	ldi	r19, 0x00	; 0
     8f8:	f9 01       	movw	r30, r18
     8fa:	20 81       	ld	r18, Z
     8fc:	2f 7e       	andi	r18, 0xEF	; 239
     8fe:	fc 01       	movw	r30, r24
     900:	20 83       	st	Z, r18
		while (duration && i) {
     902:	02 c1       	rjmp	.+516    	; 0xb08 <tone+0x2a4>
			duration--;
     904:	ce 01       	movw	r24, r28
     906:	89 5b       	subi	r24, 0xB9	; 185
     908:	9f 4f       	sbci	r25, 0xFF	; 255
     90a:	9e 01       	movw	r18, r28
     90c:	29 5b       	subi	r18, 0xB9	; 185
     90e:	3f 4f       	sbci	r19, 0xFF	; 255
     910:	f9 01       	movw	r30, r18
     912:	20 81       	ld	r18, Z
     914:	31 81       	ldd	r19, Z+1	; 0x01
     916:	21 50       	subi	r18, 0x01	; 1
     918:	31 09       	sbc	r19, r1
     91a:	fc 01       	movw	r30, r24
     91c:	31 83       	std	Z+1, r19	; 0x01
     91e:	20 83       	st	Z, r18
			i--;
     920:	89 81       	ldd	r24, Y+1	; 0x01
     922:	9a 81       	ldd	r25, Y+2	; 0x02
     924:	01 97       	sbiw	r24, 0x01	; 1
     926:	9a 83       	std	Y+2, r25	; 0x02
     928:	89 83       	std	Y+1, r24	; 0x01
     92a:	80 e0       	ldi	r24, 0x00	; 0
     92c:	90 e0       	ldi	r25, 0x00	; 0
     92e:	a0 e2       	ldi	r26, 0x20	; 32
     930:	b1 e4       	ldi	r27, 0x41	; 65
     932:	89 87       	std	Y+9, r24	; 0x09
     934:	9a 87       	std	Y+10, r25	; 0x0a
     936:	ab 87       	std	Y+11, r26	; 0x0b
     938:	bc 87       	std	Y+12, r27	; 0x0c
	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint8_t __ticks;
	double __tmp2 ;
	__tmp = ((F_CPU) / 3e6) * __us;
     93a:	2b ea       	ldi	r18, 0xAB	; 171
     93c:	3a ea       	ldi	r19, 0xAA	; 170
     93e:	4a ea       	ldi	r20, 0xAA	; 170
     940:	50 e4       	ldi	r21, 0x40	; 64
     942:	69 85       	ldd	r22, Y+9	; 0x09
     944:	7a 85       	ldd	r23, Y+10	; 0x0a
     946:	8b 85       	ldd	r24, Y+11	; 0x0b
     948:	9c 85       	ldd	r25, Y+12	; 0x0c
     94a:	0e 94 50 13 	call	0x26a0	; 0x26a0 <__mulsf3>
     94e:	dc 01       	movw	r26, r24
     950:	cb 01       	movw	r24, r22
     952:	8d 87       	std	Y+13, r24	; 0x0d
     954:	9e 87       	std	Y+14, r25	; 0x0e
     956:	af 87       	std	Y+15, r26	; 0x0f
     958:	b8 8b       	std	Y+16, r27	; 0x10
	__tmp2 = ((F_CPU) / 4e6) * __us;
     95a:	20 e0       	ldi	r18, 0x00	; 0
     95c:	30 e0       	ldi	r19, 0x00	; 0
     95e:	40 e8       	ldi	r20, 0x80	; 128
     960:	50 e4       	ldi	r21, 0x40	; 64
     962:	69 85       	ldd	r22, Y+9	; 0x09
     964:	7a 85       	ldd	r23, Y+10	; 0x0a
     966:	8b 85       	ldd	r24, Y+11	; 0x0b
     968:	9c 85       	ldd	r25, Y+12	; 0x0c
     96a:	0e 94 50 13 	call	0x26a0	; 0x26a0 <__mulsf3>
     96e:	dc 01       	movw	r26, r24
     970:	cb 01       	movw	r24, r22
     972:	89 8b       	std	Y+17, r24	; 0x11
     974:	9a 8b       	std	Y+18, r25	; 0x12
     976:	ab 8b       	std	Y+19, r26	; 0x13
     978:	bc 8b       	std	Y+20, r27	; 0x14
	if (__tmp < 1.0)
     97a:	20 e0       	ldi	r18, 0x00	; 0
     97c:	30 e0       	ldi	r19, 0x00	; 0
     97e:	40 e8       	ldi	r20, 0x80	; 128
     980:	5f e3       	ldi	r21, 0x3F	; 63
     982:	6d 85       	ldd	r22, Y+13	; 0x0d
     984:	7e 85       	ldd	r23, Y+14	; 0x0e
     986:	8f 85       	ldd	r24, Y+15	; 0x0f
     988:	98 89       	ldd	r25, Y+16	; 0x10
     98a:	0e 94 30 12 	call	0x2460	; 0x2460 <__cmpsf2>
     98e:	88 23       	and	r24, r24
     990:	1c f4       	brge	.+6      	; 0x998 <tone+0x134>
		__ticks = 1;
     992:	81 e0       	ldi	r24, 0x01	; 1
     994:	8d 8b       	std	Y+21, r24	; 0x15
     996:	b2 c0       	rjmp	.+356    	; 0xafc <tone+0x298>
	else if (__tmp2 > 65535)
     998:	20 e0       	ldi	r18, 0x00	; 0
     99a:	3f ef       	ldi	r19, 0xFF	; 255
     99c:	4f e7       	ldi	r20, 0x7F	; 127
     99e:	57 e4       	ldi	r21, 0x47	; 71
     9a0:	69 89       	ldd	r22, Y+17	; 0x11
     9a2:	7a 89       	ldd	r23, Y+18	; 0x12
     9a4:	8b 89       	ldd	r24, Y+19	; 0x13
     9a6:	9c 89       	ldd	r25, Y+20	; 0x14
     9a8:	0e 94 4b 13 	call	0x2696	; 0x2696 <__gesf2>
     9ac:	18 16       	cp	r1, r24
     9ae:	0c f0       	brlt	.+2      	; 0x9b2 <tone+0x14e>
     9b0:	7b c0       	rjmp	.+246    	; 0xaa8 <tone+0x244>
	{
		_delay_ms(__us / 1000.0);
     9b2:	20 e0       	ldi	r18, 0x00	; 0
     9b4:	30 e0       	ldi	r19, 0x00	; 0
     9b6:	4a e7       	ldi	r20, 0x7A	; 122
     9b8:	54 e4       	ldi	r21, 0x44	; 68
     9ba:	69 85       	ldd	r22, Y+9	; 0x09
     9bc:	7a 85       	ldd	r23, Y+10	; 0x0a
     9be:	8b 85       	ldd	r24, Y+11	; 0x0b
     9c0:	9c 85       	ldd	r25, Y+12	; 0x0c
     9c2:	0e 94 35 12 	call	0x246a	; 0x246a <__divsf3>
     9c6:	dc 01       	movw	r26, r24
     9c8:	cb 01       	movw	r24, r22
     9ca:	8e 8b       	std	Y+22, r24	; 0x16
     9cc:	9f 8b       	std	Y+23, r25	; 0x17
     9ce:	a8 8f       	std	Y+24, r26	; 0x18
     9d0:	b9 8f       	std	Y+25, r27	; 0x19

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     9d2:	20 e0       	ldi	r18, 0x00	; 0
     9d4:	30 e0       	ldi	r19, 0x00	; 0
     9d6:	4a e7       	ldi	r20, 0x7A	; 122
     9d8:	55 e4       	ldi	r21, 0x45	; 69
     9da:	6e 89       	ldd	r22, Y+22	; 0x16
     9dc:	7f 89       	ldd	r23, Y+23	; 0x17
     9de:	88 8d       	ldd	r24, Y+24	; 0x18
     9e0:	99 8d       	ldd	r25, Y+25	; 0x19
     9e2:	0e 94 50 13 	call	0x26a0	; 0x26a0 <__mulsf3>
     9e6:	dc 01       	movw	r26, r24
     9e8:	cb 01       	movw	r24, r22
     9ea:	8a 8f       	std	Y+26, r24	; 0x1a
     9ec:	9b 8f       	std	Y+27, r25	; 0x1b
     9ee:	ac 8f       	std	Y+28, r26	; 0x1c
     9f0:	bd 8f       	std	Y+29, r27	; 0x1d
	if (__tmp < 1.0)
     9f2:	20 e0       	ldi	r18, 0x00	; 0
     9f4:	30 e0       	ldi	r19, 0x00	; 0
     9f6:	40 e8       	ldi	r20, 0x80	; 128
     9f8:	5f e3       	ldi	r21, 0x3F	; 63
     9fa:	6a 8d       	ldd	r22, Y+26	; 0x1a
     9fc:	7b 8d       	ldd	r23, Y+27	; 0x1b
     9fe:	8c 8d       	ldd	r24, Y+28	; 0x1c
     a00:	9d 8d       	ldd	r25, Y+29	; 0x1d
     a02:	0e 94 30 12 	call	0x2460	; 0x2460 <__cmpsf2>
     a06:	88 23       	and	r24, r24
     a08:	2c f4       	brge	.+10     	; 0xa14 <tone+0x1b0>
		__ticks = 1;
     a0a:	81 e0       	ldi	r24, 0x01	; 1
     a0c:	90 e0       	ldi	r25, 0x00	; 0
     a0e:	9f 8f       	std	Y+31, r25	; 0x1f
     a10:	8e 8f       	std	Y+30, r24	; 0x1e
     a12:	3f c0       	rjmp	.+126    	; 0xa92 <tone+0x22e>
	else if (__tmp > 65535)
     a14:	20 e0       	ldi	r18, 0x00	; 0
     a16:	3f ef       	ldi	r19, 0xFF	; 255
     a18:	4f e7       	ldi	r20, 0x7F	; 127
     a1a:	57 e4       	ldi	r21, 0x47	; 71
     a1c:	6a 8d       	ldd	r22, Y+26	; 0x1a
     a1e:	7b 8d       	ldd	r23, Y+27	; 0x1b
     a20:	8c 8d       	ldd	r24, Y+28	; 0x1c
     a22:	9d 8d       	ldd	r25, Y+29	; 0x1d
     a24:	0e 94 4b 13 	call	0x2696	; 0x2696 <__gesf2>
     a28:	18 16       	cp	r1, r24
     a2a:	4c f5       	brge	.+82     	; 0xa7e <tone+0x21a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     a2c:	20 e0       	ldi	r18, 0x00	; 0
     a2e:	30 e0       	ldi	r19, 0x00	; 0
     a30:	40 e2       	ldi	r20, 0x20	; 32
     a32:	51 e4       	ldi	r21, 0x41	; 65
     a34:	6e 89       	ldd	r22, Y+22	; 0x16
     a36:	7f 89       	ldd	r23, Y+23	; 0x17
     a38:	88 8d       	ldd	r24, Y+24	; 0x18
     a3a:	99 8d       	ldd	r25, Y+25	; 0x19
     a3c:	0e 94 50 13 	call	0x26a0	; 0x26a0 <__mulsf3>
     a40:	dc 01       	movw	r26, r24
     a42:	cb 01       	movw	r24, r22
     a44:	bc 01       	movw	r22, r24
     a46:	cd 01       	movw	r24, r26
     a48:	0e 94 a7 12 	call	0x254e	; 0x254e <__fixunssfsi>
     a4c:	dc 01       	movw	r26, r24
     a4e:	cb 01       	movw	r24, r22
     a50:	9f 8f       	std	Y+31, r25	; 0x1f
     a52:	8e 8f       	std	Y+30, r24	; 0x1e
     a54:	0f c0       	rjmp	.+30     	; 0xa74 <tone+0x210>
     a56:	80 e9       	ldi	r24, 0x90	; 144
     a58:	91 e0       	ldi	r25, 0x01	; 1
     a5a:	99 a3       	std	Y+33, r25	; 0x21
     a5c:	88 a3       	std	Y+32, r24	; 0x20
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     a5e:	88 a1       	ldd	r24, Y+32	; 0x20
     a60:	99 a1       	ldd	r25, Y+33	; 0x21
     a62:	01 97       	sbiw	r24, 0x01	; 1
     a64:	f1 f7       	brne	.-4      	; 0xa62 <tone+0x1fe>
     a66:	99 a3       	std	Y+33, r25	; 0x21
     a68:	88 a3       	std	Y+32, r24	; 0x20
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     a6a:	8e 8d       	ldd	r24, Y+30	; 0x1e
     a6c:	9f 8d       	ldd	r25, Y+31	; 0x1f
     a6e:	01 97       	sbiw	r24, 0x01	; 1
     a70:	9f 8f       	std	Y+31, r25	; 0x1f
     a72:	8e 8f       	std	Y+30, r24	; 0x1e
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     a74:	8e 8d       	ldd	r24, Y+30	; 0x1e
     a76:	9f 8d       	ldd	r25, Y+31	; 0x1f
     a78:	89 2b       	or	r24, r25
     a7a:	69 f7       	brne	.-38     	; 0xa56 <tone+0x1f2>
     a7c:	3f c0       	rjmp	.+126    	; 0xafc <tone+0x298>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     a7e:	6a 8d       	ldd	r22, Y+26	; 0x1a
     a80:	7b 8d       	ldd	r23, Y+27	; 0x1b
     a82:	8c 8d       	ldd	r24, Y+28	; 0x1c
     a84:	9d 8d       	ldd	r25, Y+29	; 0x1d
     a86:	0e 94 a7 12 	call	0x254e	; 0x254e <__fixunssfsi>
     a8a:	dc 01       	movw	r26, r24
     a8c:	cb 01       	movw	r24, r22
     a8e:	9f 8f       	std	Y+31, r25	; 0x1f
     a90:	8e 8f       	std	Y+30, r24	; 0x1e
     a92:	8e 8d       	ldd	r24, Y+30	; 0x1e
     a94:	9f 8d       	ldd	r25, Y+31	; 0x1f
     a96:	9b a3       	std	Y+35, r25	; 0x23
     a98:	8a a3       	std	Y+34, r24	; 0x22
     a9a:	8a a1       	ldd	r24, Y+34	; 0x22
     a9c:	9b a1       	ldd	r25, Y+35	; 0x23
     a9e:	01 97       	sbiw	r24, 0x01	; 1
     aa0:	f1 f7       	brne	.-4      	; 0xa9e <tone+0x23a>
     aa2:	9b a3       	std	Y+35, r25	; 0x23
     aa4:	8a a3       	std	Y+34, r24	; 0x22
     aa6:	2a c0       	rjmp	.+84     	; 0xafc <tone+0x298>
		__ticks = 1;
	else if (__tmp2 > 65535)
	{
		_delay_ms(__us / 1000.0);
	}
	else if (__tmp > 255)
     aa8:	20 e0       	ldi	r18, 0x00	; 0
     aaa:	30 e0       	ldi	r19, 0x00	; 0
     aac:	4f e7       	ldi	r20, 0x7F	; 127
     aae:	53 e4       	ldi	r21, 0x43	; 67
     ab0:	6d 85       	ldd	r22, Y+13	; 0x0d
     ab2:	7e 85       	ldd	r23, Y+14	; 0x0e
     ab4:	8f 85       	ldd	r24, Y+15	; 0x0f
     ab6:	98 89       	ldd	r25, Y+16	; 0x10
     ab8:	0e 94 4b 13 	call	0x2696	; 0x2696 <__gesf2>
     abc:	18 16       	cp	r1, r24
     abe:	ac f4       	brge	.+42     	; 0xaea <tone+0x286>
	{
		uint16_t __ticks=(uint16_t)__tmp2;
     ac0:	69 89       	ldd	r22, Y+17	; 0x11
     ac2:	7a 89       	ldd	r23, Y+18	; 0x12
     ac4:	8b 89       	ldd	r24, Y+19	; 0x13
     ac6:	9c 89       	ldd	r25, Y+20	; 0x14
     ac8:	0e 94 a7 12 	call	0x254e	; 0x254e <__fixunssfsi>
     acc:	dc 01       	movw	r26, r24
     ace:	cb 01       	movw	r24, r22
     ad0:	9d a3       	std	Y+37, r25	; 0x25
     ad2:	8c a3       	std	Y+36, r24	; 0x24
     ad4:	8c a1       	ldd	r24, Y+36	; 0x24
     ad6:	9d a1       	ldd	r25, Y+37	; 0x25
     ad8:	9f a3       	std	Y+39, r25	; 0x27
     ada:	8e a3       	std	Y+38, r24	; 0x26
     adc:	8e a1       	ldd	r24, Y+38	; 0x26
     ade:	9f a1       	ldd	r25, Y+39	; 0x27
     ae0:	01 97       	sbiw	r24, 0x01	; 1
     ae2:	f1 f7       	brne	.-4      	; 0xae0 <tone+0x27c>
     ae4:	9f a3       	std	Y+39, r25	; 0x27
     ae6:	8e a3       	std	Y+38, r24	; 0x26
     ae8:	0f c0       	rjmp	.+30     	; 0xb08 <tone+0x2a4>
		_delay_loop_2(__ticks);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
     aea:	6d 85       	ldd	r22, Y+13	; 0x0d
     aec:	7e 85       	ldd	r23, Y+14	; 0x0e
     aee:	8f 85       	ldd	r24, Y+15	; 0x0f
     af0:	98 89       	ldd	r25, Y+16	; 0x10
     af2:	0e 94 a7 12 	call	0x254e	; 0x254e <__fixunssfsi>
     af6:	dc 01       	movw	r26, r24
     af8:	cb 01       	movw	r24, r22
     afa:	8d 8b       	std	Y+21, r24	; 0x15
     afc:	8d 89       	ldd	r24, Y+21	; 0x15
     afe:	88 a7       	std	Y+40, r24	; 0x28
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
     b00:	88 a5       	ldd	r24, Y+40	; 0x28
     b02:	8a 95       	dec	r24
     b04:	f1 f7       	brne	.-4      	; 0xb02 <tone+0x29e>
     b06:	88 a7       	std	Y+40, r24	; 0x28
	duration = duration * 100;

	while (duration) {
		int i = interval;
		clear_output_bit(IO_AUDIO);
		while (duration && i) {
     b08:	ce 01       	movw	r24, r28
     b0a:	89 5b       	subi	r24, 0xB9	; 185
     b0c:	9f 4f       	sbci	r25, 0xFF	; 255
     b0e:	fc 01       	movw	r30, r24
     b10:	80 81       	ld	r24, Z
     b12:	91 81       	ldd	r25, Z+1	; 0x01
     b14:	89 2b       	or	r24, r25
     b16:	29 f0       	breq	.+10     	; 0xb22 <tone+0x2be>
     b18:	89 81       	ldd	r24, Y+1	; 0x01
     b1a:	9a 81       	ldd	r25, Y+2	; 0x02
     b1c:	89 2b       	or	r24, r25
     b1e:	09 f0       	breq	.+2      	; 0xb22 <tone+0x2be>
     b20:	f1 ce       	rjmp	.-542    	; 0x904 <tone+0xa0>
			duration--;
			i--;
			delay_us(10);
		}
		i = interval;
     b22:	8b 81       	ldd	r24, Y+3	; 0x03
     b24:	9c 81       	ldd	r25, Y+4	; 0x04
     b26:	9a 83       	std	Y+2, r25	; 0x02
     b28:	89 83       	std	Y+1, r24	; 0x01
		set_output_bit(IO_AUDIO);
     b2a:	88 e3       	ldi	r24, 0x38	; 56
     b2c:	90 e0       	ldi	r25, 0x00	; 0
     b2e:	28 e3       	ldi	r18, 0x38	; 56
     b30:	30 e0       	ldi	r19, 0x00	; 0
     b32:	f9 01       	movw	r30, r18
     b34:	20 81       	ld	r18, Z
     b36:	20 61       	ori	r18, 0x10	; 16
     b38:	fc 01       	movw	r30, r24
     b3a:	20 83       	st	Z, r18
		while (duration && i) {
     b3c:	23 c1       	rjmp	.+582    	; 0xd84 <tone+0x520>
			duration--;
     b3e:	ce 01       	movw	r24, r28
     b40:	89 5b       	subi	r24, 0xB9	; 185
     b42:	9f 4f       	sbci	r25, 0xFF	; 255
     b44:	9e 01       	movw	r18, r28
     b46:	29 5b       	subi	r18, 0xB9	; 185
     b48:	3f 4f       	sbci	r19, 0xFF	; 255
     b4a:	f9 01       	movw	r30, r18
     b4c:	20 81       	ld	r18, Z
     b4e:	31 81       	ldd	r19, Z+1	; 0x01
     b50:	21 50       	subi	r18, 0x01	; 1
     b52:	31 09       	sbc	r19, r1
     b54:	fc 01       	movw	r30, r24
     b56:	31 83       	std	Z+1, r19	; 0x01
     b58:	20 83       	st	Z, r18
			i--;
     b5a:	89 81       	ldd	r24, Y+1	; 0x01
     b5c:	9a 81       	ldd	r25, Y+2	; 0x02
     b5e:	01 97       	sbiw	r24, 0x01	; 1
     b60:	9a 83       	std	Y+2, r25	; 0x02
     b62:	89 83       	std	Y+1, r24	; 0x01
     b64:	80 e0       	ldi	r24, 0x00	; 0
     b66:	90 e0       	ldi	r25, 0x00	; 0
     b68:	a0 e2       	ldi	r26, 0x20	; 32
     b6a:	b1 e4       	ldi	r27, 0x41	; 65
     b6c:	8d 83       	std	Y+5, r24	; 0x05
     b6e:	9e 83       	std	Y+6, r25	; 0x06
     b70:	af 83       	std	Y+7, r26	; 0x07
     b72:	b8 87       	std	Y+8, r27	; 0x08
	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint8_t __ticks;
	double __tmp2 ;
	__tmp = ((F_CPU) / 3e6) * __us;
     b74:	2b ea       	ldi	r18, 0xAB	; 171
     b76:	3a ea       	ldi	r19, 0xAA	; 170
     b78:	4a ea       	ldi	r20, 0xAA	; 170
     b7a:	50 e4       	ldi	r21, 0x40	; 64
     b7c:	6d 81       	ldd	r22, Y+5	; 0x05
     b7e:	7e 81       	ldd	r23, Y+6	; 0x06
     b80:	8f 81       	ldd	r24, Y+7	; 0x07
     b82:	98 85       	ldd	r25, Y+8	; 0x08
     b84:	0e 94 50 13 	call	0x26a0	; 0x26a0 <__mulsf3>
     b88:	dc 01       	movw	r26, r24
     b8a:	cb 01       	movw	r24, r22
     b8c:	89 a7       	std	Y+41, r24	; 0x29
     b8e:	9a a7       	std	Y+42, r25	; 0x2a
     b90:	ab a7       	std	Y+43, r26	; 0x2b
     b92:	bc a7       	std	Y+44, r27	; 0x2c
	__tmp2 = ((F_CPU) / 4e6) * __us;
     b94:	20 e0       	ldi	r18, 0x00	; 0
     b96:	30 e0       	ldi	r19, 0x00	; 0
     b98:	40 e8       	ldi	r20, 0x80	; 128
     b9a:	50 e4       	ldi	r21, 0x40	; 64
     b9c:	6d 81       	ldd	r22, Y+5	; 0x05
     b9e:	7e 81       	ldd	r23, Y+6	; 0x06
     ba0:	8f 81       	ldd	r24, Y+7	; 0x07
     ba2:	98 85       	ldd	r25, Y+8	; 0x08
     ba4:	0e 94 50 13 	call	0x26a0	; 0x26a0 <__mulsf3>
     ba8:	dc 01       	movw	r26, r24
     baa:	cb 01       	movw	r24, r22
     bac:	8d a7       	std	Y+45, r24	; 0x2d
     bae:	9e a7       	std	Y+46, r25	; 0x2e
     bb0:	af a7       	std	Y+47, r26	; 0x2f
     bb2:	b8 ab       	std	Y+48, r27	; 0x30
	if (__tmp < 1.0)
     bb4:	20 e0       	ldi	r18, 0x00	; 0
     bb6:	30 e0       	ldi	r19, 0x00	; 0
     bb8:	40 e8       	ldi	r20, 0x80	; 128
     bba:	5f e3       	ldi	r21, 0x3F	; 63
     bbc:	69 a5       	ldd	r22, Y+41	; 0x29
     bbe:	7a a5       	ldd	r23, Y+42	; 0x2a
     bc0:	8b a5       	ldd	r24, Y+43	; 0x2b
     bc2:	9c a5       	ldd	r25, Y+44	; 0x2c
     bc4:	0e 94 30 12 	call	0x2460	; 0x2460 <__cmpsf2>
     bc8:	88 23       	and	r24, r24
     bca:	1c f4       	brge	.+6      	; 0xbd2 <tone+0x36e>
		__ticks = 1;
     bcc:	81 e0       	ldi	r24, 0x01	; 1
     bce:	89 ab       	std	Y+49, r24	; 0x31
     bd0:	c6 c0       	rjmp	.+396    	; 0xd5e <tone+0x4fa>
	else if (__tmp2 > 65535)
     bd2:	20 e0       	ldi	r18, 0x00	; 0
     bd4:	3f ef       	ldi	r19, 0xFF	; 255
     bd6:	4f e7       	ldi	r20, 0x7F	; 127
     bd8:	57 e4       	ldi	r21, 0x47	; 71
     bda:	6d a5       	ldd	r22, Y+45	; 0x2d
     bdc:	7e a5       	ldd	r23, Y+46	; 0x2e
     bde:	8f a5       	ldd	r24, Y+47	; 0x2f
     be0:	98 a9       	ldd	r25, Y+48	; 0x30
     be2:	0e 94 4b 13 	call	0x2696	; 0x2696 <__gesf2>
     be6:	18 16       	cp	r1, r24
     be8:	0c f0       	brlt	.+2      	; 0xbec <tone+0x388>
     bea:	7b c0       	rjmp	.+246    	; 0xce2 <tone+0x47e>
	{
		_delay_ms(__us / 1000.0);
     bec:	20 e0       	ldi	r18, 0x00	; 0
     bee:	30 e0       	ldi	r19, 0x00	; 0
     bf0:	4a e7       	ldi	r20, 0x7A	; 122
     bf2:	54 e4       	ldi	r21, 0x44	; 68
     bf4:	6d 81       	ldd	r22, Y+5	; 0x05
     bf6:	7e 81       	ldd	r23, Y+6	; 0x06
     bf8:	8f 81       	ldd	r24, Y+7	; 0x07
     bfa:	98 85       	ldd	r25, Y+8	; 0x08
     bfc:	0e 94 35 12 	call	0x246a	; 0x246a <__divsf3>
     c00:	dc 01       	movw	r26, r24
     c02:	cb 01       	movw	r24, r22
     c04:	8a ab       	std	Y+50, r24	; 0x32
     c06:	9b ab       	std	Y+51, r25	; 0x33
     c08:	ac ab       	std	Y+52, r26	; 0x34
     c0a:	bd ab       	std	Y+53, r27	; 0x35

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     c0c:	20 e0       	ldi	r18, 0x00	; 0
     c0e:	30 e0       	ldi	r19, 0x00	; 0
     c10:	4a e7       	ldi	r20, 0x7A	; 122
     c12:	55 e4       	ldi	r21, 0x45	; 69
     c14:	6a a9       	ldd	r22, Y+50	; 0x32
     c16:	7b a9       	ldd	r23, Y+51	; 0x33
     c18:	8c a9       	ldd	r24, Y+52	; 0x34
     c1a:	9d a9       	ldd	r25, Y+53	; 0x35
     c1c:	0e 94 50 13 	call	0x26a0	; 0x26a0 <__mulsf3>
     c20:	dc 01       	movw	r26, r24
     c22:	cb 01       	movw	r24, r22
     c24:	8e ab       	std	Y+54, r24	; 0x36
     c26:	9f ab       	std	Y+55, r25	; 0x37
     c28:	a8 af       	std	Y+56, r26	; 0x38
     c2a:	b9 af       	std	Y+57, r27	; 0x39
	if (__tmp < 1.0)
     c2c:	20 e0       	ldi	r18, 0x00	; 0
     c2e:	30 e0       	ldi	r19, 0x00	; 0
     c30:	40 e8       	ldi	r20, 0x80	; 128
     c32:	5f e3       	ldi	r21, 0x3F	; 63
     c34:	6e a9       	ldd	r22, Y+54	; 0x36
     c36:	7f a9       	ldd	r23, Y+55	; 0x37
     c38:	88 ad       	ldd	r24, Y+56	; 0x38
     c3a:	99 ad       	ldd	r25, Y+57	; 0x39
     c3c:	0e 94 30 12 	call	0x2460	; 0x2460 <__cmpsf2>
     c40:	88 23       	and	r24, r24
     c42:	2c f4       	brge	.+10     	; 0xc4e <tone+0x3ea>
		__ticks = 1;
     c44:	81 e0       	ldi	r24, 0x01	; 1
     c46:	90 e0       	ldi	r25, 0x00	; 0
     c48:	9b af       	std	Y+59, r25	; 0x3b
     c4a:	8a af       	std	Y+58, r24	; 0x3a
     c4c:	3f c0       	rjmp	.+126    	; 0xccc <tone+0x468>
	else if (__tmp > 65535)
     c4e:	20 e0       	ldi	r18, 0x00	; 0
     c50:	3f ef       	ldi	r19, 0xFF	; 255
     c52:	4f e7       	ldi	r20, 0x7F	; 127
     c54:	57 e4       	ldi	r21, 0x47	; 71
     c56:	6e a9       	ldd	r22, Y+54	; 0x36
     c58:	7f a9       	ldd	r23, Y+55	; 0x37
     c5a:	88 ad       	ldd	r24, Y+56	; 0x38
     c5c:	99 ad       	ldd	r25, Y+57	; 0x39
     c5e:	0e 94 4b 13 	call	0x2696	; 0x2696 <__gesf2>
     c62:	18 16       	cp	r1, r24
     c64:	4c f5       	brge	.+82     	; 0xcb8 <tone+0x454>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     c66:	20 e0       	ldi	r18, 0x00	; 0
     c68:	30 e0       	ldi	r19, 0x00	; 0
     c6a:	40 e2       	ldi	r20, 0x20	; 32
     c6c:	51 e4       	ldi	r21, 0x41	; 65
     c6e:	6a a9       	ldd	r22, Y+50	; 0x32
     c70:	7b a9       	ldd	r23, Y+51	; 0x33
     c72:	8c a9       	ldd	r24, Y+52	; 0x34
     c74:	9d a9       	ldd	r25, Y+53	; 0x35
     c76:	0e 94 50 13 	call	0x26a0	; 0x26a0 <__mulsf3>
     c7a:	dc 01       	movw	r26, r24
     c7c:	cb 01       	movw	r24, r22
     c7e:	bc 01       	movw	r22, r24
     c80:	cd 01       	movw	r24, r26
     c82:	0e 94 a7 12 	call	0x254e	; 0x254e <__fixunssfsi>
     c86:	dc 01       	movw	r26, r24
     c88:	cb 01       	movw	r24, r22
     c8a:	9b af       	std	Y+59, r25	; 0x3b
     c8c:	8a af       	std	Y+58, r24	; 0x3a
     c8e:	0f c0       	rjmp	.+30     	; 0xcae <tone+0x44a>
     c90:	80 e9       	ldi	r24, 0x90	; 144
     c92:	91 e0       	ldi	r25, 0x01	; 1
     c94:	9d af       	std	Y+61, r25	; 0x3d
     c96:	8c af       	std	Y+60, r24	; 0x3c
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     c98:	8c ad       	ldd	r24, Y+60	; 0x3c
     c9a:	9d ad       	ldd	r25, Y+61	; 0x3d
     c9c:	01 97       	sbiw	r24, 0x01	; 1
     c9e:	f1 f7       	brne	.-4      	; 0xc9c <tone+0x438>
     ca0:	9d af       	std	Y+61, r25	; 0x3d
     ca2:	8c af       	std	Y+60, r24	; 0x3c
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     ca4:	8a ad       	ldd	r24, Y+58	; 0x3a
     ca6:	9b ad       	ldd	r25, Y+59	; 0x3b
     ca8:	01 97       	sbiw	r24, 0x01	; 1
     caa:	9b af       	std	Y+59, r25	; 0x3b
     cac:	8a af       	std	Y+58, r24	; 0x3a
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     cae:	8a ad       	ldd	r24, Y+58	; 0x3a
     cb0:	9b ad       	ldd	r25, Y+59	; 0x3b
     cb2:	89 2b       	or	r24, r25
     cb4:	69 f7       	brne	.-38     	; 0xc90 <tone+0x42c>
     cb6:	53 c0       	rjmp	.+166    	; 0xd5e <tone+0x4fa>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     cb8:	6e a9       	ldd	r22, Y+54	; 0x36
     cba:	7f a9       	ldd	r23, Y+55	; 0x37
     cbc:	88 ad       	ldd	r24, Y+56	; 0x38
     cbe:	99 ad       	ldd	r25, Y+57	; 0x39
     cc0:	0e 94 a7 12 	call	0x254e	; 0x254e <__fixunssfsi>
     cc4:	dc 01       	movw	r26, r24
     cc6:	cb 01       	movw	r24, r22
     cc8:	9b af       	std	Y+59, r25	; 0x3b
     cca:	8a af       	std	Y+58, r24	; 0x3a
     ccc:	8a ad       	ldd	r24, Y+58	; 0x3a
     cce:	9b ad       	ldd	r25, Y+59	; 0x3b
     cd0:	9f af       	std	Y+63, r25	; 0x3f
     cd2:	8e af       	std	Y+62, r24	; 0x3e
     cd4:	8e ad       	ldd	r24, Y+62	; 0x3e
     cd6:	9f ad       	ldd	r25, Y+63	; 0x3f
     cd8:	01 97       	sbiw	r24, 0x01	; 1
     cda:	f1 f7       	brne	.-4      	; 0xcd8 <tone+0x474>
     cdc:	9f af       	std	Y+63, r25	; 0x3f
     cde:	8e af       	std	Y+62, r24	; 0x3e
     ce0:	3e c0       	rjmp	.+124    	; 0xd5e <tone+0x4fa>
		__ticks = 1;
	else if (__tmp2 > 65535)
	{
		_delay_ms(__us / 1000.0);
	}
	else if (__tmp > 255)
     ce2:	20 e0       	ldi	r18, 0x00	; 0
     ce4:	30 e0       	ldi	r19, 0x00	; 0
     ce6:	4f e7       	ldi	r20, 0x7F	; 127
     ce8:	53 e4       	ldi	r21, 0x43	; 67
     cea:	69 a5       	ldd	r22, Y+41	; 0x29
     cec:	7a a5       	ldd	r23, Y+42	; 0x2a
     cee:	8b a5       	ldd	r24, Y+43	; 0x2b
     cf0:	9c a5       	ldd	r25, Y+44	; 0x2c
     cf2:	0e 94 4b 13 	call	0x2696	; 0x2696 <__gesf2>
     cf6:	18 16       	cp	r1, r24
     cf8:	4c f5       	brge	.+82     	; 0xd4c <tone+0x4e8>
	{
		uint16_t __ticks=(uint16_t)__tmp2;
     cfa:	8e 01       	movw	r16, r28
     cfc:	00 5c       	subi	r16, 0xC0	; 192
     cfe:	1f 4f       	sbci	r17, 0xFF	; 255
     d00:	6d a5       	ldd	r22, Y+45	; 0x2d
     d02:	7e a5       	ldd	r23, Y+46	; 0x2e
     d04:	8f a5       	ldd	r24, Y+47	; 0x2f
     d06:	98 a9       	ldd	r25, Y+48	; 0x30
     d08:	0e 94 a7 12 	call	0x254e	; 0x254e <__fixunssfsi>
     d0c:	dc 01       	movw	r26, r24
     d0e:	cb 01       	movw	r24, r22
     d10:	f8 01       	movw	r30, r16
     d12:	91 83       	std	Z+1, r25	; 0x01
     d14:	80 83       	st	Z, r24
     d16:	ce 01       	movw	r24, r28
     d18:	8e 5b       	subi	r24, 0xBE	; 190
     d1a:	9f 4f       	sbci	r25, 0xFF	; 255
     d1c:	9e 01       	movw	r18, r28
     d1e:	20 5c       	subi	r18, 0xC0	; 192
     d20:	3f 4f       	sbci	r19, 0xFF	; 255
     d22:	f9 01       	movw	r30, r18
     d24:	20 81       	ld	r18, Z
     d26:	31 81       	ldd	r19, Z+1	; 0x01
     d28:	fc 01       	movw	r30, r24
     d2a:	31 83       	std	Z+1, r19	; 0x01
     d2c:	20 83       	st	Z, r18
     d2e:	ce 01       	movw	r24, r28
     d30:	8e 5b       	subi	r24, 0xBE	; 190
     d32:	9f 4f       	sbci	r25, 0xFF	; 255
     d34:	fc 01       	movw	r30, r24
     d36:	80 81       	ld	r24, Z
     d38:	91 81       	ldd	r25, Z+1	; 0x01
     d3a:	01 97       	sbiw	r24, 0x01	; 1
     d3c:	f1 f7       	brne	.-4      	; 0xd3a <tone+0x4d6>
     d3e:	9e 01       	movw	r18, r28
     d40:	2e 5b       	subi	r18, 0xBE	; 190
     d42:	3f 4f       	sbci	r19, 0xFF	; 255
     d44:	f9 01       	movw	r30, r18
     d46:	91 83       	std	Z+1, r25	; 0x01
     d48:	80 83       	st	Z, r24
     d4a:	1c c0       	rjmp	.+56     	; 0xd84 <tone+0x520>
		_delay_loop_2(__ticks);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
     d4c:	69 a5       	ldd	r22, Y+41	; 0x29
     d4e:	7a a5       	ldd	r23, Y+42	; 0x2a
     d50:	8b a5       	ldd	r24, Y+43	; 0x2b
     d52:	9c a5       	ldd	r25, Y+44	; 0x2c
     d54:	0e 94 a7 12 	call	0x254e	; 0x254e <__fixunssfsi>
     d58:	dc 01       	movw	r26, r24
     d5a:	cb 01       	movw	r24, r22
     d5c:	89 ab       	std	Y+49, r24	; 0x31
     d5e:	ce 01       	movw	r24, r28
     d60:	8c 5b       	subi	r24, 0xBC	; 188
     d62:	9f 4f       	sbci	r25, 0xFF	; 255
     d64:	29 a9       	ldd	r18, Y+49	; 0x31
     d66:	fc 01       	movw	r30, r24
     d68:	20 83       	st	Z, r18
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
     d6a:	ce 01       	movw	r24, r28
     d6c:	8c 5b       	subi	r24, 0xBC	; 188
     d6e:	9f 4f       	sbci	r25, 0xFF	; 255
     d70:	fc 01       	movw	r30, r24
     d72:	80 81       	ld	r24, Z
     d74:	28 2f       	mov	r18, r24
     d76:	2a 95       	dec	r18
     d78:	f1 f7       	brne	.-4      	; 0xd76 <tone+0x512>
     d7a:	ce 01       	movw	r24, r28
     d7c:	8c 5b       	subi	r24, 0xBC	; 188
     d7e:	9f 4f       	sbci	r25, 0xFF	; 255
     d80:	fc 01       	movw	r30, r24
     d82:	20 83       	st	Z, r18
			i--;
			delay_us(10);
		}
		i = interval;
		set_output_bit(IO_AUDIO);
		while (duration && i) {
     d84:	ce 01       	movw	r24, r28
     d86:	89 5b       	subi	r24, 0xB9	; 185
     d88:	9f 4f       	sbci	r25, 0xFF	; 255
     d8a:	fc 01       	movw	r30, r24
     d8c:	80 81       	ld	r24, Z
     d8e:	91 81       	ldd	r25, Z+1	; 0x01
     d90:	89 2b       	or	r24, r25
     d92:	29 f0       	breq	.+10     	; 0xd9e <tone+0x53a>
     d94:	89 81       	ldd	r24, Y+1	; 0x01
     d96:	9a 81       	ldd	r25, Y+2	; 0x02
     d98:	89 2b       	or	r24, r25
     d9a:	09 f0       	breq	.+2      	; 0xd9e <tone+0x53a>
     d9c:	d0 ce       	rjmp	.-608    	; 0xb3e <tone+0x2da>
//from HelloSound
int tone(int frequency, int duration) {
	int interval = (50000 / frequency);
	duration = duration * 100;

	while (duration) {
     d9e:	ce 01       	movw	r24, r28
     da0:	89 5b       	subi	r24, 0xB9	; 185
     da2:	9f 4f       	sbci	r25, 0xFF	; 255
     da4:	fc 01       	movw	r30, r24
     da6:	80 81       	ld	r24, Z
     da8:	91 81       	ldd	r25, Z+1	; 0x01
     daa:	89 2b       	or	r24, r25
     dac:	09 f0       	breq	.+2      	; 0xdb0 <tone+0x54c>
     dae:	9c cd       	rjmp	.-1224   	; 0x8e8 <tone+0x84>
			delay_us(10);
		}

	}

	return 1;
     db0:	81 e0       	ldi	r24, 0x01	; 1
     db2:	90 e0       	ldi	r25, 0x00	; 0
}
     db4:	c8 5b       	subi	r28, 0xB8	; 184
     db6:	df 4f       	sbci	r29, 0xFF	; 255
     db8:	0f b6       	in	r0, 0x3f	; 63
     dba:	f8 94       	cli
     dbc:	de bf       	out	0x3e, r29	; 62
     dbe:	0f be       	out	0x3f, r0	; 63
     dc0:	cd bf       	out	0x3d, r28	; 61
     dc2:	df 91       	pop	r29
     dc4:	cf 91       	pop	r28
     dc6:	1f 91       	pop	r17
     dc8:	0f 91       	pop	r16
     dca:	08 95       	ret

00000dcc <start>:




void start(){
     dcc:	cf 93       	push	r28
     dce:	df 93       	push	r29
     dd0:	00 d0       	rcall	.+0      	; 0xdd2 <start+0x6>
     dd2:	00 d0       	rcall	.+0      	; 0xdd4 <start+0x8>
     dd4:	00 d0       	rcall	.+0      	; 0xdd6 <start+0xa>
     dd6:	cd b7       	in	r28, 0x3d	; 61
     dd8:	de b7       	in	r29, 0x3e	; 62
	int led1=2;
     dda:	82 e0       	ldi	r24, 0x02	; 2
     ddc:	90 e0       	ldi	r25, 0x00	; 0
     dde:	9a 83       	std	Y+2, r25	; 0x02
     de0:	89 83       	std	Y+1, r24	; 0x01
	int led2=7;
     de2:	87 e0       	ldi	r24, 0x07	; 7
     de4:	90 e0       	ldi	r25, 0x00	; 0
     de6:	9c 83       	std	Y+4, r25	; 0x04
     de8:	8b 83       	std	Y+3, r24	; 0x03

	leds_set_headlights(250);
     dea:	8a ef       	ldi	r24, 0xFA	; 250
     dec:	90 e0       	ldi	r25, 0x00	; 0
     dee:	0e 94 c0 11 	call	0x2380	; 0x2380 <leds_set_headlights>

	gfx_move(4, 0);
     df2:	60 e0       	ldi	r22, 0x00	; 0
     df4:	84 e0       	ldi	r24, 0x04	; 4
     df6:	0e 94 89 0a 	call	0x1512	; 0x1512 <gfx_move>
	gfx_print_text("To start the program,");
     dfa:	88 e2       	ldi	r24, 0x28	; 40
     dfc:	91 e0       	ldi	r25, 0x01	; 1
     dfe:	0e 94 f3 0b 	call	0x17e6	; 0x17e6 <gfx_print_text>
	gfx_move(4, 13);
     e02:	6d e0       	ldi	r22, 0x0D	; 13
     e04:	84 e0       	ldi	r24, 0x04	; 4
     e06:	0e 94 89 0a 	call	0x1512	; 0x1512 <gfx_move>
	gfx_print_text("Press the S3 button");
     e0a:	8e e3       	ldi	r24, 0x3E	; 62
     e0c:	91 e0       	ldi	r25, 0x01	; 1
     e0e:	0e 94 f3 0b 	call	0x17e6	; 0x17e6 <gfx_print_text>
	gfx_move(50, 23);
     e12:	67 e1       	ldi	r22, 0x17	; 23
     e14:	82 e3       	ldi	r24, 0x32	; 50
     e16:	0e 94 89 0a 	call	0x1512	; 0x1512 <gfx_move>
	gfx_print_text("----->");
     e1a:	82 e5       	ldi	r24, 0x52	; 82
     e1c:	91 e0       	ldi	r25, 0x01	; 1
     e1e:	0e 94 f3 0b 	call	0x17e6	; 0x17e6 <gfx_print_text>

	gfx_move(4, 35);
     e22:	63 e2       	ldi	r22, 0x23	; 35
     e24:	84 e0       	ldi	r24, 0x04	; 4
     e26:	0e 94 89 0a 	call	0x1512	; 0x1512 <gfx_move>
	gfx_print_text("To stop the program");
     e2a:	89 e5       	ldi	r24, 0x59	; 89
     e2c:	91 e0       	ldi	r25, 0x01	; 1
     e2e:	0e 94 f3 0b 	call	0x17e6	; 0x17e6 <gfx_print_text>
	gfx_move(4, 48);
     e32:	60 e3       	ldi	r22, 0x30	; 48
     e34:	84 e0       	ldi	r24, 0x04	; 4
     e36:	0e 94 89 0a 	call	0x1512	; 0x1512 <gfx_move>
	gfx_print_text("Press the S2 button");
     e3a:	8d e6       	ldi	r24, 0x6D	; 109
     e3c:	91 e0       	ldi	r25, 0x01	; 1
     e3e:	0e 94 f3 0b 	call	0x17e6	; 0x17e6 <gfx_print_text>
	gfx_move(50, 55);
     e42:	67 e3       	ldi	r22, 0x37	; 55
     e44:	82 e3       	ldi	r24, 0x32	; 50
     e46:	0e 94 89 0a 	call	0x1512	; 0x1512 <gfx_move>
	gfx_print_text("<-----");
     e4a:	81 e8       	ldi	r24, 0x81	; 129
     e4c:	91 e0       	ldi	r25, 0x01	; 1
     e4e:	0e 94 f3 0b 	call	0x17e6	; 0x17e6 <gfx_print_text>

	deactivate_output_bit(IO_INPUT_1);
     e52:	81 e3       	ldi	r24, 0x31	; 49
     e54:	90 e0       	ldi	r25, 0x00	; 0
     e56:	21 e3       	ldi	r18, 0x31	; 49
     e58:	30 e0       	ldi	r19, 0x00	; 0
     e5a:	f9 01       	movw	r30, r18
     e5c:	20 81       	ld	r18, Z
     e5e:	2f 7e       	andi	r18, 0xEF	; 239
     e60:	fc 01       	movw	r30, r24
     e62:	20 83       	st	Z, r18
	while(get_input_bit(IO_INPUT_1)){
     e64:	00 00       	nop
     e66:	80 e3       	ldi	r24, 0x30	; 48
     e68:	90 e0       	ldi	r25, 0x00	; 0
     e6a:	fc 01       	movw	r30, r24
     e6c:	80 81       	ld	r24, Z
     e6e:	88 2f       	mov	r24, r24
     e70:	90 e0       	ldi	r25, 0x00	; 0
     e72:	80 71       	andi	r24, 0x10	; 16
     e74:	99 27       	eor	r25, r25
     e76:	89 2b       	or	r24, r25
     e78:	b1 f7       	brne	.-20     	; 0xe66 <start+0x9a>
	}

	if (!get_input_bit(IO_INPUT_1))
     e7a:	80 e3       	ldi	r24, 0x30	; 48
     e7c:	90 e0       	ldi	r25, 0x00	; 0
     e7e:	fc 01       	movw	r30, r24
     e80:	80 81       	ld	r24, Z
     e82:	88 2f       	mov	r24, r24
     e84:	90 e0       	ldi	r25, 0x00	; 0
     e86:	80 71       	andi	r24, 0x10	; 16
     e88:	99 27       	eor	r25, r25
     e8a:	89 2b       	or	r24, r25
     e8c:	09 f0       	breq	.+2      	; 0xe90 <start+0xc4>
     e8e:	6a c0       	rjmp	.+212    	; 0xf64 <start+0x198>
	{
		delay(800);
     e90:	80 e2       	ldi	r24, 0x20	; 32
     e92:	93 e0       	ldi	r25, 0x03	; 3
     e94:	0e 94 75 09 	call	0x12ea	; 0x12ea <delay>
		for(int i=4; i>0; i--){
     e98:	84 e0       	ldi	r24, 0x04	; 4
     e9a:	90 e0       	ldi	r25, 0x00	; 0
     e9c:	9e 83       	std	Y+6, r25	; 0x06
     e9e:	8d 83       	std	Y+5, r24	; 0x05
     ea0:	5b c0       	rjmp	.+182    	; 0xf58 <start+0x18c>
			if(i>1){
     ea2:	8d 81       	ldd	r24, Y+5	; 0x05
     ea4:	9e 81       	ldd	r25, Y+6	; 0x06
     ea6:	02 97       	sbiw	r24, 0x02	; 2
     ea8:	c4 f1       	brlt	.+112    	; 0xf1a <start+0x14e>
				sprintf("Flag stop: %d", led1);
     eaa:	89 81       	ldd	r24, Y+1	; 0x01
     eac:	9a 81       	ldd	r25, Y+2	; 0x02
     eae:	29 2f       	mov	r18, r25
     eb0:	2f 93       	push	r18
     eb2:	8f 93       	push	r24
     eb4:	88 e8       	ldi	r24, 0x88	; 136
     eb6:	91 e0       	ldi	r25, 0x01	; 1
     eb8:	89 2f       	mov	r24, r25
     eba:	8f 93       	push	r24
     ebc:	88 e8       	ldi	r24, 0x88	; 136
     ebe:	91 e0       	ldi	r25, 0x01	; 1
     ec0:	8f 93       	push	r24
     ec2:	0e 94 fe 13 	call	0x27fc	; 0x27fc <sprintf>
     ec6:	0f 90       	pop	r0
     ec8:	0f 90       	pop	r0
     eca:	0f 90       	pop	r0
     ecc:	0f 90       	pop	r0
				leds_set_status(LEDS_RED, led1);
     ece:	89 81       	ldd	r24, Y+1	; 0x01
     ed0:	68 2f       	mov	r22, r24
     ed2:	82 e0       	ldi	r24, 0x02	; 2
     ed4:	0e 94 92 11 	call	0x2324	; 0x2324 <leds_set_status>
				leds_set_status(LEDS_RED, led2);
     ed8:	8b 81       	ldd	r24, Y+3	; 0x03
     eda:	68 2f       	mov	r22, r24
     edc:	82 e0       	ldi	r24, 0x02	; 2
     ede:	0e 94 92 11 	call	0x2324	; 0x2324 <leds_set_status>
				cli();
     ee2:	f8 94       	cli
				tone(392, 100);
     ee4:	64 e6       	ldi	r22, 0x64	; 100
     ee6:	70 e0       	ldi	r23, 0x00	; 0
     ee8:	88 e8       	ldi	r24, 0x88	; 136
     eea:	91 e0       	ldi	r25, 0x01	; 1
     eec:	0e 94 32 04 	call	0x864	; 0x864 <tone>
				sei();
     ef0:	78 94       	sei
				leds_set_status(LEDS_OFF, led1);
     ef2:	89 81       	ldd	r24, Y+1	; 0x01
     ef4:	68 2f       	mov	r22, r24
     ef6:	80 e0       	ldi	r24, 0x00	; 0
     ef8:	0e 94 92 11 	call	0x2324	; 0x2324 <leds_set_status>
				leds_set_status(LEDS_OFF, led2);
     efc:	8b 81       	ldd	r24, Y+3	; 0x03
     efe:	68 2f       	mov	r22, r24
     f00:	80 e0       	ldi	r24, 0x00	; 0
     f02:	0e 94 92 11 	call	0x2324	; 0x2324 <leds_set_status>
				led1++;
     f06:	89 81       	ldd	r24, Y+1	; 0x01
     f08:	9a 81       	ldd	r25, Y+2	; 0x02
     f0a:	01 96       	adiw	r24, 0x01	; 1
     f0c:	9a 83       	std	Y+2, r25	; 0x02
     f0e:	89 83       	std	Y+1, r24	; 0x01
				led2--;
     f10:	8b 81       	ldd	r24, Y+3	; 0x03
     f12:	9c 81       	ldd	r25, Y+4	; 0x04
     f14:	01 97       	sbiw	r24, 0x01	; 1
     f16:	9c 83       	std	Y+4, r25	; 0x04
     f18:	8b 83       	std	Y+3, r24	; 0x03
			}

			if(i==1){
     f1a:	8d 81       	ldd	r24, Y+5	; 0x05
     f1c:	9e 81       	ldd	r25, Y+6	; 0x06
     f1e:	01 97       	sbiw	r24, 0x01	; 1
     f20:	91 f4       	brne	.+36     	; 0xf46 <start+0x17a>
				leds_set_status(LEDS_GREEN, led1);
     f22:	89 81       	ldd	r24, Y+1	; 0x01
     f24:	68 2f       	mov	r22, r24
     f26:	81 e0       	ldi	r24, 0x01	; 1
     f28:	0e 94 92 11 	call	0x2324	; 0x2324 <leds_set_status>
				leds_set_status(LEDS_GREEN, led2);
     f2c:	8b 81       	ldd	r24, Y+3	; 0x03
     f2e:	68 2f       	mov	r22, r24
     f30:	81 e0       	ldi	r24, 0x01	; 1
     f32:	0e 94 92 11 	call	0x2324	; 0x2324 <leds_set_status>
				cli();
     f36:	f8 94       	cli
				tone(800, 100);
     f38:	64 e6       	ldi	r22, 0x64	; 100
     f3a:	70 e0       	ldi	r23, 0x00	; 0
     f3c:	80 e2       	ldi	r24, 0x20	; 32
     f3e:	93 e0       	ldi	r25, 0x03	; 3
     f40:	0e 94 32 04 	call	0x864	; 0x864 <tone>
				sei();
     f44:	78 94       	sei
			}
			delay(500);
     f46:	84 ef       	ldi	r24, 0xF4	; 244
     f48:	91 e0       	ldi	r25, 0x01	; 1
     f4a:	0e 94 75 09 	call	0x12ea	; 0x12ea <delay>
	}

	if (!get_input_bit(IO_INPUT_1))
	{
		delay(800);
		for(int i=4; i>0; i--){
     f4e:	8d 81       	ldd	r24, Y+5	; 0x05
     f50:	9e 81       	ldd	r25, Y+6	; 0x06
     f52:	01 97       	sbiw	r24, 0x01	; 1
     f54:	9e 83       	std	Y+6, r25	; 0x06
     f56:	8d 83       	std	Y+5, r24	; 0x05
     f58:	8d 81       	ldd	r24, Y+5	; 0x05
     f5a:	9e 81       	ldd	r25, Y+6	; 0x06
     f5c:	18 16       	cp	r1, r24
     f5e:	19 06       	cpc	r1, r25
     f60:	0c f4       	brge	.+2      	; 0xf64 <start+0x198>
     f62:	9f cf       	rjmp	.-194    	; 0xea2 <start+0xd6>
				sei();
			}
			delay(500);
		}
	}
}
     f64:	00 00       	nop
     f66:	26 96       	adiw	r28, 0x06	; 6
     f68:	0f b6       	in	r0, 0x3f	; 63
     f6a:	f8 94       	cli
     f6c:	de bf       	out	0x3e, r29	; 62
     f6e:	0f be       	out	0x3f, r0	; 63
     f70:	cd bf       	out	0x3d, r28	; 61
     f72:	df 91       	pop	r29
     f74:	cf 91       	pop	r28
     f76:	08 95       	ret

00000f78 <display_write>:
     f78:	90 91 65 00 	lds	r25, 0x0065	; 0x800065 <__TEXT_REGION_LENGTH__+0x7e0065>
     f7c:	38 2f       	mov	r19, r24
     f7e:	31 70       	andi	r19, 0x01	; 1
     f80:	29 2f       	mov	r18, r25
     f82:	2e 7f       	andi	r18, 0xFE	; 254
     f84:	91 e0       	ldi	r25, 0x01	; 1
     f86:	93 27       	eor	r25, r19
     f88:	92 2b       	or	r25, r18
     f8a:	90 93 65 00 	sts	0x0065, r25	; 0x800065 <__TEXT_REGION_LENGTH__+0x7e0065>
     f8e:	90 91 65 00 	lds	r25, 0x0065	; 0x800065 <__TEXT_REGION_LENGTH__+0x7e0065>
     f92:	9d 7f       	andi	r25, 0xFD	; 253
     f94:	31 11       	cpse	r19, r1
     f96:	02 c0       	rjmp	.+4      	; 0xf9c <display_write+0x24>
     f98:	20 e0       	ldi	r18, 0x00	; 0
     f9a:	01 c0       	rjmp	.+2      	; 0xf9e <display_write+0x26>
     f9c:	22 e0       	ldi	r18, 0x02	; 2
     f9e:	92 2b       	or	r25, r18
     fa0:	90 93 65 00 	sts	0x0065, r25	; 0x800065 <__TEXT_REGION_LENGTH__+0x7e0065>
     fa4:	90 91 65 00 	lds	r25, 0x0065	; 0x800065 <__TEXT_REGION_LENGTH__+0x7e0065>
     fa8:	97 7f       	andi	r25, 0xF7	; 247
     faa:	81 fd       	sbrc	r24, 1
     fac:	02 c0       	rjmp	.+4      	; 0xfb2 <display_write+0x3a>
     fae:	80 e0       	ldi	r24, 0x00	; 0
     fb0:	01 c0       	rjmp	.+2      	; 0xfb4 <display_write+0x3c>
     fb2:	88 e0       	ldi	r24, 0x08	; 8
     fb4:	89 2b       	or	r24, r25
     fb6:	80 93 65 00 	sts	0x0065, r24	; 0x800065 <__TEXT_REGION_LENGTH__+0x7e0065>
     fba:	80 91 65 00 	lds	r24, 0x0065	; 0x800065 <__TEXT_REGION_LENGTH__+0x7e0065>
     fbe:	8f 7e       	andi	r24, 0xEF	; 239
     fc0:	80 93 65 00 	sts	0x0065, r24	; 0x800065 <__TEXT_REGION_LENGTH__+0x7e0065>
     fc4:	8f ef       	ldi	r24, 0xFF	; 255
     fc6:	8a bb       	out	0x1a, r24	; 26
     fc8:	6b bb       	out	0x1b, r22	; 27
     fca:	85 e0       	ldi	r24, 0x05	; 5
     fcc:	8a 95       	dec	r24
     fce:	f1 f7       	brne	.-4      	; 0xfcc <display_write+0x54>
     fd0:	00 00       	nop
     fd2:	80 91 65 00 	lds	r24, 0x0065	; 0x800065 <__TEXT_REGION_LENGTH__+0x7e0065>
     fd6:	84 60       	ori	r24, 0x04	; 4
     fd8:	80 93 65 00 	sts	0x0065, r24	; 0x800065 <__TEXT_REGION_LENGTH__+0x7e0065>
     fdc:	85 e0       	ldi	r24, 0x05	; 5
     fde:	8a 95       	dec	r24
     fe0:	f1 f7       	brne	.-4      	; 0xfde <display_write+0x66>
     fe2:	00 00       	nop
     fe4:	80 91 65 00 	lds	r24, 0x0065	; 0x800065 <__TEXT_REGION_LENGTH__+0x7e0065>
     fe8:	8b 7f       	andi	r24, 0xFB	; 251
     fea:	80 93 65 00 	sts	0x0065, r24	; 0x800065 <__TEXT_REGION_LENGTH__+0x7e0065>
     fee:	85 e0       	ldi	r24, 0x05	; 5
     ff0:	8a 95       	dec	r24
     ff2:	f1 f7       	brne	.-4      	; 0xff0 <display_write+0x78>
     ff4:	00 00       	nop
     ff6:	1b ba       	out	0x1b, r1	; 27
     ff8:	1a ba       	out	0x1a, r1	; 26
     ffa:	08 95       	ret

00000ffc <display_read>:
     ffc:	90 91 65 00 	lds	r25, 0x0065	; 0x800065 <__TEXT_REGION_LENGTH__+0x7e0065>
    1000:	38 2f       	mov	r19, r24
    1002:	31 70       	andi	r19, 0x01	; 1
    1004:	29 2f       	mov	r18, r25
    1006:	2e 7f       	andi	r18, 0xFE	; 254
    1008:	91 e0       	ldi	r25, 0x01	; 1
    100a:	93 27       	eor	r25, r19
    100c:	92 2b       	or	r25, r18
    100e:	90 93 65 00 	sts	0x0065, r25	; 0x800065 <__TEXT_REGION_LENGTH__+0x7e0065>
    1012:	90 91 65 00 	lds	r25, 0x0065	; 0x800065 <__TEXT_REGION_LENGTH__+0x7e0065>
    1016:	9d 7f       	andi	r25, 0xFD	; 253
    1018:	31 11       	cpse	r19, r1
    101a:	02 c0       	rjmp	.+4      	; 0x1020 <display_read+0x24>
    101c:	20 e0       	ldi	r18, 0x00	; 0
    101e:	01 c0       	rjmp	.+2      	; 0x1022 <display_read+0x26>
    1020:	22 e0       	ldi	r18, 0x02	; 2
    1022:	92 2b       	or	r25, r18
    1024:	90 93 65 00 	sts	0x0065, r25	; 0x800065 <__TEXT_REGION_LENGTH__+0x7e0065>
    1028:	90 91 65 00 	lds	r25, 0x0065	; 0x800065 <__TEXT_REGION_LENGTH__+0x7e0065>
    102c:	97 7f       	andi	r25, 0xF7	; 247
    102e:	81 fd       	sbrc	r24, 1
    1030:	02 c0       	rjmp	.+4      	; 0x1036 <display_read+0x3a>
    1032:	80 e0       	ldi	r24, 0x00	; 0
    1034:	01 c0       	rjmp	.+2      	; 0x1038 <display_read+0x3c>
    1036:	88 e0       	ldi	r24, 0x08	; 8
    1038:	89 2b       	or	r24, r25
    103a:	80 93 65 00 	sts	0x0065, r24	; 0x800065 <__TEXT_REGION_LENGTH__+0x7e0065>
    103e:	80 91 65 00 	lds	r24, 0x0065	; 0x800065 <__TEXT_REGION_LENGTH__+0x7e0065>
    1042:	80 61       	ori	r24, 0x10	; 16
    1044:	80 93 65 00 	sts	0x0065, r24	; 0x800065 <__TEXT_REGION_LENGTH__+0x7e0065>
    1048:	1a ba       	out	0x1a, r1	; 26
    104a:	85 e0       	ldi	r24, 0x05	; 5
    104c:	8a 95       	dec	r24
    104e:	f1 f7       	brne	.-4      	; 0x104c <display_read+0x50>
    1050:	00 00       	nop
    1052:	80 91 65 00 	lds	r24, 0x0065	; 0x800065 <__TEXT_REGION_LENGTH__+0x7e0065>
    1056:	84 60       	ori	r24, 0x04	; 4
    1058:	80 93 65 00 	sts	0x0065, r24	; 0x800065 <__TEXT_REGION_LENGTH__+0x7e0065>
    105c:	95 e1       	ldi	r25, 0x15	; 21
    105e:	9a 95       	dec	r25
    1060:	f1 f7       	brne	.-4      	; 0x105e <display_read+0x62>
    1062:	00 00       	nop
    1064:	89 b3       	in	r24, 0x19	; 25
    1066:	90 91 65 00 	lds	r25, 0x0065	; 0x800065 <__TEXT_REGION_LENGTH__+0x7e0065>
    106a:	9b 7f       	andi	r25, 0xFB	; 251
    106c:	90 93 65 00 	sts	0x0065, r25	; 0x800065 <__TEXT_REGION_LENGTH__+0x7e0065>
    1070:	95 e0       	ldi	r25, 0x05	; 5
    1072:	9a 95       	dec	r25
    1074:	f1 f7       	brne	.-4      	; 0x1072 <display_read+0x76>
    1076:	00 00       	nop
    1078:	08 95       	ret

0000107a <display_wait>:
    107a:	0f 93       	push	r16
    107c:	1f 93       	push	r17
    107e:	cf 93       	push	r28
    1080:	90 91 e9 03 	lds	r25, 0x03E9	; 0x8003e9 <display_type>
    1084:	91 11       	cpse	r25, r1
    1086:	02 c0       	rjmp	.+4      	; 0x108c <display_wait+0x12>
    1088:	80 e0       	ldi	r24, 0x00	; 0
    108a:	11 c0       	rjmp	.+34     	; 0x10ae <display_wait+0x34>
    108c:	c8 2f       	mov	r28, r24
    108e:	c1 70       	andi	r28, 0x01	; 1
    1090:	00 e0       	ldi	r16, 0x00	; 0
    1092:	10 e0       	ldi	r17, 0x00	; 0
    1094:	8c 2f       	mov	r24, r28
    1096:	0e 94 fe 07 	call	0xffc	; 0xffc <display_read>
    109a:	0f 5f       	subi	r16, 0xFF	; 255
    109c:	1f 4f       	sbci	r17, 0xFF	; 255
    109e:	87 ff       	sbrs	r24, 7
    10a0:	05 c0       	rjmp	.+10     	; 0x10ac <display_wait+0x32>
    10a2:	0f 3f       	cpi	r16, 0xFF	; 255
    10a4:	8f ef       	ldi	r24, 0xFF	; 255
    10a6:	18 07       	cpc	r17, r24
    10a8:	a9 f7       	brne	.-22     	; 0x1094 <display_wait+0x1a>
    10aa:	ee cf       	rjmp	.-36     	; 0x1088 <display_wait+0xe>
    10ac:	81 e0       	ldi	r24, 0x01	; 1
    10ae:	cf 91       	pop	r28
    10b0:	1f 91       	pop	r17
    10b2:	0f 91       	pop	r16
    10b4:	08 95       	ret

000010b6 <display_init>:
    10b6:	8f ef       	ldi	r24, 0xFF	; 255
    10b8:	80 93 e9 03 	sts	0x03E9, r24	; 0x8003e9 <display_type>
    10bc:	80 91 64 00 	lds	r24, 0x0064	; 0x800064 <__TEXT_REGION_LENGTH__+0x7e0064>
    10c0:	88 60       	ori	r24, 0x08	; 8
    10c2:	80 93 64 00 	sts	0x0064, r24	; 0x800064 <__TEXT_REGION_LENGTH__+0x7e0064>
    10c6:	80 91 64 00 	lds	r24, 0x0064	; 0x800064 <__TEXT_REGION_LENGTH__+0x7e0064>
    10ca:	80 61       	ori	r24, 0x10	; 16
    10cc:	80 93 64 00 	sts	0x0064, r24	; 0x800064 <__TEXT_REGION_LENGTH__+0x7e0064>
    10d0:	80 91 64 00 	lds	r24, 0x0064	; 0x800064 <__TEXT_REGION_LENGTH__+0x7e0064>
    10d4:	84 60       	ori	r24, 0x04	; 4
    10d6:	80 93 64 00 	sts	0x0064, r24	; 0x800064 <__TEXT_REGION_LENGTH__+0x7e0064>
    10da:	80 91 64 00 	lds	r24, 0x0064	; 0x800064 <__TEXT_REGION_LENGTH__+0x7e0064>
    10de:	81 60       	ori	r24, 0x01	; 1
    10e0:	80 93 64 00 	sts	0x0064, r24	; 0x800064 <__TEXT_REGION_LENGTH__+0x7e0064>
    10e4:	80 91 64 00 	lds	r24, 0x0064	; 0x800064 <__TEXT_REGION_LENGTH__+0x7e0064>
    10e8:	82 60       	ori	r24, 0x02	; 2
    10ea:	80 93 64 00 	sts	0x0064, r24	; 0x800064 <__TEXT_REGION_LENGTH__+0x7e0064>
    10ee:	b8 9a       	sbi	0x17, 0	; 23
    10f0:	1a ba       	out	0x1a, r1	; 26
    10f2:	80 91 65 00 	lds	r24, 0x0065	; 0x800065 <__TEXT_REGION_LENGTH__+0x7e0065>
    10f6:	87 7f       	andi	r24, 0xF7	; 247
    10f8:	80 93 65 00 	sts	0x0065, r24	; 0x800065 <__TEXT_REGION_LENGTH__+0x7e0065>
    10fc:	80 91 65 00 	lds	r24, 0x0065	; 0x800065 <__TEXT_REGION_LENGTH__+0x7e0065>
    1100:	8f 7e       	andi	r24, 0xEF	; 239
    1102:	80 93 65 00 	sts	0x0065, r24	; 0x800065 <__TEXT_REGION_LENGTH__+0x7e0065>
    1106:	80 91 65 00 	lds	r24, 0x0065	; 0x800065 <__TEXT_REGION_LENGTH__+0x7e0065>
    110a:	8b 7f       	andi	r24, 0xFB	; 251
    110c:	80 93 65 00 	sts	0x0065, r24	; 0x800065 <__TEXT_REGION_LENGTH__+0x7e0065>
    1110:	80 91 65 00 	lds	r24, 0x0065	; 0x800065 <__TEXT_REGION_LENGTH__+0x7e0065>
    1114:	8e 7f       	andi	r24, 0xFE	; 254
    1116:	80 93 65 00 	sts	0x0065, r24	; 0x800065 <__TEXT_REGION_LENGTH__+0x7e0065>
    111a:	80 91 65 00 	lds	r24, 0x0065	; 0x800065 <__TEXT_REGION_LENGTH__+0x7e0065>
    111e:	8d 7f       	andi	r24, 0xFD	; 253
    1120:	80 93 65 00 	sts	0x0065, r24	; 0x800065 <__TEXT_REGION_LENGTH__+0x7e0065>
    1124:	c0 98       	cbi	0x18, 0	; 24
    1126:	97 9b       	sbis	0x12, 7	; 18
    1128:	09 c0       	rjmp	.+18     	; 0x113c <__stack+0x3d>
    112a:	97 98       	cbi	0x12, 7	; 18
    112c:	8f e9       	ldi	r24, 0x9F	; 159
    112e:	9f e0       	ldi	r25, 0x0F	; 15
    1130:	01 97       	sbiw	r24, 0x01	; 1
    1132:	f1 f7       	brne	.-4      	; 0x1130 <__stack+0x31>
    1134:	00 c0       	rjmp	.+0      	; 0x1136 <__stack+0x37>
    1136:	00 00       	nop
    1138:	97 9a       	sbi	0x12, 7	; 18
    113a:	06 c0       	rjmp	.+12     	; 0x1148 <__stack+0x49>
    113c:	8f e9       	ldi	r24, 0x9F	; 159
    113e:	9f e0       	ldi	r25, 0x0F	; 15
    1140:	01 97       	sbiw	r24, 0x01	; 1
    1142:	f1 f7       	brne	.-4      	; 0x1140 <__stack+0x41>
    1144:	00 c0       	rjmp	.+0      	; 0x1146 <__stack+0x47>
    1146:	00 00       	nop
    1148:	c0 9a       	sbi	0x18, 0	; 24
    114a:	80 e0       	ldi	r24, 0x00	; 0
    114c:	0e 94 3d 08 	call	0x107a	; 0x107a <display_wait>
    1150:	88 23       	and	r24, r24
    1152:	51 f0       	breq	.+20     	; 0x1168 <__stack+0x69>
    1154:	81 e0       	ldi	r24, 0x01	; 1
    1156:	0e 94 3d 08 	call	0x107a	; 0x107a <display_wait>
    115a:	88 23       	and	r24, r24
    115c:	11 f0       	breq	.+4      	; 0x1162 <__stack+0x63>
    115e:	82 e0       	ldi	r24, 0x02	; 2
    1160:	01 c0       	rjmp	.+2      	; 0x1164 <__stack+0x65>
    1162:	81 e0       	ldi	r24, 0x01	; 1
    1164:	80 93 e9 03 	sts	0x03E9, r24	; 0x8003e9 <display_type>
    1168:	80 91 e9 03 	lds	r24, 0x03E9	; 0x8003e9 <display_type>
    116c:	8f 3f       	cpi	r24, 0xFF	; 255
    116e:	11 f4       	brne	.+4      	; 0x1174 <__stack+0x75>
    1170:	10 92 e9 03 	sts	0x03E9, r1	; 0x8003e9 <display_type>
    1174:	80 91 e9 03 	lds	r24, 0x03E9	; 0x8003e9 <display_type>
    1178:	08 95       	ret

0000117a <pwm_init>:
    117a:	10 92 f3 03 	sts	0x03F3, r1	; 0x8003f3 <pwm_timer_sub+0x1>
    117e:	10 92 f2 03 	sts	0x03F2, r1	; 0x8003f2 <pwm_timer_sub>
    1182:	10 92 ef 03 	sts	0x03EF, r1	; 0x8003ef <pwm_timer_ms+0x1>
    1186:	10 92 ee 03 	sts	0x03EE, r1	; 0x8003ee <pwm_timer_ms>
    118a:	10 92 f4 03 	sts	0x03F4, r1	; 0x8003f4 <pwm_timer_sec>
    118e:	10 92 f5 03 	sts	0x03F5, r1	; 0x8003f5 <pwm_timer_sec+0x1>
    1192:	10 92 f6 03 	sts	0x03F6, r1	; 0x8003f6 <pwm_timer_sec+0x2>
    1196:	10 92 f7 03 	sts	0x03F7, r1	; 0x8003f7 <pwm_timer_sec+0x3>
    119a:	10 92 eb 03 	sts	0x03EB, r1	; 0x8003eb <pwm_channel_A+0x1>
    119e:	10 92 ea 03 	sts	0x03EA, r1	; 0x8003ea <pwm_channel_A>
    11a2:	10 92 ed 03 	sts	0x03ED, r1	; 0x8003ed <pwm_channel_B+0x1>
    11a6:	10 92 ec 03 	sts	0x03EC, r1	; 0x8003ec <pwm_channel_B>
    11aa:	8f ef       	ldi	r24, 0xFF	; 255
    11ac:	93 e0       	ldi	r25, 0x03	; 3
    11ae:	90 93 f1 03 	sts	0x03F1, r25	; 0x8003f1 <pwm_channel_C+0x1>
    11b2:	80 93 f0 03 	sts	0x03F0, r24	; 0x8003f0 <pwm_channel_C>
    11b6:	c5 98       	cbi	0x18, 5	; 24
    11b8:	c6 98       	cbi	0x18, 6	; 24
    11ba:	bd 9a       	sbi	0x17, 5	; 23
    11bc:	be 9a       	sbi	0x17, 6	; 23
    11be:	bf 9a       	sbi	0x17, 7	; 23
    11c0:	c7 9a       	sbi	0x18, 7	; 24
    11c2:	1d bc       	out	0x2d, r1	; 45
    11c4:	1c bc       	out	0x2c, r1	; 44
    11c6:	8a ea       	ldi	r24, 0xAA	; 170
    11c8:	8f bd       	out	0x2f, r24	; 47
    11ca:	82 e1       	ldi	r24, 0x12	; 18
    11cc:	8e bd       	out	0x2e, r24	; 46
    11ce:	80 e0       	ldi	r24, 0x00	; 0
    11d0:	94 e0       	ldi	r25, 0x04	; 4
    11d2:	97 bd       	out	0x27, r25	; 39
    11d4:	86 bd       	out	0x26, r24	; 38
    11d6:	87 b7       	in	r24, 0x37	; 55
    11d8:	84 60       	ori	r24, 0x04	; 4
    11da:	87 bf       	out	0x37, r24	; 55
    11dc:	08 95       	ret

000011de <__vector_14>:
    11de:	1f 92       	push	r1
    11e0:	0f 92       	push	r0
    11e2:	0f b6       	in	r0, 0x3f	; 63
    11e4:	0f 92       	push	r0
    11e6:	11 24       	eor	r1, r1
    11e8:	2f 93       	push	r18
    11ea:	3f 93       	push	r19
    11ec:	4f 93       	push	r20
    11ee:	8f 93       	push	r24
    11f0:	9f 93       	push	r25
    11f2:	af 93       	push	r26
    11f4:	bf 93       	push	r27
    11f6:	80 91 f2 03 	lds	r24, 0x03F2	; 0x8003f2 <pwm_timer_sub>
    11fa:	90 91 f3 03 	lds	r25, 0x03F3	; 0x8003f3 <pwm_timer_sub+0x1>
    11fe:	9c 01       	movw	r18, r24
    1200:	28 5e       	subi	r18, 0xE8	; 232
    1202:	3f 4f       	sbci	r19, 0xFF	; 255
    1204:	28 3e       	cpi	r18, 0xE8	; 232
    1206:	43 e0       	ldi	r20, 0x03	; 3
    1208:	34 07       	cpc	r19, r20
    120a:	28 f4       	brcc	.+10     	; 0x1216 <__vector_14+0x38>
    120c:	30 93 f3 03 	sts	0x03F3, r19	; 0x8003f3 <pwm_timer_sub+0x1>
    1210:	20 93 f2 03 	sts	0x03F2, r18	; 0x8003f2 <pwm_timer_sub>
    1214:	0f c0       	rjmp	.+30     	; 0x1234 <__vector_14+0x56>
    1216:	80 5d       	subi	r24, 0xD0	; 208
    1218:	93 40       	sbci	r25, 0x03	; 3
    121a:	90 93 f3 03 	sts	0x03F3, r25	; 0x8003f3 <pwm_timer_sub+0x1>
    121e:	80 93 f2 03 	sts	0x03F2, r24	; 0x8003f2 <pwm_timer_sub>
    1222:	80 91 ee 03 	lds	r24, 0x03EE	; 0x8003ee <pwm_timer_ms>
    1226:	90 91 ef 03 	lds	r25, 0x03EF	; 0x8003ef <pwm_timer_ms+0x1>
    122a:	01 96       	adiw	r24, 0x01	; 1
    122c:	90 93 ef 03 	sts	0x03EF, r25	; 0x8003ef <pwm_timer_ms+0x1>
    1230:	80 93 ee 03 	sts	0x03EE, r24	; 0x8003ee <pwm_timer_ms>
    1234:	80 91 ee 03 	lds	r24, 0x03EE	; 0x8003ee <pwm_timer_ms>
    1238:	90 91 ef 03 	lds	r25, 0x03EF	; 0x8003ef <pwm_timer_ms+0x1>
    123c:	9c 01       	movw	r18, r24
    123e:	2f 5f       	subi	r18, 0xFF	; 255
    1240:	3f 4f       	sbci	r19, 0xFF	; 255
    1242:	28 3e       	cpi	r18, 0xE8	; 232
    1244:	43 e0       	ldi	r20, 0x03	; 3
    1246:	34 07       	cpc	r19, r20
    1248:	28 f4       	brcc	.+10     	; 0x1254 <__vector_14+0x76>
    124a:	30 93 ef 03 	sts	0x03EF, r19	; 0x8003ef <pwm_timer_ms+0x1>
    124e:	20 93 ee 03 	sts	0x03EE, r18	; 0x8003ee <pwm_timer_ms>
    1252:	19 c0       	rjmp	.+50     	; 0x1286 <__vector_14+0xa8>
    1254:	87 5e       	subi	r24, 0xE7	; 231
    1256:	93 40       	sbci	r25, 0x03	; 3
    1258:	90 93 ef 03 	sts	0x03EF, r25	; 0x8003ef <pwm_timer_ms+0x1>
    125c:	80 93 ee 03 	sts	0x03EE, r24	; 0x8003ee <pwm_timer_ms>
    1260:	80 91 f4 03 	lds	r24, 0x03F4	; 0x8003f4 <pwm_timer_sec>
    1264:	90 91 f5 03 	lds	r25, 0x03F5	; 0x8003f5 <pwm_timer_sec+0x1>
    1268:	a0 91 f6 03 	lds	r26, 0x03F6	; 0x8003f6 <pwm_timer_sec+0x2>
    126c:	b0 91 f7 03 	lds	r27, 0x03F7	; 0x8003f7 <pwm_timer_sec+0x3>
    1270:	01 96       	adiw	r24, 0x01	; 1
    1272:	a1 1d       	adc	r26, r1
    1274:	b1 1d       	adc	r27, r1
    1276:	80 93 f4 03 	sts	0x03F4, r24	; 0x8003f4 <pwm_timer_sec>
    127a:	90 93 f5 03 	sts	0x03F5, r25	; 0x8003f5 <pwm_timer_sec+0x1>
    127e:	a0 93 f6 03 	sts	0x03F6, r26	; 0x8003f6 <pwm_timer_sec+0x2>
    1282:	b0 93 f7 03 	sts	0x03F7, r27	; 0x8003f7 <pwm_timer_sec+0x3>
    1286:	80 91 ea 03 	lds	r24, 0x03EA	; 0x8003ea <pwm_channel_A>
    128a:	90 91 eb 03 	lds	r25, 0x03EB	; 0x8003eb <pwm_channel_A+0x1>
    128e:	8f 3f       	cpi	r24, 0xFF	; 255
    1290:	23 e0       	ldi	r18, 0x03	; 3
    1292:	92 07       	cpc	r25, r18
    1294:	10 f0       	brcs	.+4      	; 0x129a <__vector_14+0xbc>
    1296:	80 e0       	ldi	r24, 0x00	; 0
    1298:	94 e0       	ldi	r25, 0x04	; 4
    129a:	9b bd       	out	0x2b, r25	; 43
    129c:	8a bd       	out	0x2a, r24	; 42
    129e:	80 91 ec 03 	lds	r24, 0x03EC	; 0x8003ec <pwm_channel_B>
    12a2:	90 91 ed 03 	lds	r25, 0x03ED	; 0x8003ed <pwm_channel_B+0x1>
    12a6:	8f 3f       	cpi	r24, 0xFF	; 255
    12a8:	43 e0       	ldi	r20, 0x03	; 3
    12aa:	94 07       	cpc	r25, r20
    12ac:	10 f0       	brcs	.+4      	; 0x12b2 <__vector_14+0xd4>
    12ae:	80 e0       	ldi	r24, 0x00	; 0
    12b0:	94 e0       	ldi	r25, 0x04	; 4
    12b2:	99 bd       	out	0x29, r25	; 41
    12b4:	88 bd       	out	0x28, r24	; 40
    12b6:	80 91 f0 03 	lds	r24, 0x03F0	; 0x8003f0 <pwm_channel_C>
    12ba:	90 91 f1 03 	lds	r25, 0x03F1	; 0x8003f1 <pwm_channel_C+0x1>
    12be:	8f 3f       	cpi	r24, 0xFF	; 255
    12c0:	23 e0       	ldi	r18, 0x03	; 3
    12c2:	92 07       	cpc	r25, r18
    12c4:	10 f0       	brcs	.+4      	; 0x12ca <__vector_14+0xec>
    12c6:	80 e0       	ldi	r24, 0x00	; 0
    12c8:	94 e0       	ldi	r25, 0x04	; 4
    12ca:	90 93 79 00 	sts	0x0079, r25	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
    12ce:	80 93 78 00 	sts	0x0078, r24	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
    12d2:	bf 91       	pop	r27
    12d4:	af 91       	pop	r26
    12d6:	9f 91       	pop	r25
    12d8:	8f 91       	pop	r24
    12da:	4f 91       	pop	r20
    12dc:	3f 91       	pop	r19
    12de:	2f 91       	pop	r18
    12e0:	0f 90       	pop	r0
    12e2:	0f be       	out	0x3f, r0	; 63
    12e4:	0f 90       	pop	r0
    12e6:	1f 90       	pop	r1
    12e8:	18 95       	reti

000012ea <delay>:
    12ea:	00 97       	sbiw	r24, 0x00	; 0
    12ec:	41 f0       	breq	.+16     	; 0x12fe <delay+0x14>
    12ee:	ef e9       	ldi	r30, 0x9F	; 159
    12f0:	ff e0       	ldi	r31, 0x0F	; 15
    12f2:	31 97       	sbiw	r30, 0x01	; 1
    12f4:	f1 f7       	brne	.-4      	; 0x12f2 <delay+0x8>
    12f6:	00 c0       	rjmp	.+0      	; 0x12f8 <delay+0xe>
    12f8:	00 00       	nop
    12fa:	01 97       	sbiw	r24, 0x01	; 1
    12fc:	f6 cf       	rjmp	.-20     	; 0x12ea <delay>
    12fe:	08 95       	ret

00001300 <spi_tx>:
    1300:	8f b9       	out	0x0f, r24	; 15
    1302:	90 91 33 04 	lds	r25, 0x0433	; 0x800433 <spi_tx_chk>
    1306:	89 27       	eor	r24, r25
    1308:	80 93 33 04 	sts	0x0433, r24	; 0x800433 <spi_tx_chk>
    130c:	08 95       	ret

0000130e <spi_restart_transmission>:
    130e:	10 92 34 04 	sts	0x0434, r1	; 0x800434 <spi_pos>
    1312:	80 93 15 04 	sts	0x0415, r24	; 0x800415 <spi_tx_size>
    1316:	91 e0       	ldi	r25, 0x01	; 1
    1318:	98 0f       	add	r25, r24
    131a:	90 93 17 04 	sts	0x0417, r25	; 0x800417 <spi_size>
    131e:	96 e9       	ldi	r25, 0x96	; 150
    1320:	90 93 33 04 	sts	0x0433, r25	; 0x800433 <spi_tx_chk>
    1324:	90 93 35 04 	sts	0x0435, r25	; 0x800435 <spi_rx_chk>
    1328:	f8 94       	cli
    132a:	b0 99       	sbic	0x16, 0	; 22
    132c:	03 c0       	rjmp	.+6      	; 0x1334 <spi_restart_transmission+0x26>
    132e:	78 94       	sei
    1330:	00 00       	nop
    1332:	fa cf       	rjmp	.-12     	; 0x1328 <spi_restart_transmission+0x1a>
    1334:	90 ec       	ldi	r25, 0xC0	; 192
    1336:	9d b9       	out	0x0d, r25	; 13
    1338:	0e 94 80 09 	call	0x1300	; 0x1300 <spi_tx>
    133c:	77 9a       	sbi	0x0e, 7	; 14
    133e:	78 94       	sei
    1340:	80 e0       	ldi	r24, 0x00	; 0
    1342:	08 95       	ret

00001344 <spi_init>:
    1344:	b8 98       	cbi	0x17, 0	; 23
    1346:	c0 98       	cbi	0x18, 0	; 24
    1348:	bb 9a       	sbi	0x17, 3	; 23
    134a:	c3 9a       	sbi	0x18, 3	; 24
    134c:	80 e0       	ldi	r24, 0x00	; 0
    134e:	0c 94 87 09 	jmp	0x130e	; 0x130e <spi_restart_transmission>

00001352 <__vector_17>:
    1352:	1f 92       	push	r1
    1354:	0f 92       	push	r0
    1356:	0f b6       	in	r0, 0x3f	; 63
    1358:	0f 92       	push	r0
    135a:	11 24       	eor	r1, r1
    135c:	0b b6       	in	r0, 0x3b	; 59
    135e:	0f 92       	push	r0
    1360:	2f 93       	push	r18
    1362:	3f 93       	push	r19
    1364:	4f 93       	push	r20
    1366:	5f 93       	push	r21
    1368:	6f 93       	push	r22
    136a:	7f 93       	push	r23
    136c:	8f 93       	push	r24
    136e:	9f 93       	push	r25
    1370:	af 93       	push	r26
    1372:	bf 93       	push	r27
    1374:	ef 93       	push	r30
    1376:	ff 93       	push	r31
    1378:	8f b1       	in	r24, 0x0f	; 15
    137a:	90 91 35 04 	lds	r25, 0x0435	; 0x800435 <spi_rx_chk>
    137e:	98 27       	eor	r25, r24
    1380:	90 93 35 04 	sts	0x0435, r25	; 0x800435 <spi_rx_chk>
    1384:	e0 91 34 04 	lds	r30, 0x0434	; 0x800434 <spi_pos>
    1388:	e1 11       	cpse	r30, r1
    138a:	16 c0       	rjmp	.+44     	; 0x13b8 <__vector_17+0x66>
    138c:	80 93 13 04 	sts	0x0413, r24	; 0x800413 <spi_rx_size>
    1390:	8c 31       	cpi	r24, 0x1C	; 28
    1392:	30 f0       	brcs	.+12     	; 0x13a0 <__vector_17+0x4e>
    1394:	10 92 15 04 	sts	0x0415, r1	; 0x800415 <spi_tx_size>
    1398:	10 92 13 04 	sts	0x0413, r1	; 0x800413 <spi_rx_size>
    139c:	81 e0       	ldi	r24, 0x01	; 1
    139e:	09 c0       	rjmp	.+18     	; 0x13b2 <__vector_17+0x60>
    13a0:	48 2f       	mov	r20, r24
    13a2:	50 e0       	ldi	r21, 0x00	; 0
    13a4:	20 91 17 04 	lds	r18, 0x0417	; 0x800417 <spi_size>
    13a8:	30 e0       	ldi	r19, 0x00	; 0
    13aa:	42 17       	cp	r20, r18
    13ac:	53 07       	cpc	r21, r19
    13ae:	fc f0       	brlt	.+62     	; 0x13ee <__vector_17+0x9c>
    13b0:	8f 5f       	subi	r24, 0xFF	; 255
    13b2:	80 93 17 04 	sts	0x0417, r24	; 0x800417 <spi_size>
    13b6:	1b c0       	rjmp	.+54     	; 0x13ee <__vector_17+0x9c>
    13b8:	2e 2f       	mov	r18, r30
    13ba:	30 e0       	ldi	r19, 0x00	; 0
    13bc:	40 91 13 04 	lds	r20, 0x0413	; 0x800413 <spi_rx_size>
    13c0:	50 e0       	ldi	r21, 0x00	; 0
    13c2:	42 17       	cp	r20, r18
    13c4:	53 07       	cpc	r21, r19
    13c6:	2c f0       	brlt	.+10     	; 0x13d2 <__vector_17+0x80>
    13c8:	d9 01       	movw	r26, r18
    13ca:	a9 5e       	subi	r26, 0xE9	; 233
    13cc:	bb 4f       	sbci	r27, 0xFB	; 251
    13ce:	8c 93       	st	X, r24
    13d0:	0e c0       	rjmp	.+28     	; 0x13ee <__vector_17+0x9c>
    13d2:	21 50       	subi	r18, 0x01	; 1
    13d4:	31 09       	sbc	r19, r1
    13d6:	42 17       	cp	r20, r18
    13d8:	53 07       	cpc	r21, r19
    13da:	49 f4       	brne	.+18     	; 0x13ee <__vector_17+0x9c>
    13dc:	99 23       	and	r25, r25
    13de:	39 f0       	breq	.+14     	; 0x13ee <__vector_17+0x9c>
    13e0:	80 91 14 04 	lds	r24, 0x0414	; 0x800414 <spi_err_cnt>
    13e4:	8f 5f       	subi	r24, 0xFF	; 255
    13e6:	80 93 14 04 	sts	0x0414, r24	; 0x800414 <spi_err_cnt>
    13ea:	10 92 13 04 	sts	0x0413, r1	; 0x800413 <spi_rx_size>
    13ee:	80 91 15 04 	lds	r24, 0x0415	; 0x800415 <spi_tx_size>
    13f2:	e8 17       	cp	r30, r24
    13f4:	28 f4       	brcc	.+10     	; 0x1400 <__vector_17+0xae>
    13f6:	f0 e0       	ldi	r31, 0x00	; 0
    13f8:	e8 50       	subi	r30, 0x08	; 8
    13fa:	fc 4f       	sbci	r31, 0xFC	; 252
    13fc:	80 81       	ld	r24, Z
    13fe:	0a c0       	rjmp	.+20     	; 0x1414 <__vector_17+0xc2>
    1400:	e8 13       	cpse	r30, r24
    1402:	03 c0       	rjmp	.+6      	; 0x140a <__vector_17+0xb8>
    1404:	80 91 33 04 	lds	r24, 0x0433	; 0x800433 <spi_tx_chk>
    1408:	05 c0       	rjmp	.+10     	; 0x1414 <__vector_17+0xc2>
    140a:	80 91 17 04 	lds	r24, 0x0417	; 0x800417 <spi_size>
    140e:	e8 17       	cp	r30, r24
    1410:	48 f4       	brcc	.+18     	; 0x1424 <__vector_17+0xd2>
    1412:	8f ef       	ldi	r24, 0xFF	; 255
    1414:	0e 94 80 09 	call	0x1300	; 0x1300 <spi_tx>
    1418:	80 91 34 04 	lds	r24, 0x0434	; 0x800434 <spi_pos>
    141c:	8f 5f       	subi	r24, 0xFF	; 255
    141e:	80 93 34 04 	sts	0x0434, r24	; 0x800434 <spi_pos>
    1422:	11 c0       	rjmp	.+34     	; 0x1446 <__vector_17+0xf4>
    1424:	b8 98       	cbi	0x17, 0	; 23
    1426:	c0 98       	cbi	0x18, 0	; 24
    1428:	1d b8       	out	0x0d, r1	; 13
    142a:	b8 98       	cbi	0x17, 0	; 23
    142c:	c0 98       	cbi	0x18, 0	; 24
    142e:	80 91 16 04 	lds	r24, 0x0416	; 0x800416 <spi_frame_cnt>
    1432:	8f 5f       	subi	r24, 0xFF	; 255
    1434:	80 93 16 04 	sts	0x0416, r24	; 0x800416 <spi_frame_cnt>
    1438:	78 94       	sei
    143a:	80 91 13 04 	lds	r24, 0x0413	; 0x800413 <spi_rx_size>
    143e:	0e 94 b5 0f 	call	0x1f6a	; 0x1f6a <spi_finished_callback>
    1442:	0e 94 87 09 	call	0x130e	; 0x130e <spi_restart_transmission>
    1446:	ff 91       	pop	r31
    1448:	ef 91       	pop	r30
    144a:	bf 91       	pop	r27
    144c:	af 91       	pop	r26
    144e:	9f 91       	pop	r25
    1450:	8f 91       	pop	r24
    1452:	7f 91       	pop	r23
    1454:	6f 91       	pop	r22
    1456:	5f 91       	pop	r21
    1458:	4f 91       	pop	r20
    145a:	3f 91       	pop	r19
    145c:	2f 91       	pop	r18
    145e:	0f 90       	pop	r0
    1460:	0b be       	out	0x3b, r0	; 59
    1462:	0f 90       	pop	r0
    1464:	0f be       	out	0x3f, r0	; 63
    1466:	0f 90       	pop	r0
    1468:	1f 90       	pop	r1
    146a:	18 95       	reti

0000146c <gfx_store_disp_tile>:
    146c:	cf 93       	push	r28
    146e:	df 93       	push	r29
    1470:	c8 2f       	mov	r28, r24
    1472:	d8 eb       	ldi	r29, 0xB8	; 184
    1474:	d6 0f       	add	r29, r22
    1476:	88 30       	cpi	r24, 0x08	; 8
    1478:	00 f5       	brcc	.+64     	; 0x14ba <gfx_store_disp_tile+0x4e>
    147a:	80 e0       	ldi	r24, 0x00	; 0
    147c:	0e 94 3d 08 	call	0x107a	; 0x107a <display_wait>
    1480:	6d 2f       	mov	r22, r29
    1482:	80 e0       	ldi	r24, 0x00	; 0
    1484:	0e 94 bc 07 	call	0xf78	; 0xf78 <display_write>
    1488:	80 e0       	ldi	r24, 0x00	; 0
    148a:	0e 94 3d 08 	call	0x107a	; 0x107a <display_wait>
    148e:	6c 2f       	mov	r22, r28
    1490:	66 0f       	add	r22, r22
    1492:	66 0f       	add	r22, r22
    1494:	66 0f       	add	r22, r22
    1496:	60 5c       	subi	r22, 0xC0	; 192
    1498:	80 e0       	ldi	r24, 0x00	; 0
    149a:	0e 94 bc 07 	call	0xf78	; 0xf78 <display_write>
    149e:	ca e3       	ldi	r28, 0x3A	; 58
    14a0:	d4 e0       	ldi	r29, 0x04	; 4
    14a2:	82 e0       	ldi	r24, 0x02	; 2
    14a4:	0e 94 3d 08 	call	0x107a	; 0x107a <display_wait>
    14a8:	69 91       	ld	r22, Y+
    14aa:	82 e0       	ldi	r24, 0x02	; 2
    14ac:	0e 94 bc 07 	call	0xf78	; 0xf78 <display_write>
    14b0:	84 e0       	ldi	r24, 0x04	; 4
    14b2:	c2 34       	cpi	r28, 0x42	; 66
    14b4:	d8 07       	cpc	r29, r24
    14b6:	a9 f7       	brne	.-22     	; 0x14a2 <gfx_store_disp_tile+0x36>
    14b8:	20 c0       	rjmp	.+64     	; 0x14fa <gfx_store_disp_tile+0x8e>
    14ba:	c8 50       	subi	r28, 0x08	; 8
    14bc:	81 e0       	ldi	r24, 0x01	; 1
    14be:	0e 94 3d 08 	call	0x107a	; 0x107a <display_wait>
    14c2:	6d 2f       	mov	r22, r29
    14c4:	81 e0       	ldi	r24, 0x01	; 1
    14c6:	0e 94 bc 07 	call	0xf78	; 0xf78 <display_write>
    14ca:	81 e0       	ldi	r24, 0x01	; 1
    14cc:	0e 94 3d 08 	call	0x107a	; 0x107a <display_wait>
    14d0:	cc 0f       	add	r28, r28
    14d2:	cc 0f       	add	r28, r28
    14d4:	cc 0f       	add	r28, r28
    14d6:	60 e4       	ldi	r22, 0x40	; 64
    14d8:	6c 0f       	add	r22, r28
    14da:	81 e0       	ldi	r24, 0x01	; 1
    14dc:	0e 94 bc 07 	call	0xf78	; 0xf78 <display_write>
    14e0:	ca e3       	ldi	r28, 0x3A	; 58
    14e2:	d4 e0       	ldi	r29, 0x04	; 4
    14e4:	83 e0       	ldi	r24, 0x03	; 3
    14e6:	0e 94 3d 08 	call	0x107a	; 0x107a <display_wait>
    14ea:	69 91       	ld	r22, Y+
    14ec:	83 e0       	ldi	r24, 0x03	; 3
    14ee:	0e 94 bc 07 	call	0xf78	; 0xf78 <display_write>
    14f2:	84 e0       	ldi	r24, 0x04	; 4
    14f4:	c2 34       	cpi	r28, 0x42	; 66
    14f6:	d8 07       	cpc	r29, r24
    14f8:	a9 f7       	brne	.-22     	; 0x14e4 <gfx_store_disp_tile+0x78>
    14fa:	df 91       	pop	r29
    14fc:	cf 91       	pop	r28
    14fe:	08 95       	ret

00001500 <gfx_get_x>:
    1500:	80 91 39 04 	lds	r24, 0x0439	; 0x800439 <gfx_x>
    1504:	08 95       	ret

00001506 <gfx_get_y>:
    1506:	80 91 42 04 	lds	r24, 0x0442	; 0x800442 <gfx_y>
    150a:	08 95       	ret

0000150c <gfx_draw_mode>:
    150c:	80 93 36 04 	sts	0x0436, r24	; 0x800436 <gfx_dm>
    1510:	08 95       	ret

00001512 <gfx_move>:
    1512:	cf 93       	push	r28
    1514:	df 93       	push	r29
    1516:	d8 2f       	mov	r29, r24
    1518:	c6 2f       	mov	r28, r22
    151a:	80 93 39 04 	sts	0x0439, r24	; 0x800439 <gfx_x>
    151e:	60 93 42 04 	sts	0x0442, r22	; 0x800442 <gfx_y>
    1522:	80 e0       	ldi	r24, 0x00	; 0
    1524:	0e 94 3d 08 	call	0x107a	; 0x107a <display_wait>
    1528:	81 e0       	ldi	r24, 0x01	; 1
    152a:	0e 94 3d 08 	call	0x107a	; 0x107a <display_wait>
    152e:	c6 95       	lsr	r28
    1530:	c6 95       	lsr	r28
    1532:	c6 95       	lsr	r28
    1534:	c8 54       	subi	r28, 0x48	; 72
    1536:	6c 2f       	mov	r22, r28
    1538:	80 e0       	ldi	r24, 0x00	; 0
    153a:	0e 94 bc 07 	call	0xf78	; 0xf78 <display_write>
    153e:	6c 2f       	mov	r22, r28
    1540:	81 e0       	ldi	r24, 0x01	; 1
    1542:	0e 94 bc 07 	call	0xf78	; 0xf78 <display_write>
    1546:	80 e0       	ldi	r24, 0x00	; 0
    1548:	0e 94 3d 08 	call	0x107a	; 0x107a <display_wait>
    154c:	81 e0       	ldi	r24, 0x01	; 1
    154e:	0e 94 3d 08 	call	0x107a	; 0x107a <display_wait>
    1552:	60 e4       	ldi	r22, 0x40	; 64
    1554:	d1 34       	cpi	r29, 0x41	; 65
    1556:	28 f0       	brcs	.+10     	; 0x1562 <gfx_move+0x50>
    1558:	80 e0       	ldi	r24, 0x00	; 0
    155a:	0e 94 bc 07 	call	0xf78	; 0xf78 <display_write>
    155e:	6d 2f       	mov	r22, r29
    1560:	05 c0       	rjmp	.+10     	; 0x156c <gfx_move+0x5a>
    1562:	6d 0f       	add	r22, r29
    1564:	80 e0       	ldi	r24, 0x00	; 0
    1566:	0e 94 bc 07 	call	0xf78	; 0xf78 <display_write>
    156a:	60 e4       	ldi	r22, 0x40	; 64
    156c:	81 e0       	ldi	r24, 0x01	; 1
    156e:	df 91       	pop	r29
    1570:	cf 91       	pop	r28
    1572:	0c 94 bc 07 	jmp	0xf78	; 0xf78 <display_write>

00001576 <gfx_fill>:
    1576:	1f 93       	push	r17
    1578:	cf 93       	push	r28
    157a:	df 93       	push	r29
    157c:	18 2f       	mov	r17, r24
    157e:	c8 eb       	ldi	r28, 0xB8	; 184
    1580:	80 e0       	ldi	r24, 0x00	; 0
    1582:	0e 94 3d 08 	call	0x107a	; 0x107a <display_wait>
    1586:	81 e0       	ldi	r24, 0x01	; 1
    1588:	0e 94 3d 08 	call	0x107a	; 0x107a <display_wait>
    158c:	6c 2f       	mov	r22, r28
    158e:	80 e0       	ldi	r24, 0x00	; 0
    1590:	0e 94 bc 07 	call	0xf78	; 0xf78 <display_write>
    1594:	6c 2f       	mov	r22, r28
    1596:	81 e0       	ldi	r24, 0x01	; 1
    1598:	0e 94 bc 07 	call	0xf78	; 0xf78 <display_write>
    159c:	d0 e4       	ldi	r29, 0x40	; 64
    159e:	82 e0       	ldi	r24, 0x02	; 2
    15a0:	0e 94 3d 08 	call	0x107a	; 0x107a <display_wait>
    15a4:	83 e0       	ldi	r24, 0x03	; 3
    15a6:	0e 94 3d 08 	call	0x107a	; 0x107a <display_wait>
    15aa:	61 2f       	mov	r22, r17
    15ac:	82 e0       	ldi	r24, 0x02	; 2
    15ae:	0e 94 bc 07 	call	0xf78	; 0xf78 <display_write>
    15b2:	61 2f       	mov	r22, r17
    15b4:	83 e0       	ldi	r24, 0x03	; 3
    15b6:	0e 94 bc 07 	call	0xf78	; 0xf78 <display_write>
    15ba:	d1 50       	subi	r29, 0x01	; 1
    15bc:	81 f7       	brne	.-32     	; 0x159e <gfx_fill+0x28>
    15be:	cf 5f       	subi	r28, 0xFF	; 255
    15c0:	c0 3c       	cpi	r28, 0xC0	; 192
    15c2:	f1 f6       	brne	.-68     	; 0x1580 <gfx_fill+0xa>
    15c4:	80 e0       	ldi	r24, 0x00	; 0
    15c6:	0e 94 3d 08 	call	0x107a	; 0x107a <display_wait>
    15ca:	81 e0       	ldi	r24, 0x01	; 1
    15cc:	0e 94 3d 08 	call	0x107a	; 0x107a <display_wait>
    15d0:	68 eb       	ldi	r22, 0xB8	; 184
    15d2:	80 e0       	ldi	r24, 0x00	; 0
    15d4:	0e 94 bc 07 	call	0xf78	; 0xf78 <display_write>
    15d8:	68 eb       	ldi	r22, 0xB8	; 184
    15da:	81 e0       	ldi	r24, 0x01	; 1
    15dc:	df 91       	pop	r29
    15de:	cf 91       	pop	r28
    15e0:	1f 91       	pop	r17
    15e2:	0c 94 bc 07 	jmp	0xf78	; 0xf78 <display_write>

000015e6 <gfx_display_write2>:
    15e6:	0f 93       	push	r16
    15e8:	1f 93       	push	r17
    15ea:	cf 93       	push	r28
    15ec:	df 93       	push	r29
    15ee:	d8 2f       	mov	r29, r24
    15f0:	c6 2f       	mov	r28, r22
    15f2:	80 91 39 04 	lds	r24, 0x0439	; 0x800439 <gfx_x>
    15f6:	87 fd       	sbrc	r24, 7
    15f8:	37 c0       	rjmp	.+110    	; 0x1668 <gfx_display_write2+0x82>
    15fa:	11 e0       	ldi	r17, 0x01	; 1
    15fc:	80 34       	cpi	r24, 0x40	; 64
    15fe:	08 f4       	brcc	.+2      	; 0x1602 <gfx_display_write2+0x1c>
    1600:	10 e0       	ldi	r17, 0x00	; 0
    1602:	81 2f       	mov	r24, r17
    1604:	0e 94 3d 08 	call	0x107a	; 0x107a <display_wait>
    1608:	02 e0       	ldi	r16, 0x02	; 2
    160a:	01 0f       	add	r16, r17
    160c:	80 2f       	mov	r24, r16
    160e:	0e 94 fe 07 	call	0xffc	; 0xffc <display_read>
    1612:	80 2f       	mov	r24, r16
    1614:	0e 94 fe 07 	call	0xffc	; 0xffc <display_read>
    1618:	90 91 36 04 	lds	r25, 0x0436	; 0x800436 <gfx_dm>
    161c:	92 ff       	sbrs	r25, 2
    161e:	02 c0       	rjmp	.+4      	; 0x1624 <gfx_display_write2+0x3e>
    1620:	d0 95       	com	r29
    1622:	9b 7f       	andi	r25, 0xFB	; 251
    1624:	dc 23       	and	r29, r28
    1626:	91 11       	cpse	r25, r1
    1628:	02 c0       	rjmp	.+4      	; 0x162e <gfx_display_write2+0x48>
    162a:	c8 2f       	mov	r28, r24
    162c:	04 c0       	rjmp	.+8      	; 0x1636 <gfx_display_write2+0x50>
    162e:	91 30       	cpi	r25, 0x01	; 1
    1630:	21 f4       	brne	.+8      	; 0x163a <gfx_display_write2+0x54>
    1632:	c0 95       	com	r28
    1634:	c8 23       	and	r28, r24
    1636:	cd 2b       	or	r28, r29
    1638:	02 c0       	rjmp	.+4      	; 0x163e <gfx_display_write2+0x58>
    163a:	c8 2f       	mov	r28, r24
    163c:	cd 27       	eor	r28, r29
    163e:	81 2f       	mov	r24, r17
    1640:	0e 94 3d 08 	call	0x107a	; 0x107a <display_wait>
    1644:	60 91 39 04 	lds	r22, 0x0439	; 0x800439 <gfx_x>
    1648:	60 64       	ori	r22, 0x40	; 64
    164a:	81 2f       	mov	r24, r17
    164c:	0e 94 bc 07 	call	0xf78	; 0xf78 <display_write>
    1650:	81 2f       	mov	r24, r17
    1652:	0e 94 3d 08 	call	0x107a	; 0x107a <display_wait>
    1656:	6c 2f       	mov	r22, r28
    1658:	80 2f       	mov	r24, r16
    165a:	0e 94 bc 07 	call	0xf78	; 0xf78 <display_write>
    165e:	80 91 39 04 	lds	r24, 0x0439	; 0x800439 <gfx_x>
    1662:	8f 5f       	subi	r24, 0xFF	; 255
    1664:	80 93 39 04 	sts	0x0439, r24	; 0x800439 <gfx_x>
    1668:	df 91       	pop	r29
    166a:	cf 91       	pop	r28
    166c:	1f 91       	pop	r17
    166e:	0f 91       	pop	r16
    1670:	08 95       	ret

00001672 <gfx_char_width>:
    1672:	90 ee       	ldi	r25, 0xE0	; 224
    1674:	98 0f       	add	r25, r24
    1676:	90 36       	cpi	r25, 0x60	; 96
    1678:	08 f0       	brcs	.+2      	; 0x167c <gfx_char_width+0xa>
    167a:	80 e8       	ldi	r24, 0x80	; 128
    167c:	80 52       	subi	r24, 0x20	; 32
    167e:	96 e0       	ldi	r25, 0x06	; 6
    1680:	89 9f       	mul	r24, r25
    1682:	f0 01       	movw	r30, r0
    1684:	11 24       	eor	r1, r1
    1686:	ea 56       	subi	r30, 0x6A	; 106
    1688:	fe 4f       	sbci	r31, 0xFE	; 254
    168a:	90 81       	ld	r25, Z
    168c:	80 91 38 04 	lds	r24, 0x0438	; 0x800438 <gfx_proportional>
    1690:	81 11       	cpse	r24, r1
    1692:	01 c0       	rjmp	.+2      	; 0x1696 <gfx_char_width+0x24>
    1694:	9f e1       	ldi	r25, 0x1F	; 31
    1696:	25 e0       	ldi	r18, 0x05	; 5
    1698:	80 e0       	ldi	r24, 0x00	; 0
    169a:	90 fd       	sbrc	r25, 0
    169c:	8f 5f       	subi	r24, 0xFF	; 255
    169e:	96 95       	lsr	r25
    16a0:	21 50       	subi	r18, 0x01	; 1
    16a2:	d9 f7       	brne	.-10     	; 0x169a <gfx_char_width+0x28>
    16a4:	08 95       	ret

000016a6 <gfx_print_char_base>:
    16a6:	7f 92       	push	r7
    16a8:	8f 92       	push	r8
    16aa:	9f 92       	push	r9
    16ac:	af 92       	push	r10
    16ae:	bf 92       	push	r11
    16b0:	cf 92       	push	r12
    16b2:	df 92       	push	r13
    16b4:	ef 92       	push	r14
    16b6:	ff 92       	push	r15
    16b8:	0f 93       	push	r16
    16ba:	1f 93       	push	r17
    16bc:	cf 93       	push	r28
    16be:	df 93       	push	r29
    16c0:	c6 2f       	mov	r28, r22
    16c2:	90 ee       	ldi	r25, 0xE0	; 224
    16c4:	98 0f       	add	r25, r24
    16c6:	90 36       	cpi	r25, 0x60	; 96
    16c8:	08 f0       	brcs	.+2      	; 0x16cc <gfx_print_char_base+0x26>
    16ca:	80 e8       	ldi	r24, 0x80	; 128
    16cc:	80 52       	subi	r24, 0x20	; 32
    16ce:	26 e0       	ldi	r18, 0x06	; 6
    16d0:	82 9f       	mul	r24, r18
    16d2:	c0 01       	movw	r24, r0
    16d4:	11 24       	eor	r1, r1
    16d6:	fc 01       	movw	r30, r24
    16d8:	e9 56       	subi	r30, 0x69	; 105
    16da:	fe 4f       	sbci	r31, 0xFE	; 254
    16dc:	7f 01       	movw	r14, r30
    16de:	fc 01       	movw	r30, r24
    16e0:	ea 56       	subi	r30, 0x6A	; 106
    16e2:	fe 4f       	sbci	r31, 0xFE	; 254
    16e4:	90 80       	ld	r9, Z
    16e6:	80 91 38 04 	lds	r24, 0x0438	; 0x800438 <gfx_proportional>
    16ea:	81 11       	cpse	r24, r1
    16ec:	02 c0       	rjmp	.+4      	; 0x16f2 <gfx_print_char_base+0x4c>
    16ee:	9f e1       	ldi	r25, 0x1F	; 31
    16f0:	99 2e       	mov	r9, r25
    16f2:	ac 2e       	mov	r10, r28
    16f4:	0c 2e       	mov	r0, r28
    16f6:	00 0c       	add	r0, r0
    16f8:	bb 08       	sbc	r11, r11
    16fa:	6f ef       	ldi	r22, 0xFF	; 255
    16fc:	70 e0       	ldi	r23, 0x00	; 0
    16fe:	6b 01       	movw	r12, r22
    1700:	0c 2e       	mov	r0, r28
    1702:	01 c0       	rjmp	.+2      	; 0x1706 <gfx_print_char_base+0x60>
    1704:	cc 0c       	add	r12, r12
    1706:	0a 94       	dec	r0
    1708:	ea f7       	brpl	.-6      	; 0x1704 <gfx_print_char_base+0x5e>
    170a:	8c 2c       	mov	r8, r12
    170c:	00 27       	eor	r16, r16
    170e:	11 27       	eor	r17, r17
    1710:	0a 19       	sub	r16, r10
    1712:	1b 09       	sbc	r17, r11
    1714:	00 2e       	mov	r0, r16
    1716:	02 c0       	rjmp	.+4      	; 0x171c <gfx_print_char_base+0x76>
    1718:	75 95       	asr	r23
    171a:	67 95       	ror	r22
    171c:	0a 94       	dec	r0
    171e:	e2 f7       	brpl	.-8      	; 0x1718 <gfx_print_char_base+0x72>
    1720:	d6 2f       	mov	r29, r22
    1722:	85 e0       	ldi	r24, 0x05	; 5
    1724:	78 2e       	mov	r7, r24
    1726:	90 fe       	sbrs	r9, 0
    1728:	15 c0       	rjmp	.+42     	; 0x1754 <gfx_print_char_base+0xae>
    172a:	f7 01       	movw	r30, r14
    172c:	80 81       	ld	r24, Z
    172e:	c7 fd       	sbrc	r28, 7
    1730:	07 c0       	rjmp	.+14     	; 0x1740 <gfx_print_char_base+0x9a>
    1732:	68 2d       	mov	r22, r8
    1734:	0a 2c       	mov	r0, r10
    1736:	01 c0       	rjmp	.+2      	; 0x173a <gfx_print_char_base+0x94>
    1738:	88 0f       	add	r24, r24
    173a:	0a 94       	dec	r0
    173c:	ea f7       	brpl	.-6      	; 0x1738 <gfx_print_char_base+0x92>
    173e:	08 c0       	rjmp	.+16     	; 0x1750 <gfx_print_char_base+0xaa>
    1740:	90 e0       	ldi	r25, 0x00	; 0
    1742:	00 2e       	mov	r0, r16
    1744:	02 c0       	rjmp	.+4      	; 0x174a <gfx_print_char_base+0xa4>
    1746:	95 95       	asr	r25
    1748:	87 95       	ror	r24
    174a:	0a 94       	dec	r0
    174c:	e2 f7       	brpl	.-8      	; 0x1746 <gfx_print_char_base+0xa0>
    174e:	6d 2f       	mov	r22, r29
    1750:	0e 94 f3 0a 	call	0x15e6	; 0x15e6 <gfx_display_write2>
    1754:	96 94       	lsr	r9
    1756:	ff ef       	ldi	r31, 0xFF	; 255
    1758:	ef 1a       	sub	r14, r31
    175a:	ff 0a       	sbc	r15, r31
    175c:	7a 94       	dec	r7
    175e:	71 10       	cpse	r7, r1
    1760:	e2 cf       	rjmp	.-60     	; 0x1726 <gfx_print_char_base+0x80>
    1762:	c7 fd       	sbrc	r28, 7
    1764:	02 c0       	rjmp	.+4      	; 0x176a <gfx_print_char_base+0xc4>
    1766:	6c 2d       	mov	r22, r12
    1768:	07 c0       	rjmp	.+14     	; 0x1778 <gfx_print_char_base+0xd2>
    176a:	6f ef       	ldi	r22, 0xFF	; 255
    176c:	70 e0       	ldi	r23, 0x00	; 0
    176e:	02 c0       	rjmp	.+4      	; 0x1774 <gfx_print_char_base+0xce>
    1770:	75 95       	asr	r23
    1772:	67 95       	ror	r22
    1774:	0a 95       	dec	r16
    1776:	e2 f7       	brpl	.-8      	; 0x1770 <gfx_print_char_base+0xca>
    1778:	80 e0       	ldi	r24, 0x00	; 0
    177a:	df 91       	pop	r29
    177c:	cf 91       	pop	r28
    177e:	1f 91       	pop	r17
    1780:	0f 91       	pop	r16
    1782:	ff 90       	pop	r15
    1784:	ef 90       	pop	r14
    1786:	df 90       	pop	r13
    1788:	cf 90       	pop	r12
    178a:	bf 90       	pop	r11
    178c:	af 90       	pop	r10
    178e:	9f 90       	pop	r9
    1790:	8f 90       	pop	r8
    1792:	7f 90       	pop	r7
    1794:	0c 94 f3 0a 	jmp	0x15e6	; 0x15e6 <gfx_display_write2>

00001798 <gfx_print_char>:
    1798:	1f 93       	push	r17
    179a:	cf 93       	push	r28
    179c:	df 93       	push	r29
    179e:	d8 2f       	mov	r29, r24
    17a0:	10 91 39 04 	lds	r17, 0x0439	; 0x800439 <gfx_x>
    17a4:	c0 91 42 04 	lds	r28, 0x0442	; 0x800442 <gfx_y>
    17a8:	c7 70       	andi	r28, 0x07	; 7
    17aa:	6c 2f       	mov	r22, r28
    17ac:	0e 94 53 0b 	call	0x16a6	; 0x16a6 <gfx_print_char_base>
    17b0:	cc 23       	and	r28, r28
    17b2:	a9 f0       	breq	.+42     	; 0x17de <gfx_print_char+0x46>
    17b4:	60 91 42 04 	lds	r22, 0x0442	; 0x800442 <gfx_y>
    17b8:	68 5f       	subi	r22, 0xF8	; 248
    17ba:	81 2f       	mov	r24, r17
    17bc:	0e 94 89 0a 	call	0x1512	; 0x1512 <gfx_move>
    17c0:	68 ef       	ldi	r22, 0xF8	; 248
    17c2:	6c 0f       	add	r22, r28
    17c4:	8d 2f       	mov	r24, r29
    17c6:	0e 94 53 0b 	call	0x16a6	; 0x16a6 <gfx_print_char_base>
    17ca:	60 91 42 04 	lds	r22, 0x0442	; 0x800442 <gfx_y>
    17ce:	68 50       	subi	r22, 0x08	; 8
    17d0:	80 91 39 04 	lds	r24, 0x0439	; 0x800439 <gfx_x>
    17d4:	df 91       	pop	r29
    17d6:	cf 91       	pop	r28
    17d8:	1f 91       	pop	r17
    17da:	0c 94 89 0a 	jmp	0x1512	; 0x1512 <gfx_move>
    17de:	df 91       	pop	r29
    17e0:	cf 91       	pop	r28
    17e2:	1f 91       	pop	r17
    17e4:	08 95       	ret

000017e6 <gfx_print_text>:
    17e6:	cf 93       	push	r28
    17e8:	df 93       	push	r29
    17ea:	ec 01       	movw	r28, r24
    17ec:	89 91       	ld	r24, Y+
    17ee:	88 23       	and	r24, r24
    17f0:	19 f0       	breq	.+6      	; 0x17f8 <gfx_print_text+0x12>
    17f2:	0e 94 cc 0b 	call	0x1798	; 0x1798 <gfx_print_char>
    17f6:	fa cf       	rjmp	.-12     	; 0x17ec <gfx_print_text+0x6>
    17f8:	df 91       	pop	r29
    17fa:	cf 91       	pop	r28
    17fc:	08 95       	ret

000017fe <gfx_text_width>:
    17fe:	0f 93       	push	r16
    1800:	1f 93       	push	r17
    1802:	cf 93       	push	r28
    1804:	8c 01       	movw	r16, r24
    1806:	c0 e0       	ldi	r28, 0x00	; 0
    1808:	f8 01       	movw	r30, r16
    180a:	81 91       	ld	r24, Z+
    180c:	8f 01       	movw	r16, r30
    180e:	88 23       	and	r24, r24
    1810:	31 f0       	breq	.+12     	; 0x181e <gfx_text_width+0x20>
    1812:	0e 94 39 0b 	call	0x1672	; 0x1672 <gfx_char_width>
    1816:	8c 0f       	add	r24, r28
    1818:	c1 e0       	ldi	r28, 0x01	; 1
    181a:	c8 0f       	add	r28, r24
    181c:	f5 cf       	rjmp	.-22     	; 0x1808 <gfx_text_width+0xa>
    181e:	8c 2f       	mov	r24, r28
    1820:	cf 91       	pop	r28
    1822:	1f 91       	pop	r17
    1824:	0f 91       	pop	r16
    1826:	08 95       	ret

00001828 <gfx_print_text_P>:
    1828:	cf 93       	push	r28
    182a:	df 93       	push	r29
    182c:	ec 01       	movw	r28, r24
    182e:	ce 01       	movw	r24, r28
    1830:	fe 01       	movw	r30, r28
    1832:	24 91       	lpm	r18, Z
    1834:	22 23       	and	r18, r18
    1836:	31 f0       	breq	.+12     	; 0x1844 <gfx_print_text_P+0x1c>
    1838:	21 96       	adiw	r28, 0x01	; 1
    183a:	fc 01       	movw	r30, r24
    183c:	84 91       	lpm	r24, Z
    183e:	0e 94 cc 0b 	call	0x1798	; 0x1798 <gfx_print_char>
    1842:	f5 cf       	rjmp	.-22     	; 0x182e <gfx_print_text_P+0x6>
    1844:	df 91       	pop	r29
    1846:	cf 91       	pop	r28
    1848:	08 95       	ret

0000184a <gfx_text_width_P>:
    184a:	0f 93       	push	r16
    184c:	1f 93       	push	r17
    184e:	cf 93       	push	r28
    1850:	8c 01       	movw	r16, r24
    1852:	c0 e0       	ldi	r28, 0x00	; 0
    1854:	c8 01       	movw	r24, r16
    1856:	f8 01       	movw	r30, r16
    1858:	24 91       	lpm	r18, Z
    185a:	22 23       	and	r18, r18
    185c:	51 f0       	breq	.+20     	; 0x1872 <gfx_text_width_P+0x28>
    185e:	0f 5f       	subi	r16, 0xFF	; 255
    1860:	1f 4f       	sbci	r17, 0xFF	; 255
    1862:	fc 01       	movw	r30, r24
    1864:	84 91       	lpm	r24, Z
    1866:	0e 94 39 0b 	call	0x1672	; 0x1672 <gfx_char_width>
    186a:	8c 0f       	add	r24, r28
    186c:	c1 e0       	ldi	r28, 0x01	; 1
    186e:	c8 0f       	add	r28, r24
    1870:	f1 cf       	rjmp	.-30     	; 0x1854 <gfx_text_width_P+0xa>
    1872:	8c 2f       	mov	r24, r28
    1874:	cf 91       	pop	r28
    1876:	1f 91       	pop	r17
    1878:	0f 91       	pop	r16
    187a:	08 95       	ret

0000187c <gfx_init>:
    187c:	80 e0       	ldi	r24, 0x00	; 0
    187e:	0e 94 3d 08 	call	0x107a	; 0x107a <display_wait>
    1882:	6f e3       	ldi	r22, 0x3F	; 63
    1884:	80 e0       	ldi	r24, 0x00	; 0
    1886:	0e 94 bc 07 	call	0xf78	; 0xf78 <display_write>
    188a:	80 e0       	ldi	r24, 0x00	; 0
    188c:	0e 94 3d 08 	call	0x107a	; 0x107a <display_wait>
    1890:	60 ec       	ldi	r22, 0xC0	; 192
    1892:	80 e0       	ldi	r24, 0x00	; 0
    1894:	0e 94 bc 07 	call	0xf78	; 0xf78 <display_write>
    1898:	80 e0       	ldi	r24, 0x00	; 0
    189a:	0e 94 3d 08 	call	0x107a	; 0x107a <display_wait>
    189e:	60 e4       	ldi	r22, 0x40	; 64
    18a0:	80 e0       	ldi	r24, 0x00	; 0
    18a2:	0e 94 bc 07 	call	0xf78	; 0xf78 <display_write>
    18a6:	80 e0       	ldi	r24, 0x00	; 0
    18a8:	0e 94 3d 08 	call	0x107a	; 0x107a <display_wait>
    18ac:	68 eb       	ldi	r22, 0xB8	; 184
    18ae:	80 e0       	ldi	r24, 0x00	; 0
    18b0:	0e 94 bc 07 	call	0xf78	; 0xf78 <display_write>
    18b4:	81 e0       	ldi	r24, 0x01	; 1
    18b6:	0e 94 3d 08 	call	0x107a	; 0x107a <display_wait>
    18ba:	6f e3       	ldi	r22, 0x3F	; 63
    18bc:	81 e0       	ldi	r24, 0x01	; 1
    18be:	0e 94 bc 07 	call	0xf78	; 0xf78 <display_write>
    18c2:	81 e0       	ldi	r24, 0x01	; 1
    18c4:	0e 94 3d 08 	call	0x107a	; 0x107a <display_wait>
    18c8:	60 ec       	ldi	r22, 0xC0	; 192
    18ca:	81 e0       	ldi	r24, 0x01	; 1
    18cc:	0e 94 bc 07 	call	0xf78	; 0xf78 <display_write>
    18d0:	81 e0       	ldi	r24, 0x01	; 1
    18d2:	0e 94 3d 08 	call	0x107a	; 0x107a <display_wait>
    18d6:	60 e4       	ldi	r22, 0x40	; 64
    18d8:	81 e0       	ldi	r24, 0x01	; 1
    18da:	0e 94 bc 07 	call	0xf78	; 0xf78 <display_write>
    18de:	81 e0       	ldi	r24, 0x01	; 1
    18e0:	0e 94 3d 08 	call	0x107a	; 0x107a <display_wait>
    18e4:	68 eb       	ldi	r22, 0xB8	; 184
    18e6:	81 e0       	ldi	r24, 0x01	; 1
    18e8:	0e 94 bc 07 	call	0xf78	; 0xf78 <display_write>
    18ec:	80 e0       	ldi	r24, 0x00	; 0
    18ee:	0e 94 bb 0a 	call	0x1576	; 0x1576 <gfx_fill>
    18f2:	81 e0       	ldi	r24, 0x01	; 1
    18f4:	80 93 36 04 	sts	0x0436, r24	; 0x800436 <gfx_dm>
    18f8:	08 95       	ret

000018fa <gfx_set_proportional>:
    18fa:	80 93 38 04 	sts	0x0438, r24	; 0x800438 <gfx_proportional>
    18fe:	08 95       	ret

00001900 <gfx_get_proportional>:
    1900:	80 91 38 04 	lds	r24, 0x0438	; 0x800438 <gfx_proportional>
    1904:	08 95       	ret

00001906 <gfx_hline>:
    1906:	cf 93       	push	r28
    1908:	df 93       	push	r29
    190a:	90 91 42 04 	lds	r25, 0x0442	; 0x800442 <gfx_y>
    190e:	97 70       	andi	r25, 0x07	; 7
    1910:	c1 e0       	ldi	r28, 0x01	; 1
    1912:	01 c0       	rjmp	.+2      	; 0x1916 <gfx_hline+0x10>
    1914:	cc 0f       	add	r28, r28
    1916:	9a 95       	dec	r25
    1918:	ea f7       	brpl	.-6      	; 0x1914 <gfx_hline+0xe>
    191a:	d8 2f       	mov	r29, r24
    191c:	dd 23       	and	r29, r29
    191e:	31 f0       	breq	.+12     	; 0x192c <gfx_hline+0x26>
    1920:	6c 2f       	mov	r22, r28
    1922:	8c 2f       	mov	r24, r28
    1924:	0e 94 f3 0a 	call	0x15e6	; 0x15e6 <gfx_display_write2>
    1928:	d1 50       	subi	r29, 0x01	; 1
    192a:	f8 cf       	rjmp	.-16     	; 0x191c <gfx_hline+0x16>
    192c:	df 91       	pop	r29
    192e:	cf 91       	pop	r28
    1930:	08 95       	ret

00001932 <gfx_box>:
    1932:	af 92       	push	r10
    1934:	bf 92       	push	r11
    1936:	cf 92       	push	r12
    1938:	df 92       	push	r13
    193a:	ef 92       	push	r14
    193c:	ff 92       	push	r15
    193e:	0f 93       	push	r16
    1940:	1f 93       	push	r17
    1942:	cf 93       	push	r28
    1944:	df 93       	push	r29
    1946:	b8 2e       	mov	r11, r24
    1948:	c6 2f       	mov	r28, r22
    194a:	e0 90 39 04 	lds	r14, 0x0439	; 0x800439 <gfx_x>
    194e:	10 91 42 04 	lds	r17, 0x0442	; 0x800442 <gfx_y>
    1952:	81 2f       	mov	r24, r17
    1954:	87 70       	andi	r24, 0x07	; 7
    1956:	df ef       	ldi	r29, 0xFF	; 255
    1958:	01 c0       	rjmp	.+2      	; 0x195c <gfx_box+0x2a>
    195a:	dd 0f       	add	r29, r29
    195c:	8a 95       	dec	r24
    195e:	ea f7       	brpl	.-6      	; 0x195a <gfx_box+0x28>
    1960:	88 e0       	ldi	r24, 0x08	; 8
    1962:	a8 2e       	mov	r10, r24
    1964:	cc 24       	eor	r12, r12
    1966:	ca 94       	dec	r12
    1968:	d1 2c       	mov	r13, r1
    196a:	cc 23       	and	r28, r28
    196c:	21 f1       	breq	.+72     	; 0x19b6 <gfx_box+0x84>
    196e:	81 2f       	mov	r24, r17
    1970:	87 70       	andi	r24, 0x07	; 7
    1972:	0a 2d       	mov	r16, r10
    1974:	08 1b       	sub	r16, r24
    1976:	c0 17       	cp	r28, r16
    1978:	48 f4       	brcc	.+18     	; 0x198c <gfx_box+0x5a>
    197a:	80 2f       	mov	r24, r16
    197c:	8c 1b       	sub	r24, r28
    197e:	96 01       	movw	r18, r12
    1980:	02 c0       	rjmp	.+4      	; 0x1986 <gfx_box+0x54>
    1982:	35 95       	asr	r19
    1984:	27 95       	ror	r18
    1986:	8a 95       	dec	r24
    1988:	e2 f7       	brpl	.-8      	; 0x1982 <gfx_box+0x50>
    198a:	d2 23       	and	r29, r18
    198c:	fb 2c       	mov	r15, r11
    198e:	ff 20       	and	r15, r15
    1990:	31 f0       	breq	.+12     	; 0x199e <gfx_box+0x6c>
    1992:	6d 2f       	mov	r22, r29
    1994:	8d 2f       	mov	r24, r29
    1996:	0e 94 f3 0a 	call	0x15e6	; 0x15e6 <gfx_display_write2>
    199a:	fa 94       	dec	r15
    199c:	f8 cf       	rjmp	.-16     	; 0x198e <gfx_box+0x5c>
    199e:	8c 2f       	mov	r24, r28
    19a0:	0c 17       	cp	r16, r28
    19a2:	08 f4       	brcc	.+2      	; 0x19a6 <gfx_box+0x74>
    19a4:	80 2f       	mov	r24, r16
    19a6:	c8 1b       	sub	r28, r24
    19a8:	18 0f       	add	r17, r24
    19aa:	61 2f       	mov	r22, r17
    19ac:	8e 2d       	mov	r24, r14
    19ae:	0e 94 89 0a 	call	0x1512	; 0x1512 <gfx_move>
    19b2:	df ef       	ldi	r29, 0xFF	; 255
    19b4:	da cf       	rjmp	.-76     	; 0x196a <gfx_box+0x38>
    19b6:	df 91       	pop	r29
    19b8:	cf 91       	pop	r28
    19ba:	1f 91       	pop	r17
    19bc:	0f 91       	pop	r16
    19be:	ff 90       	pop	r15
    19c0:	ef 90       	pop	r14
    19c2:	df 90       	pop	r13
    19c4:	cf 90       	pop	r12
    19c6:	bf 90       	pop	r11
    19c8:	af 90       	pop	r10
    19ca:	08 95       	ret

000019cc <gfx_vline>:
    19cc:	68 2f       	mov	r22, r24
    19ce:	81 e0       	ldi	r24, 0x01	; 1
    19d0:	0c 94 99 0c 	jmp	0x1932	; 0x1932 <gfx_box>

000019d4 <gfx_draw_xbm>:
    19d4:	2f 92       	push	r2
    19d6:	3f 92       	push	r3
    19d8:	4f 92       	push	r4
    19da:	5f 92       	push	r5
    19dc:	6f 92       	push	r6
    19de:	7f 92       	push	r7
    19e0:	8f 92       	push	r8
    19e2:	9f 92       	push	r9
    19e4:	af 92       	push	r10
    19e6:	bf 92       	push	r11
    19e8:	cf 92       	push	r12
    19ea:	df 92       	push	r13
    19ec:	ef 92       	push	r14
    19ee:	ff 92       	push	r15
    19f0:	0f 93       	push	r16
    19f2:	1f 93       	push	r17
    19f4:	cf 93       	push	r28
    19f6:	df 93       	push	r29
    19f8:	48 2e       	mov	r4, r24
    19fa:	d6 2f       	mov	r29, r22
    19fc:	5a 01       	movw	r10, r20
    19fe:	30 90 39 04 	lds	r3, 0x0439	; 0x800439 <gfx_x>
    1a02:	80 90 42 04 	lds	r8, 0x0442	; 0x800442 <gfx_y>
    1a06:	88 2d       	mov	r24, r8
    1a08:	87 70       	andi	r24, 0x07	; 7
    1a0a:	9f ef       	ldi	r25, 0xFF	; 255
    1a0c:	99 2e       	mov	r9, r25
    1a0e:	01 c0       	rjmp	.+2      	; 0x1a12 <gfx_draw_xbm+0x3e>
    1a10:	99 0c       	add	r9, r9
    1a12:	8a 95       	dec	r24
    1a14:	ea f7       	brpl	.-6      	; 0x1a10 <gfx_draw_xbm+0x3c>
    1a16:	24 2d       	mov	r18, r4
    1a18:	30 e0       	ldi	r19, 0x00	; 0
    1a1a:	c9 01       	movw	r24, r18
    1a1c:	01 97       	sbiw	r24, 0x01	; 1
    1a1e:	97 fd       	sbrc	r25, 7
    1a20:	07 96       	adiw	r24, 0x07	; 7
    1a22:	23 e0       	ldi	r18, 0x03	; 3
    1a24:	95 95       	asr	r25
    1a26:	87 95       	ror	r24
    1a28:	2a 95       	dec	r18
    1a2a:	e1 f7       	brne	.-8      	; 0x1a24 <gfx_draw_xbm+0x50>
    1a2c:	c1 e0       	ldi	r28, 0x01	; 1
    1a2e:	c8 0f       	add	r28, r24
    1a30:	ec 2e       	mov	r14, r28
    1a32:	f1 2c       	mov	r15, r1
    1a34:	67 01       	movw	r12, r14
    1a36:	33 e0       	ldi	r19, 0x03	; 3
    1a38:	cc 0c       	add	r12, r12
    1a3a:	dd 1c       	adc	r13, r13
    1a3c:	3a 95       	dec	r19
    1a3e:	e1 f7       	brne	.-8      	; 0x1a38 <gfx_draw_xbm+0x64>
    1a40:	51 2c       	mov	r5, r1
    1a42:	48 e0       	ldi	r20, 0x08	; 8
    1a44:	24 2e       	mov	r2, r20
    1a46:	dd 23       	and	r29, r29
    1a48:	09 f4       	brne	.+2      	; 0x1a4c <gfx_draw_xbm+0x78>
    1a4a:	56 c0       	rjmp	.+172    	; 0x1af8 <gfx_draw_xbm+0x124>
    1a4c:	88 2d       	mov	r24, r8
    1a4e:	87 70       	andi	r24, 0x07	; 7
    1a50:	72 2c       	mov	r7, r2
    1a52:	78 1a       	sub	r7, r24
    1a54:	d7 15       	cp	r29, r7
    1a56:	50 f4       	brcc	.+20     	; 0x1a6c <gfx_draw_xbm+0x98>
    1a58:	87 2d       	mov	r24, r7
    1a5a:	8d 1b       	sub	r24, r29
    1a5c:	2f ef       	ldi	r18, 0xFF	; 255
    1a5e:	30 e0       	ldi	r19, 0x00	; 0
    1a60:	02 c0       	rjmp	.+4      	; 0x1a66 <gfx_draw_xbm+0x92>
    1a62:	35 95       	asr	r19
    1a64:	27 95       	ror	r18
    1a66:	8a 95       	dec	r24
    1a68:	e2 f7       	brpl	.-8      	; 0x1a62 <gfx_draw_xbm+0x8e>
    1a6a:	92 22       	and	r9, r18
    1a6c:	05 2d       	mov	r16, r5
    1a6e:	07 0d       	add	r16, r7
    1a70:	c0 9f       	mul	r28, r16
    1a72:	80 01       	movw	r16, r0
    1a74:	11 24       	eor	r1, r1
    1a76:	61 2c       	mov	r6, r1
    1a78:	64 14       	cp	r6, r4
    1a7a:	81 f1       	breq	.+96     	; 0x1adc <gfx_draw_xbm+0x108>
    1a7c:	86 2d       	mov	r24, r6
    1a7e:	87 70       	andi	r24, 0x07	; 7
    1a80:	59 f0       	breq	.+22     	; 0x1a98 <gfx_draw_xbm+0xc4>
    1a82:	e8 2f       	mov	r30, r24
    1a84:	f0 e0       	ldi	r31, 0x00	; 0
    1a86:	e6 5c       	subi	r30, 0xC6	; 198
    1a88:	fb 4f       	sbci	r31, 0xFB	; 251
    1a8a:	80 81       	ld	r24, Z
    1a8c:	69 2d       	mov	r22, r9
    1a8e:	89 21       	and	r24, r9
    1a90:	0e 94 f3 0a 	call	0x15e6	; 0x15e6 <gfx_display_write2>
    1a94:	63 94       	inc	r6
    1a96:	f0 cf       	rjmp	.-32     	; 0x1a78 <gfx_draw_xbm+0xa4>
    1a98:	96 2d       	mov	r25, r6
    1a9a:	96 95       	lsr	r25
    1a9c:	96 95       	lsr	r25
    1a9e:	96 95       	lsr	r25
    1aa0:	f8 01       	movw	r30, r16
    1aa2:	e9 0f       	add	r30, r25
    1aa4:	f1 1d       	adc	r31, r1
    1aa6:	ec 19       	sub	r30, r12
    1aa8:	fd 09       	sbc	r31, r13
    1aaa:	ea 0d       	add	r30, r10
    1aac:	fb 1d       	adc	r31, r11
    1aae:	28 e0       	ldi	r18, 0x08	; 8
    1ab0:	30 e0       	ldi	r19, 0x00	; 0
    1ab2:	40 81       	ld	r20, Z
    1ab4:	aa e3       	ldi	r26, 0x3A	; 58
    1ab6:	b4 e0       	ldi	r27, 0x04	; 4
    1ab8:	9c 91       	ld	r25, X
    1aba:	96 95       	lsr	r25
    1abc:	40 fd       	sbrc	r20, 0
    1abe:	90 68       	ori	r25, 0x80	; 128
    1ac0:	9c 93       	st	X, r25
    1ac2:	46 95       	lsr	r20
    1ac4:	11 96       	adiw	r26, 0x01	; 1
    1ac6:	62 e4       	ldi	r22, 0x42	; 66
    1ac8:	74 e0       	ldi	r23, 0x04	; 4
    1aca:	6a 17       	cp	r22, r26
    1acc:	7b 07       	cpc	r23, r27
    1ace:	a1 f7       	brne	.-24     	; 0x1ab8 <gfx_draw_xbm+0xe4>
    1ad0:	ee 0d       	add	r30, r14
    1ad2:	ff 1d       	adc	r31, r15
    1ad4:	21 50       	subi	r18, 0x01	; 1
    1ad6:	31 09       	sbc	r19, r1
    1ad8:	61 f7       	brne	.-40     	; 0x1ab2 <gfx_draw_xbm+0xde>
    1ada:	d3 cf       	rjmp	.-90     	; 0x1a82 <gfx_draw_xbm+0xae>
    1adc:	8d 2f       	mov	r24, r29
    1ade:	7d 16       	cp	r7, r29
    1ae0:	08 f4       	brcc	.+2      	; 0x1ae4 <gfx_draw_xbm+0x110>
    1ae2:	87 2d       	mov	r24, r7
    1ae4:	d8 1b       	sub	r29, r24
    1ae6:	88 0e       	add	r8, r24
    1ae8:	58 0e       	add	r5, r24
    1aea:	68 2d       	mov	r22, r8
    1aec:	83 2d       	mov	r24, r3
    1aee:	0e 94 89 0a 	call	0x1512	; 0x1512 <gfx_move>
    1af2:	99 24       	eor	r9, r9
    1af4:	9a 94       	dec	r9
    1af6:	a7 cf       	rjmp	.-178    	; 0x1a46 <gfx_draw_xbm+0x72>
    1af8:	df 91       	pop	r29
    1afa:	cf 91       	pop	r28
    1afc:	1f 91       	pop	r17
    1afe:	0f 91       	pop	r16
    1b00:	ff 90       	pop	r15
    1b02:	ef 90       	pop	r14
    1b04:	df 90       	pop	r13
    1b06:	cf 90       	pop	r12
    1b08:	bf 90       	pop	r11
    1b0a:	af 90       	pop	r10
    1b0c:	9f 90       	pop	r9
    1b0e:	8f 90       	pop	r8
    1b10:	7f 90       	pop	r7
    1b12:	6f 90       	pop	r6
    1b14:	5f 90       	pop	r5
    1b16:	4f 90       	pop	r4
    1b18:	3f 90       	pop	r3
    1b1a:	2f 90       	pop	r2
    1b1c:	08 95       	ret

00001b1e <gfx_draw_xbm_P>:
    1b1e:	2f 92       	push	r2
    1b20:	3f 92       	push	r3
    1b22:	4f 92       	push	r4
    1b24:	5f 92       	push	r5
    1b26:	6f 92       	push	r6
    1b28:	7f 92       	push	r7
    1b2a:	8f 92       	push	r8
    1b2c:	9f 92       	push	r9
    1b2e:	af 92       	push	r10
    1b30:	bf 92       	push	r11
    1b32:	cf 92       	push	r12
    1b34:	df 92       	push	r13
    1b36:	ef 92       	push	r14
    1b38:	ff 92       	push	r15
    1b3a:	0f 93       	push	r16
    1b3c:	1f 93       	push	r17
    1b3e:	cf 93       	push	r28
    1b40:	df 93       	push	r29
    1b42:	48 2e       	mov	r4, r24
    1b44:	d6 2f       	mov	r29, r22
    1b46:	4a 01       	movw	r8, r20
    1b48:	30 90 39 04 	lds	r3, 0x0439	; 0x800439 <gfx_x>
    1b4c:	00 91 42 04 	lds	r16, 0x0442	; 0x800442 <gfx_y>
    1b50:	80 2f       	mov	r24, r16
    1b52:	87 70       	andi	r24, 0x07	; 7
    1b54:	1f ef       	ldi	r17, 0xFF	; 255
    1b56:	01 c0       	rjmp	.+2      	; 0x1b5a <gfx_draw_xbm_P+0x3c>
    1b58:	11 0f       	add	r17, r17
    1b5a:	8a 95       	dec	r24
    1b5c:	ea f7       	brpl	.-6      	; 0x1b58 <gfx_draw_xbm_P+0x3a>
    1b5e:	24 2d       	mov	r18, r4
    1b60:	30 e0       	ldi	r19, 0x00	; 0
    1b62:	c9 01       	movw	r24, r18
    1b64:	01 97       	sbiw	r24, 0x01	; 1
    1b66:	97 fd       	sbrc	r25, 7
    1b68:	07 96       	adiw	r24, 0x07	; 7
    1b6a:	23 e0       	ldi	r18, 0x03	; 3
    1b6c:	95 95       	asr	r25
    1b6e:	87 95       	ror	r24
    1b70:	2a 95       	dec	r18
    1b72:	e1 f7       	brne	.-8      	; 0x1b6c <gfx_draw_xbm_P+0x4e>
    1b74:	c1 e0       	ldi	r28, 0x01	; 1
    1b76:	c8 0f       	add	r28, r24
    1b78:	cc 2e       	mov	r12, r28
    1b7a:	d1 2c       	mov	r13, r1
    1b7c:	56 01       	movw	r10, r12
    1b7e:	33 e0       	ldi	r19, 0x03	; 3
    1b80:	aa 0c       	add	r10, r10
    1b82:	bb 1c       	adc	r11, r11
    1b84:	3a 95       	dec	r19
    1b86:	e1 f7       	brne	.-8      	; 0x1b80 <gfx_draw_xbm_P+0x62>
    1b88:	51 2c       	mov	r5, r1
    1b8a:	48 e0       	ldi	r20, 0x08	; 8
    1b8c:	24 2e       	mov	r2, r20
    1b8e:	dd 23       	and	r29, r29
    1b90:	09 f4       	brne	.+2      	; 0x1b94 <gfx_draw_xbm_P+0x76>
    1b92:	55 c0       	rjmp	.+170    	; 0x1c3e <gfx_draw_xbm_P+0x120>
    1b94:	80 2f       	mov	r24, r16
    1b96:	87 70       	andi	r24, 0x07	; 7
    1b98:	72 2c       	mov	r7, r2
    1b9a:	78 1a       	sub	r7, r24
    1b9c:	d7 15       	cp	r29, r7
    1b9e:	50 f4       	brcc	.+20     	; 0x1bb4 <gfx_draw_xbm_P+0x96>
    1ba0:	87 2d       	mov	r24, r7
    1ba2:	8d 1b       	sub	r24, r29
    1ba4:	2f ef       	ldi	r18, 0xFF	; 255
    1ba6:	30 e0       	ldi	r19, 0x00	; 0
    1ba8:	02 c0       	rjmp	.+4      	; 0x1bae <gfx_draw_xbm_P+0x90>
    1baa:	35 95       	asr	r19
    1bac:	27 95       	ror	r18
    1bae:	8a 95       	dec	r24
    1bb0:	e2 f7       	brpl	.-8      	; 0x1baa <gfx_draw_xbm_P+0x8c>
    1bb2:	12 23       	and	r17, r18
    1bb4:	e5 2c       	mov	r14, r5
    1bb6:	e7 0c       	add	r14, r7
    1bb8:	ce 9d       	mul	r28, r14
    1bba:	70 01       	movw	r14, r0
    1bbc:	11 24       	eor	r1, r1
    1bbe:	61 2c       	mov	r6, r1
    1bc0:	64 14       	cp	r6, r4
    1bc2:	81 f1       	breq	.+96     	; 0x1c24 <gfx_draw_xbm_P+0x106>
    1bc4:	86 2d       	mov	r24, r6
    1bc6:	87 70       	andi	r24, 0x07	; 7
    1bc8:	59 f0       	breq	.+22     	; 0x1be0 <gfx_draw_xbm_P+0xc2>
    1bca:	e8 2f       	mov	r30, r24
    1bcc:	f0 e0       	ldi	r31, 0x00	; 0
    1bce:	e6 5c       	subi	r30, 0xC6	; 198
    1bd0:	fb 4f       	sbci	r31, 0xFB	; 251
    1bd2:	80 81       	ld	r24, Z
    1bd4:	61 2f       	mov	r22, r17
    1bd6:	81 23       	and	r24, r17
    1bd8:	0e 94 f3 0a 	call	0x15e6	; 0x15e6 <gfx_display_write2>
    1bdc:	63 94       	inc	r6
    1bde:	f0 cf       	rjmp	.-32     	; 0x1bc0 <gfx_draw_xbm_P+0xa2>
    1be0:	96 2d       	mov	r25, r6
    1be2:	96 95       	lsr	r25
    1be4:	96 95       	lsr	r25
    1be6:	96 95       	lsr	r25
    1be8:	f7 01       	movw	r30, r14
    1bea:	e9 0f       	add	r30, r25
    1bec:	f1 1d       	adc	r31, r1
    1bee:	ea 19       	sub	r30, r10
    1bf0:	fb 09       	sbc	r31, r11
    1bf2:	e8 0d       	add	r30, r8
    1bf4:	f9 1d       	adc	r31, r9
    1bf6:	28 e0       	ldi	r18, 0x08	; 8
    1bf8:	30 e0       	ldi	r19, 0x00	; 0
    1bfa:	44 91       	lpm	r20, Z
    1bfc:	aa e3       	ldi	r26, 0x3A	; 58
    1bfe:	b4 e0       	ldi	r27, 0x04	; 4
    1c00:	9c 91       	ld	r25, X
    1c02:	96 95       	lsr	r25
    1c04:	40 fd       	sbrc	r20, 0
    1c06:	90 68       	ori	r25, 0x80	; 128
    1c08:	9c 93       	st	X, r25
    1c0a:	46 95       	lsr	r20
    1c0c:	11 96       	adiw	r26, 0x01	; 1
    1c0e:	62 e4       	ldi	r22, 0x42	; 66
    1c10:	74 e0       	ldi	r23, 0x04	; 4
    1c12:	6a 17       	cp	r22, r26
    1c14:	7b 07       	cpc	r23, r27
    1c16:	a1 f7       	brne	.-24     	; 0x1c00 <gfx_draw_xbm_P+0xe2>
    1c18:	ec 0d       	add	r30, r12
    1c1a:	fd 1d       	adc	r31, r13
    1c1c:	21 50       	subi	r18, 0x01	; 1
    1c1e:	31 09       	sbc	r19, r1
    1c20:	61 f7       	brne	.-40     	; 0x1bfa <gfx_draw_xbm_P+0xdc>
    1c22:	d3 cf       	rjmp	.-90     	; 0x1bca <gfx_draw_xbm_P+0xac>
    1c24:	8d 2f       	mov	r24, r29
    1c26:	7d 16       	cp	r7, r29
    1c28:	08 f4       	brcc	.+2      	; 0x1c2c <gfx_draw_xbm_P+0x10e>
    1c2a:	87 2d       	mov	r24, r7
    1c2c:	d8 1b       	sub	r29, r24
    1c2e:	08 0f       	add	r16, r24
    1c30:	58 0e       	add	r5, r24
    1c32:	60 2f       	mov	r22, r16
    1c34:	83 2d       	mov	r24, r3
    1c36:	0e 94 89 0a 	call	0x1512	; 0x1512 <gfx_move>
    1c3a:	1f ef       	ldi	r17, 0xFF	; 255
    1c3c:	a8 cf       	rjmp	.-176    	; 0x1b8e <gfx_draw_xbm_P+0x70>
    1c3e:	df 91       	pop	r29
    1c40:	cf 91       	pop	r28
    1c42:	1f 91       	pop	r17
    1c44:	0f 91       	pop	r16
    1c46:	ff 90       	pop	r15
    1c48:	ef 90       	pop	r14
    1c4a:	df 90       	pop	r13
    1c4c:	cf 90       	pop	r12
    1c4e:	bf 90       	pop	r11
    1c50:	af 90       	pop	r10
    1c52:	9f 90       	pop	r9
    1c54:	8f 90       	pop	r8
    1c56:	7f 90       	pop	r7
    1c58:	6f 90       	pop	r6
    1c5a:	5f 90       	pop	r5
    1c5c:	4f 90       	pop	r4
    1c5e:	3f 90       	pop	r3
    1c60:	2f 90       	pop	r2
    1c62:	08 95       	ret

00001c64 <gfx_pixel>:
    1c64:	90 91 42 04 	lds	r25, 0x0442	; 0x800442 <gfx_y>
    1c68:	97 70       	andi	r25, 0x07	; 7
    1c6a:	21 e0       	ldi	r18, 0x01	; 1
    1c6c:	30 e0       	ldi	r19, 0x00	; 0
    1c6e:	01 c0       	rjmp	.+2      	; 0x1c72 <gfx_pixel+0xe>
    1c70:	22 0f       	add	r18, r18
    1c72:	9a 95       	dec	r25
    1c74:	ea f7       	brpl	.-6      	; 0x1c70 <gfx_pixel+0xc>
    1c76:	88 23       	and	r24, r24
    1c78:	11 f0       	breq	.+4      	; 0x1c7e <gfx_pixel+0x1a>
    1c7a:	62 2f       	mov	r22, r18
    1c7c:	01 c0       	rjmp	.+2      	; 0x1c80 <gfx_pixel+0x1c>
    1c7e:	60 e0       	ldi	r22, 0x00	; 0
    1c80:	82 2f       	mov	r24, r18
    1c82:	0c 94 f3 0a 	jmp	0x15e6	; 0x15e6 <gfx_display_write2>

00001c86 <gfx_lineTo>:
    1c86:	bf 92       	push	r11
    1c88:	cf 92       	push	r12
    1c8a:	df 92       	push	r13
    1c8c:	ef 92       	push	r14
    1c8e:	ff 92       	push	r15
    1c90:	0f 93       	push	r16
    1c92:	1f 93       	push	r17
    1c94:	cf 93       	push	r28
    1c96:	df 93       	push	r29
    1c98:	18 2f       	mov	r17, r24
    1c9a:	06 2f       	mov	r16, r22
    1c9c:	d0 91 39 04 	lds	r29, 0x0439	; 0x800439 <gfx_x>
    1ca0:	80 91 42 04 	lds	r24, 0x0442	; 0x800442 <gfx_y>
    1ca4:	d1 13       	cpse	r29, r17
    1ca6:	0f c0       	rjmp	.+30     	; 0x1cc6 <gfx_lineTo+0x40>
    1ca8:	86 17       	cp	r24, r22
    1caa:	20 f4       	brcc	.+8      	; 0x1cb4 <gfx_lineTo+0x2e>
    1cac:	96 2f       	mov	r25, r22
    1cae:	98 1b       	sub	r25, r24
    1cb0:	89 2f       	mov	r24, r25
    1cb2:	06 c0       	rjmp	.+12     	; 0x1cc0 <gfx_lineTo+0x3a>
    1cb4:	c8 2f       	mov	r28, r24
    1cb6:	c6 1b       	sub	r28, r22
    1cb8:	81 2f       	mov	r24, r17
    1cba:	0e 94 89 0a 	call	0x1512	; 0x1512 <gfx_move>
    1cbe:	8c 2f       	mov	r24, r28
    1cc0:	0e 94 e6 0c 	call	0x19cc	; 0x19cc <gfx_vline>
    1cc4:	5a c0       	rjmp	.+180    	; 0x1d7a <gfx_lineTo+0xf4>
    1cc6:	f8 2e       	mov	r15, r24
    1cc8:	68 13       	cpse	r22, r24
    1cca:	0d c0       	rjmp	.+26     	; 0x1ce6 <gfx_lineTo+0x60>
    1ccc:	d1 17       	cp	r29, r17
    1cce:	18 f4       	brcc	.+6      	; 0x1cd6 <gfx_lineTo+0x50>
    1cd0:	81 2f       	mov	r24, r17
    1cd2:	8d 1b       	sub	r24, r29
    1cd4:	05 c0       	rjmp	.+10     	; 0x1ce0 <gfx_lineTo+0x5a>
    1cd6:	d1 1b       	sub	r29, r17
    1cd8:	81 2f       	mov	r24, r17
    1cda:	0e 94 89 0a 	call	0x1512	; 0x1512 <gfx_move>
    1cde:	8d 2f       	mov	r24, r29
    1ce0:	0e 94 83 0c 	call	0x1906	; 0x1906 <gfx_hline>
    1ce4:	4a c0       	rjmp	.+148    	; 0x1d7a <gfx_lineTo+0xf4>
    1ce6:	1d 17       	cp	r17, r29
    1ce8:	28 f4       	brcc	.+10     	; 0x1cf4 <gfx_lineTo+0x6e>
    1cea:	dd 2e       	mov	r13, r29
    1cec:	d1 1a       	sub	r13, r17
    1cee:	cc 24       	eor	r12, r12
    1cf0:	ca 94       	dec	r12
    1cf2:	09 c0       	rjmp	.+18     	; 0x1d06 <gfx_lineTo+0x80>
    1cf4:	d1 17       	cp	r29, r17
    1cf6:	28 f4       	brcc	.+10     	; 0x1d02 <gfx_lineTo+0x7c>
    1cf8:	d1 2e       	mov	r13, r17
    1cfa:	dd 1a       	sub	r13, r29
    1cfc:	cc 24       	eor	r12, r12
    1cfe:	c3 94       	inc	r12
    1d00:	02 c0       	rjmp	.+4      	; 0x1d06 <gfx_lineTo+0x80>
    1d02:	c1 2c       	mov	r12, r1
    1d04:	d1 2c       	mov	r13, r1
    1d06:	08 17       	cp	r16, r24
    1d08:	28 f4       	brcc	.+10     	; 0x1d14 <gfx_lineTo+0x8e>
    1d0a:	c8 2f       	mov	r28, r24
    1d0c:	c0 1b       	sub	r28, r16
    1d0e:	bb 24       	eor	r11, r11
    1d10:	ba 94       	dec	r11
    1d12:	09 c0       	rjmp	.+18     	; 0x1d26 <gfx_lineTo+0xa0>
    1d14:	80 17       	cp	r24, r16
    1d16:	28 f4       	brcc	.+10     	; 0x1d22 <gfx_lineTo+0x9c>
    1d18:	c0 2f       	mov	r28, r16
    1d1a:	c8 1b       	sub	r28, r24
    1d1c:	bb 24       	eor	r11, r11
    1d1e:	b3 94       	inc	r11
    1d20:	02 c0       	rjmp	.+4      	; 0x1d26 <gfx_lineTo+0xa0>
    1d22:	b1 2c       	mov	r11, r1
    1d24:	c0 e0       	ldi	r28, 0x00	; 0
    1d26:	81 e0       	ldi	r24, 0x01	; 1
    1d28:	0e 94 32 0e 	call	0x1c64	; 0x1c64 <gfx_pixel>
    1d2c:	cd 15       	cp	r28, r13
    1d2e:	98 f4       	brcc	.+38     	; 0x1d56 <gfx_lineTo+0xd0>
    1d30:	ed 2c       	mov	r14, r13
    1d32:	e6 94       	lsr	r14
    1d34:	e1 94       	neg	r14
    1d36:	ec 0e       	add	r14, r28
    1d38:	dc 0d       	add	r29, r12
    1d3a:	1e 14       	cp	r1, r14
    1d3c:	14 f4       	brge	.+4      	; 0x1d42 <gfx_lineTo+0xbc>
    1d3e:	ed 18       	sub	r14, r13
    1d40:	fb 0c       	add	r15, r11
    1d42:	6f 2d       	mov	r22, r15
    1d44:	8d 2f       	mov	r24, r29
    1d46:	0e 94 89 0a 	call	0x1512	; 0x1512 <gfx_move>
    1d4a:	81 e0       	ldi	r24, 0x01	; 1
    1d4c:	0e 94 32 0e 	call	0x1c64	; 0x1c64 <gfx_pixel>
    1d50:	1d 13       	cpse	r17, r29
    1d52:	f1 cf       	rjmp	.-30     	; 0x1d36 <gfx_lineTo+0xb0>
    1d54:	12 c0       	rjmp	.+36     	; 0x1d7a <gfx_lineTo+0xf4>
    1d56:	ec 2e       	mov	r14, r28
    1d58:	e6 94       	lsr	r14
    1d5a:	e1 94       	neg	r14
    1d5c:	ed 0c       	add	r14, r13
    1d5e:	fb 0c       	add	r15, r11
    1d60:	1e 14       	cp	r1, r14
    1d62:	14 f4       	brge	.+4      	; 0x1d68 <gfx_lineTo+0xe2>
    1d64:	ec 1a       	sub	r14, r28
    1d66:	dc 0d       	add	r29, r12
    1d68:	6f 2d       	mov	r22, r15
    1d6a:	8d 2f       	mov	r24, r29
    1d6c:	0e 94 89 0a 	call	0x1512	; 0x1512 <gfx_move>
    1d70:	81 e0       	ldi	r24, 0x01	; 1
    1d72:	0e 94 32 0e 	call	0x1c64	; 0x1c64 <gfx_pixel>
    1d76:	0f 11       	cpse	r16, r15
    1d78:	f1 cf       	rjmp	.-30     	; 0x1d5c <gfx_lineTo+0xd6>
    1d7a:	60 2f       	mov	r22, r16
    1d7c:	81 2f       	mov	r24, r17
    1d7e:	df 91       	pop	r29
    1d80:	cf 91       	pop	r28
    1d82:	1f 91       	pop	r17
    1d84:	0f 91       	pop	r16
    1d86:	ff 90       	pop	r15
    1d88:	ef 90       	pop	r14
    1d8a:	df 90       	pop	r13
    1d8c:	cf 90       	pop	r12
    1d8e:	bf 90       	pop	r11
    1d90:	0c 94 89 0a 	jmp	0x1512	; 0x1512 <gfx_move>

00001d94 <gfx_term_clear>:
    1d94:	80 e0       	ldi	r24, 0x00	; 0
    1d96:	0e 94 bb 0a 	call	0x1576	; 0x1576 <gfx_fill>
    1d9a:	10 92 37 04 	sts	0x0437, r1	; 0x800437 <gfx_term_row>
    1d9e:	10 92 43 04 	sts	0x0443, r1	; 0x800443 <gfx_term_col>
    1da2:	08 95       	ret

00001da4 <gfx_term_goto>:
    1da4:	86 31       	cpi	r24, 0x16	; 22
    1da6:	30 f4       	brcc	.+12     	; 0x1db4 <gfx_term_goto+0x10>
    1da8:	68 30       	cpi	r22, 0x08	; 8
    1daa:	20 f4       	brcc	.+8      	; 0x1db4 <gfx_term_goto+0x10>
    1dac:	60 93 37 04 	sts	0x0437, r22	; 0x800437 <gfx_term_row>
    1db0:	80 93 43 04 	sts	0x0443, r24	; 0x800443 <gfx_term_col>
    1db4:	08 95       	ret

00001db6 <gfx_term_scroll>:
    1db6:	cf 92       	push	r12
    1db8:	df 92       	push	r13
    1dba:	ef 92       	push	r14
    1dbc:	ff 92       	push	r15
    1dbe:	0f 93       	push	r16
    1dc0:	1f 93       	push	r17
    1dc2:	cf 93       	push	r28
    1dc4:	df 93       	push	r29
    1dc6:	c9 eb       	ldi	r28, 0xB9	; 185
    1dc8:	22 e4       	ldi	r18, 0x42	; 66
    1dca:	c2 2e       	mov	r12, r18
    1dcc:	24 e0       	ldi	r18, 0x04	; 4
    1dce:	d2 2e       	mov	r13, r18
    1dd0:	10 e0       	ldi	r17, 0x00	; 0
    1dd2:	d0 e0       	ldi	r29, 0x00	; 0
    1dd4:	07 e4       	ldi	r16, 0x47	; 71
    1dd6:	0c 0f       	add	r16, r28
    1dd8:	d8 30       	cpi	r29, 0x08	; 8
    1dda:	50 f5       	brcc	.+84     	; 0x1e30 <gfx_term_scroll+0x7a>
    1ddc:	80 e0       	ldi	r24, 0x00	; 0
    1dde:	0e 94 3d 08 	call	0x107a	; 0x107a <display_wait>
    1de2:	6c 2f       	mov	r22, r28
    1de4:	80 e0       	ldi	r24, 0x00	; 0
    1de6:	0e 94 bc 07 	call	0xf78	; 0xf78 <display_write>
    1dea:	80 e0       	ldi	r24, 0x00	; 0
    1dec:	0e 94 3d 08 	call	0x107a	; 0x107a <display_wait>
    1df0:	60 e4       	ldi	r22, 0x40	; 64
    1df2:	61 0f       	add	r22, r17
    1df4:	80 e0       	ldi	r24, 0x00	; 0
    1df6:	0e 94 bc 07 	call	0xf78	; 0xf78 <display_write>
    1dfa:	82 e0       	ldi	r24, 0x02	; 2
    1dfc:	0e 94 fe 07 	call	0xffc	; 0xffc <display_read>
    1e00:	9a e3       	ldi	r25, 0x3A	; 58
    1e02:	e9 2e       	mov	r14, r25
    1e04:	94 e0       	ldi	r25, 0x04	; 4
    1e06:	f9 2e       	mov	r15, r25
    1e08:	82 e0       	ldi	r24, 0x02	; 2
    1e0a:	0e 94 fe 07 	call	0xffc	; 0xffc <display_read>
    1e0e:	f7 01       	movw	r30, r14
    1e10:	81 93       	st	Z+, r24
    1e12:	7f 01       	movw	r14, r30
    1e14:	f2 e4       	ldi	r31, 0x42	; 66
    1e16:	ef 16       	cp	r14, r31
    1e18:	f4 e0       	ldi	r31, 0x04	; 4
    1e1a:	ff 06       	cpc	r15, r31
    1e1c:	a9 f7       	brne	.-22     	; 0x1e08 <gfx_term_scroll+0x52>
    1e1e:	60 2f       	mov	r22, r16
    1e20:	8d 2f       	mov	r24, r29
    1e22:	0e 94 36 0a 	call	0x146c	; 0x146c <gfx_store_disp_tile>
    1e26:	df 5f       	subi	r29, 0xFF	; 255
    1e28:	18 5f       	subi	r17, 0xF8	; 248
    1e2a:	d0 31       	cpi	r29, 0x10	; 16
    1e2c:	a9 f6       	brne	.-86     	; 0x1dd8 <gfx_term_scroll+0x22>
    1e2e:	1f c0       	rjmp	.+62     	; 0x1e6e <gfx_term_scroll+0xb8>
    1e30:	81 e0       	ldi	r24, 0x01	; 1
    1e32:	0e 94 3d 08 	call	0x107a	; 0x107a <display_wait>
    1e36:	6c 2f       	mov	r22, r28
    1e38:	81 e0       	ldi	r24, 0x01	; 1
    1e3a:	0e 94 bc 07 	call	0xf78	; 0xf78 <display_write>
    1e3e:	81 e0       	ldi	r24, 0x01	; 1
    1e40:	0e 94 3d 08 	call	0x107a	; 0x107a <display_wait>
    1e44:	61 2f       	mov	r22, r17
    1e46:	81 e0       	ldi	r24, 0x01	; 1
    1e48:	0e 94 bc 07 	call	0xf78	; 0xf78 <display_write>
    1e4c:	83 e0       	ldi	r24, 0x03	; 3
    1e4e:	0e 94 fe 07 	call	0xffc	; 0xffc <display_read>
    1e52:	8a e3       	ldi	r24, 0x3A	; 58
    1e54:	e8 2e       	mov	r14, r24
    1e56:	84 e0       	ldi	r24, 0x04	; 4
    1e58:	f8 2e       	mov	r15, r24
    1e5a:	83 e0       	ldi	r24, 0x03	; 3
    1e5c:	0e 94 fe 07 	call	0xffc	; 0xffc <display_read>
    1e60:	f7 01       	movw	r30, r14
    1e62:	81 93       	st	Z+, r24
    1e64:	7f 01       	movw	r14, r30
    1e66:	ce 16       	cp	r12, r30
    1e68:	df 06       	cpc	r13, r31
    1e6a:	b9 f7       	brne	.-18     	; 0x1e5a <gfx_term_scroll+0xa4>
    1e6c:	d8 cf       	rjmp	.-80     	; 0x1e1e <gfx_term_scroll+0x68>
    1e6e:	cf 5f       	subi	r28, 0xFF	; 255
    1e70:	c0 3c       	cpi	r28, 0xC0	; 192
    1e72:	09 f0       	breq	.+2      	; 0x1e76 <gfx_term_scroll+0xc0>
    1e74:	ad cf       	rjmp	.-166    	; 0x1dd0 <gfx_term_scroll+0x1a>
    1e76:	ea e3       	ldi	r30, 0x3A	; 58
    1e78:	f4 e0       	ldi	r31, 0x04	; 4
    1e7a:	82 e4       	ldi	r24, 0x42	; 66
    1e7c:	94 e0       	ldi	r25, 0x04	; 4
    1e7e:	11 92       	st	Z+, r1
    1e80:	8e 17       	cp	r24, r30
    1e82:	9f 07       	cpc	r25, r31
    1e84:	e1 f7       	brne	.-8      	; 0x1e7e <gfx_term_scroll+0xc8>
    1e86:	c0 e0       	ldi	r28, 0x00	; 0
    1e88:	67 e0       	ldi	r22, 0x07	; 7
    1e8a:	8c 2f       	mov	r24, r28
    1e8c:	0e 94 36 0a 	call	0x146c	; 0x146c <gfx_store_disp_tile>
    1e90:	cf 5f       	subi	r28, 0xFF	; 255
    1e92:	c0 31       	cpi	r28, 0x10	; 16
    1e94:	c9 f7       	brne	.-14     	; 0x1e88 <gfx_term_scroll+0xd2>
    1e96:	80 91 37 04 	lds	r24, 0x0437	; 0x800437 <gfx_term_row>
    1e9a:	88 23       	and	r24, r24
    1e9c:	19 f0       	breq	.+6      	; 0x1ea4 <gfx_term_scroll+0xee>
    1e9e:	81 50       	subi	r24, 0x01	; 1
    1ea0:	80 93 37 04 	sts	0x0437, r24	; 0x800437 <gfx_term_row>
    1ea4:	df 91       	pop	r29
    1ea6:	cf 91       	pop	r28
    1ea8:	1f 91       	pop	r17
    1eaa:	0f 91       	pop	r16
    1eac:	ff 90       	pop	r15
    1eae:	ef 90       	pop	r14
    1eb0:	df 90       	pop	r13
    1eb2:	cf 90       	pop	r12
    1eb4:	08 95       	ret

00001eb6 <gfx_term_print>:
    1eb6:	0f 93       	push	r16
    1eb8:	1f 93       	push	r17
    1eba:	cf 93       	push	r28
    1ebc:	10 92 38 04 	sts	0x0438, r1	; 0x800438 <gfx_proportional>
    1ec0:	8c 01       	movw	r16, r24
    1ec2:	f8 01       	movw	r30, r16
    1ec4:	c1 91       	ld	r28, Z+
    1ec6:	8f 01       	movw	r16, r30
    1ec8:	cc 23       	and	r28, r28
    1eca:	b9 f1       	breq	.+110    	; 0x1f3a <gfx_term_print+0x84>
    1ecc:	ca 30       	cpi	r28, 0x0A	; 10
    1ece:	69 f4       	brne	.+26     	; 0x1eea <gfx_term_print+0x34>
    1ed0:	10 92 43 04 	sts	0x0443, r1	; 0x800443 <gfx_term_col>
    1ed4:	80 91 37 04 	lds	r24, 0x0437	; 0x800437 <gfx_term_row>
    1ed8:	8f 5f       	subi	r24, 0xFF	; 255
    1eda:	80 93 37 04 	sts	0x0437, r24	; 0x800437 <gfx_term_row>
    1ede:	88 30       	cpi	r24, 0x08	; 8
    1ee0:	81 f7       	brne	.-32     	; 0x1ec2 <gfx_term_print+0xc>
    1ee2:	81 e0       	ldi	r24, 0x01	; 1
    1ee4:	0e 94 db 0e 	call	0x1db6	; 0x1db6 <gfx_term_scroll>
    1ee8:	ec cf       	rjmp	.-40     	; 0x1ec2 <gfx_term_print+0xc>
    1eea:	cd 30       	cpi	r28, 0x0D	; 13
    1eec:	51 f3       	breq	.-44     	; 0x1ec2 <gfx_term_print+0xc>
    1eee:	80 91 43 04 	lds	r24, 0x0443	; 0x800443 <gfx_term_col>
    1ef2:	85 31       	cpi	r24, 0x15	; 21
    1ef4:	60 f0       	brcs	.+24     	; 0x1f0e <gfx_term_print+0x58>
    1ef6:	10 92 43 04 	sts	0x0443, r1	; 0x800443 <gfx_term_col>
    1efa:	80 91 37 04 	lds	r24, 0x0437	; 0x800437 <gfx_term_row>
    1efe:	8f 5f       	subi	r24, 0xFF	; 255
    1f00:	80 93 37 04 	sts	0x0437, r24	; 0x800437 <gfx_term_row>
    1f04:	88 30       	cpi	r24, 0x08	; 8
    1f06:	19 f4       	brne	.+6      	; 0x1f0e <gfx_term_print+0x58>
    1f08:	81 e0       	ldi	r24, 0x01	; 1
    1f0a:	0e 94 db 0e 	call	0x1db6	; 0x1db6 <gfx_term_scroll>
    1f0e:	60 91 37 04 	lds	r22, 0x0437	; 0x800437 <gfx_term_row>
    1f12:	66 0f       	add	r22, r22
    1f14:	66 0f       	add	r22, r22
    1f16:	66 0f       	add	r22, r22
    1f18:	80 91 43 04 	lds	r24, 0x0443	; 0x800443 <gfx_term_col>
    1f1c:	98 2f       	mov	r25, r24
    1f1e:	99 0f       	add	r25, r25
    1f20:	89 0f       	add	r24, r25
    1f22:	88 0f       	add	r24, r24
    1f24:	0e 94 89 0a 	call	0x1512	; 0x1512 <gfx_move>
    1f28:	8c 2f       	mov	r24, r28
    1f2a:	0e 94 cc 0b 	call	0x1798	; 0x1798 <gfx_print_char>
    1f2e:	80 91 43 04 	lds	r24, 0x0443	; 0x800443 <gfx_term_col>
    1f32:	8f 5f       	subi	r24, 0xFF	; 255
    1f34:	80 93 43 04 	sts	0x0443, r24	; 0x800443 <gfx_term_col>
    1f38:	c4 cf       	rjmp	.-120    	; 0x1ec2 <gfx_term_print+0xc>
    1f3a:	cf 91       	pop	r28
    1f3c:	1f 91       	pop	r17
    1f3e:	0f 91       	pop	r16
    1f40:	08 95       	ret

00001f42 <wait_copro>:
    1f42:	78 94       	sei
    1f44:	20 e1       	ldi	r18, 0x10	; 16
    1f46:	37 e2       	ldi	r19, 0x27	; 39
    1f48:	97 e0       	ldi	r25, 0x07	; 7
    1f4a:	89 9f       	mul	r24, r25
    1f4c:	f0 01       	movw	r30, r0
    1f4e:	11 24       	eor	r1, r1
    1f50:	e6 5b       	subi	r30, 0xB6	; 182
    1f52:	fb 4f       	sbci	r31, 0xFB	; 251
    1f54:	21 50       	subi	r18, 0x01	; 1
    1f56:	31 09       	sbc	r19, r1
    1f58:	19 f0       	breq	.+6      	; 0x1f60 <wait_copro+0x1e>
    1f5a:	80 81       	ld	r24, Z
    1f5c:	8f 3f       	cpi	r24, 0xFF	; 255
    1f5e:	d1 f7       	brne	.-12     	; 0x1f54 <wait_copro+0x12>
    1f60:	81 e0       	ldi	r24, 0x01	; 1
    1f62:	23 2b       	or	r18, r19
    1f64:	09 f4       	brne	.+2      	; 0x1f68 <wait_copro+0x26>
    1f66:	80 e0       	ldi	r24, 0x00	; 0
    1f68:	08 95       	ret

00001f6a <spi_finished_callback>:
    1f6a:	90 91 9e 04 	lds	r25, 0x049E	; 0x80049e <copro_seq>
    1f6e:	9f 5f       	subi	r25, 0xFF	; 255
    1f70:	90 93 9e 04 	sts	0x049E, r25	; 0x80049e <copro_seq>
    1f74:	8b 31       	cpi	r24, 0x1B	; 27
    1f76:	41 f4       	brne	.+16     	; 0x1f88 <spi_finished_callback+0x1e>
    1f78:	e8 e1       	ldi	r30, 0x18	; 24
    1f7a:	f4 e0       	ldi	r31, 0x04	; 4
    1f7c:	a1 e8       	ldi	r26, 0x81	; 129
    1f7e:	b4 e0       	ldi	r27, 0x04	; 4
    1f80:	01 90       	ld	r0, Z+
    1f82:	0d 92       	st	X+, r0
    1f84:	8a 95       	dec	r24
    1f86:	e1 f7       	brne	.-8      	; 0x1f80 <spi_finished_callback+0x16>
    1f88:	8f ef       	ldi	r24, 0xFF	; 255
    1f8a:	80 93 06 04 	sts	0x0406, r24	; 0x800406 <spi_tx_buf+0xe>
    1f8e:	80 93 ff 03 	sts	0x03FF, r24	; 0x8003ff <spi_tx_buf+0x7>
    1f92:	80 93 f8 03 	sts	0x03F8, r24	; 0x8003f8 <spi_tx_buf>
    1f96:	90 91 4a 04 	lds	r25, 0x044A	; 0x80044a <copro_commands>
    1f9a:	9f 3f       	cpi	r25, 0xFF	; 255
    1f9c:	69 f0       	breq	.+26     	; 0x1fb8 <spi_finished_callback+0x4e>
    1f9e:	97 e0       	ldi	r25, 0x07	; 7
    1fa0:	ea e4       	ldi	r30, 0x4A	; 74
    1fa2:	f4 e0       	ldi	r31, 0x04	; 4
    1fa4:	a8 ef       	ldi	r26, 0xF8	; 248
    1fa6:	b3 e0       	ldi	r27, 0x03	; 3
    1fa8:	01 90       	ld	r0, Z+
    1faa:	0d 92       	st	X+, r0
    1fac:	9a 95       	dec	r25
    1fae:	e1 f7       	brne	.-8      	; 0x1fa8 <spi_finished_callback+0x3e>
    1fb0:	80 93 4a 04 	sts	0x044A, r24	; 0x80044a <copro_commands>
    1fb4:	87 e0       	ldi	r24, 0x07	; 7
    1fb6:	01 c0       	rjmp	.+2      	; 0x1fba <spi_finished_callback+0x50>
    1fb8:	80 e0       	ldi	r24, 0x00	; 0
    1fba:	90 91 51 04 	lds	r25, 0x0451	; 0x800451 <copro_commands+0x7>
    1fbe:	9f 3f       	cpi	r25, 0xFF	; 255
    1fc0:	79 f0       	breq	.+30     	; 0x1fe0 <spi_finished_callback+0x76>
    1fc2:	a8 2f       	mov	r26, r24
    1fc4:	b0 e0       	ldi	r27, 0x00	; 0
    1fc6:	a8 50       	subi	r26, 0x08	; 8
    1fc8:	bc 4f       	sbci	r27, 0xFC	; 252
    1fca:	97 e0       	ldi	r25, 0x07	; 7
    1fcc:	e1 e5       	ldi	r30, 0x51	; 81
    1fce:	f4 e0       	ldi	r31, 0x04	; 4
    1fd0:	01 90       	ld	r0, Z+
    1fd2:	0d 92       	st	X+, r0
    1fd4:	9a 95       	dec	r25
    1fd6:	e1 f7       	brne	.-8      	; 0x1fd0 <spi_finished_callback+0x66>
    1fd8:	9f ef       	ldi	r25, 0xFF	; 255
    1fda:	90 93 51 04 	sts	0x0451, r25	; 0x800451 <copro_commands+0x7>
    1fde:	89 5f       	subi	r24, 0xF9	; 249
    1fe0:	90 91 58 04 	lds	r25, 0x0458	; 0x800458 <copro_commands+0xe>
    1fe4:	9f 3f       	cpi	r25, 0xFF	; 255
    1fe6:	79 f0       	breq	.+30     	; 0x2006 <spi_finished_callback+0x9c>
    1fe8:	a8 2f       	mov	r26, r24
    1fea:	b0 e0       	ldi	r27, 0x00	; 0
    1fec:	a8 50       	subi	r26, 0x08	; 8
    1fee:	bc 4f       	sbci	r27, 0xFC	; 252
    1ff0:	87 e0       	ldi	r24, 0x07	; 7
    1ff2:	e8 e5       	ldi	r30, 0x58	; 88
    1ff4:	f4 e0       	ldi	r31, 0x04	; 4
    1ff6:	01 90       	ld	r0, Z+
    1ff8:	0d 92       	st	X+, r0
    1ffa:	8a 95       	dec	r24
    1ffc:	e1 f7       	brne	.-8      	; 0x1ff6 <spi_finished_callback+0x8c>
    1ffe:	8f ef       	ldi	r24, 0xFF	; 255
    2000:	80 93 58 04 	sts	0x0458, r24	; 0x800458 <copro_commands+0xe>
    2004:	04 c0       	rjmp	.+8      	; 0x200e <spi_finished_callback+0xa4>
    2006:	81 11       	cpse	r24, r1
    2008:	02 c0       	rjmp	.+4      	; 0x200e <spi_finished_callback+0xa4>
    200a:	87 e0       	ldi	r24, 0x07	; 7
    200c:	08 95       	ret
    200e:	85 e1       	ldi	r24, 0x15	; 21
    2010:	08 95       	ret

00002012 <_copro_check_busy>:
    2012:	27 e0       	ldi	r18, 0x07	; 7
    2014:	82 9f       	mul	r24, r18
    2016:	c0 01       	movw	r24, r0
    2018:	11 24       	eor	r1, r1
    201a:	fc 01       	movw	r30, r24
    201c:	e6 5b       	subi	r30, 0xB6	; 182
    201e:	fb 4f       	sbci	r31, 0xFB	; 251
    2020:	81 e0       	ldi	r24, 0x01	; 1
    2022:	90 81       	ld	r25, Z
    2024:	9f 3f       	cpi	r25, 0xFF	; 255
    2026:	09 f4       	brne	.+2      	; 0x202a <_copro_check_busy+0x18>
    2028:	80 e0       	ldi	r24, 0x00	; 0
    202a:	08 95       	ret

0000202c <copro_update>:
    202c:	f8 94       	cli
    202e:	a3 e6       	ldi	r26, 0x63	; 99
    2030:	b4 e0       	ldi	r27, 0x04	; 4
    2032:	e1 e8       	ldi	r30, 0x81	; 129
    2034:	f4 e0       	ldi	r31, 0x04	; 4
    2036:	81 81       	ldd	r24, Z+1	; 0x01
    2038:	90 e0       	ldi	r25, 0x00	; 0
    203a:	98 2f       	mov	r25, r24
    203c:	88 27       	eor	r24, r24
    203e:	20 81       	ld	r18, Z
    2040:	82 0f       	add	r24, r18
    2042:	91 1d       	adc	r25, r1
    2044:	11 96       	adiw	r26, 0x01	; 1
    2046:	9c 93       	st	X, r25
    2048:	8e 93       	st	-X, r24
    204a:	83 81       	ldd	r24, Z+3	; 0x03
    204c:	90 e0       	ldi	r25, 0x00	; 0
    204e:	98 2f       	mov	r25, r24
    2050:	88 27       	eor	r24, r24
    2052:	22 81       	ldd	r18, Z+2	; 0x02
    2054:	82 0f       	add	r24, r18
    2056:	91 1d       	adc	r25, r1
    2058:	13 96       	adiw	r26, 0x03	; 3
    205a:	9c 93       	st	X, r25
    205c:	8e 93       	st	-X, r24
    205e:	12 97       	sbiw	r26, 0x02	; 2
    2060:	85 81       	ldd	r24, Z+5	; 0x05
    2062:	90 e0       	ldi	r25, 0x00	; 0
    2064:	98 2f       	mov	r25, r24
    2066:	88 27       	eor	r24, r24
    2068:	24 81       	ldd	r18, Z+4	; 0x04
    206a:	82 0f       	add	r24, r18
    206c:	91 1d       	adc	r25, r1
    206e:	15 96       	adiw	r26, 0x05	; 5
    2070:	9c 93       	st	X, r25
    2072:	8e 93       	st	-X, r24
    2074:	14 97       	sbiw	r26, 0x04	; 4
    2076:	87 81       	ldd	r24, Z+7	; 0x07
    2078:	90 e0       	ldi	r25, 0x00	; 0
    207a:	98 2f       	mov	r25, r24
    207c:	88 27       	eor	r24, r24
    207e:	26 81       	ldd	r18, Z+6	; 0x06
    2080:	82 0f       	add	r24, r18
    2082:	91 1d       	adc	r25, r1
    2084:	17 96       	adiw	r26, 0x07	; 7
    2086:	9c 93       	st	X, r25
    2088:	8e 93       	st	-X, r24
    208a:	16 97       	sbiw	r26, 0x06	; 6
    208c:	81 85       	ldd	r24, Z+9	; 0x09
    208e:	90 e0       	ldi	r25, 0x00	; 0
    2090:	98 2f       	mov	r25, r24
    2092:	88 27       	eor	r24, r24
    2094:	20 85       	ldd	r18, Z+8	; 0x08
    2096:	82 0f       	add	r24, r18
    2098:	91 1d       	adc	r25, r1
    209a:	19 96       	adiw	r26, 0x09	; 9
    209c:	9c 93       	st	X, r25
    209e:	8e 93       	st	-X, r24
    20a0:	18 97       	sbiw	r26, 0x08	; 8
    20a2:	78 94       	sei
    20a4:	f8 94       	cli
    20a6:	22 85       	ldd	r18, Z+10	; 0x0a
    20a8:	80 91 46 04 	lds	r24, 0x0446	; 0x800446 <copro_ticks_offset_l>
    20ac:	90 91 47 04 	lds	r25, 0x0447	; 0x800447 <copro_ticks_offset_l+0x1>
    20b0:	ac 01       	movw	r20, r24
    20b2:	42 0f       	add	r20, r18
    20b4:	51 1d       	adc	r21, r1
    20b6:	93 85       	ldd	r25, Z+11	; 0x0b
    20b8:	89 2f       	mov	r24, r25
    20ba:	90 e0       	ldi	r25, 0x00	; 0
    20bc:	98 2f       	mov	r25, r24
    20be:	88 27       	eor	r24, r24
    20c0:	84 0f       	add	r24, r20
    20c2:	95 1f       	adc	r25, r21
    20c4:	90 93 60 04 	sts	0x0460, r25	; 0x800460 <copro_ticks_l+0x1>
    20c8:	80 93 5f 04 	sts	0x045F, r24	; 0x80045f <copro_ticks_l>
    20cc:	24 85       	ldd	r18, Z+12	; 0x0c
    20ce:	80 91 44 04 	lds	r24, 0x0444	; 0x800444 <copro_ticks_offset_r>
    20d2:	90 91 45 04 	lds	r25, 0x0445	; 0x800445 <copro_ticks_offset_r+0x1>
    20d6:	ac 01       	movw	r20, r24
    20d8:	42 0f       	add	r20, r18
    20da:	51 1d       	adc	r21, r1
    20dc:	95 85       	ldd	r25, Z+13	; 0x0d
    20de:	89 2f       	mov	r24, r25
    20e0:	90 e0       	ldi	r25, 0x00	; 0
    20e2:	98 2f       	mov	r25, r24
    20e4:	88 27       	eor	r24, r24
    20e6:	84 0f       	add	r24, r20
    20e8:	95 1f       	adc	r25, r21
    20ea:	90 93 78 04 	sts	0x0478, r25	; 0x800478 <copro_ticks_r+0x1>
    20ee:	80 93 77 04 	sts	0x0477, r24	; 0x800477 <copro_ticks_r>
    20f2:	87 85       	ldd	r24, Z+15	; 0x0f
    20f4:	90 e0       	ldi	r25, 0x00	; 0
    20f6:	98 2f       	mov	r25, r24
    20f8:	88 27       	eor	r24, r24
    20fa:	26 85       	ldd	r18, Z+14	; 0x0e
    20fc:	82 0f       	add	r24, r18
    20fe:	91 1d       	adc	r25, r1
    2100:	90 93 a0 04 	sts	0x04A0, r25	; 0x8004a0 <copro_speed_l+0x1>
    2104:	80 93 9f 04 	sts	0x049F, r24	; 0x80049f <copro_speed_l>
    2108:	81 89       	ldd	r24, Z+17	; 0x11
    210a:	90 e0       	ldi	r25, 0x00	; 0
    210c:	98 2f       	mov	r25, r24
    210e:	88 27       	eor	r24, r24
    2110:	20 89       	ldd	r18, Z+16	; 0x10
    2112:	82 0f       	add	r24, r18
    2114:	91 1d       	adc	r25, r1
    2116:	90 93 76 04 	sts	0x0476, r25	; 0x800476 <copro_speed_r+0x1>
    211a:	80 93 75 04 	sts	0x0475, r24	; 0x800475 <copro_speed_r>
    211e:	83 89       	ldd	r24, Z+19	; 0x13
    2120:	90 e0       	ldi	r25, 0x00	; 0
    2122:	98 2f       	mov	r25, r24
    2124:	88 27       	eor	r24, r24
    2126:	22 89       	ldd	r18, Z+18	; 0x12
    2128:	82 0f       	add	r24, r18
    212a:	91 1d       	adc	r25, r1
    212c:	90 93 49 04 	sts	0x0449, r25	; 0x800449 <copro_current_l+0x1>
    2130:	80 93 48 04 	sts	0x0448, r24	; 0x800448 <copro_current_l>
    2134:	85 89       	ldd	r24, Z+21	; 0x15
    2136:	90 e0       	ldi	r25, 0x00	; 0
    2138:	98 2f       	mov	r25, r24
    213a:	88 27       	eor	r24, r24
    213c:	24 89       	ldd	r18, Z+20	; 0x14
    213e:	82 0f       	add	r24, r18
    2140:	91 1d       	adc	r25, r1
    2142:	90 93 80 04 	sts	0x0480, r25	; 0x800480 <copro_current_r+0x1>
    2146:	80 93 7f 04 	sts	0x047F, r24	; 0x80047f <copro_current_r>
    214a:	78 94       	sei
    214c:	f8 94       	cli
    214e:	80 8d       	ldd	r24, Z+24	; 0x18
    2150:	90 e0       	ldi	r25, 0x00	; 0
    2152:	98 2f       	mov	r25, r24
    2154:	88 27       	eor	r24, r24
    2156:	27 89       	ldd	r18, Z+23	; 0x17
    2158:	82 0f       	add	r24, r18
    215a:	91 1d       	adc	r25, r1
    215c:	90 93 62 04 	sts	0x0462, r25	; 0x800462 <copro_rc5_cmd+0x1>
    2160:	80 93 61 04 	sts	0x0461, r24	; 0x800461 <copro_rc5_cmd>
    2164:	82 8d       	ldd	r24, Z+26	; 0x1a
    2166:	90 e0       	ldi	r25, 0x00	; 0
    2168:	98 2f       	mov	r25, r24
    216a:	88 27       	eor	r24, r24
    216c:	21 8d       	ldd	r18, Z+25	; 0x19
    216e:	82 0f       	add	r24, r18
    2170:	91 1d       	adc	r25, r1
    2172:	90 93 9d 04 	sts	0x049D, r25	; 0x80049d <copro_target_distance+0x1>
    2176:	80 93 9c 04 	sts	0x049C, r24	; 0x80049c <copro_target_distance>
    217a:	78 94       	sei
    217c:	81 e0       	ldi	r24, 0x01	; 1
    217e:	08 95       	ret

00002180 <copro_stop>:
    2180:	f8 94       	cli
    2182:	81 e0       	ldi	r24, 0x01	; 1
    2184:	80 93 4a 04 	sts	0x044A, r24	; 0x80044a <copro_commands>
    2188:	78 94       	sei
    218a:	08 95       	ret

0000218c <copro_stopImmediate>:
    218c:	f8 94       	cli
    218e:	8a e0       	ldi	r24, 0x0A	; 10
    2190:	80 93 4a 04 	sts	0x044A, r24	; 0x80044a <copro_commands>
    2194:	78 94       	sei
    2196:	81 e0       	ldi	r24, 0x01	; 1
    2198:	08 95       	ret

0000219a <copro_setPWM>:
    219a:	f8 94       	cli
    219c:	ea e4       	ldi	r30, 0x4A	; 74
    219e:	f4 e0       	ldi	r31, 0x04	; 4
    21a0:	25 e0       	ldi	r18, 0x05	; 5
    21a2:	20 83       	st	Z, r18
    21a4:	81 83       	std	Z+1, r24	; 0x01
    21a6:	92 83       	std	Z+2, r25	; 0x02
    21a8:	63 83       	std	Z+3, r22	; 0x03
    21aa:	74 83       	std	Z+4, r23	; 0x04
    21ac:	78 94       	sei
    21ae:	81 e0       	ldi	r24, 0x01	; 1
    21b0:	08 95       	ret

000021b2 <copro_setSpeed>:
    21b2:	f8 94       	cli
    21b4:	ea e4       	ldi	r30, 0x4A	; 74
    21b6:	f4 e0       	ldi	r31, 0x04	; 4
    21b8:	22 e0       	ldi	r18, 0x02	; 2
    21ba:	20 83       	st	Z, r18
    21bc:	81 83       	std	Z+1, r24	; 0x01
    21be:	92 83       	std	Z+2, r25	; 0x02
    21c0:	63 83       	std	Z+3, r22	; 0x03
    21c2:	74 83       	std	Z+4, r23	; 0x04
    21c4:	78 94       	sei
    21c6:	81 e0       	ldi	r24, 0x01	; 1
    21c8:	08 95       	ret

000021ca <copro_setTargetAbs>:
    21ca:	20 91 46 04 	lds	r18, 0x0446	; 0x800446 <copro_ticks_offset_l>
    21ce:	30 91 47 04 	lds	r19, 0x0447	; 0x800447 <copro_ticks_offset_l+0x1>
    21d2:	82 1b       	sub	r24, r18
    21d4:	93 0b       	sbc	r25, r19
    21d6:	20 91 44 04 	lds	r18, 0x0444	; 0x800444 <copro_ticks_offset_r>
    21da:	30 91 45 04 	lds	r19, 0x0445	; 0x800445 <copro_ticks_offset_r+0x1>
    21de:	62 1b       	sub	r22, r18
    21e0:	73 0b       	sbc	r23, r19
    21e2:	f8 94       	cli
    21e4:	ea e4       	ldi	r30, 0x4A	; 74
    21e6:	f4 e0       	ldi	r31, 0x04	; 4
    21e8:	23 e0       	ldi	r18, 0x03	; 3
    21ea:	20 83       	st	Z, r18
    21ec:	81 83       	std	Z+1, r24	; 0x01
    21ee:	92 83       	std	Z+2, r25	; 0x02
    21f0:	63 83       	std	Z+3, r22	; 0x03
    21f2:	74 83       	std	Z+4, r23	; 0x04
    21f4:	45 83       	std	Z+5, r20	; 0x05
    21f6:	56 83       	std	Z+6, r21	; 0x06
    21f8:	78 94       	sei
    21fa:	81 e0       	ldi	r24, 0x01	; 1
    21fc:	08 95       	ret

000021fe <copro_setTargetRel>:
    21fe:	f8 94       	cli
    2200:	ea e4       	ldi	r30, 0x4A	; 74
    2202:	f4 e0       	ldi	r31, 0x04	; 4
    2204:	24 e0       	ldi	r18, 0x04	; 4
    2206:	20 83       	st	Z, r18
    2208:	81 83       	std	Z+1, r24	; 0x01
    220a:	92 83       	std	Z+2, r25	; 0x02
    220c:	63 83       	std	Z+3, r22	; 0x03
    220e:	74 83       	std	Z+4, r23	; 0x04
    2210:	45 83       	std	Z+5, r20	; 0x05
    2212:	56 83       	std	Z+6, r21	; 0x06
    2214:	78 94       	sei
    2216:	81 e0       	ldi	r24, 0x01	; 1
    2218:	08 95       	ret

0000221a <copro_setSpeedParameters>:
    221a:	1f 93       	push	r17
    221c:	cf 93       	push	r28
    221e:	df 93       	push	r29
    2220:	18 2f       	mov	r17, r24
    2222:	d6 2f       	mov	r29, r22
    2224:	c4 2f       	mov	r28, r20
    2226:	82 e0       	ldi	r24, 0x02	; 2
    2228:	0e 94 a1 0f 	call	0x1f42	; 0x1f42 <wait_copro>
    222c:	f8 94       	cli
    222e:	ea e4       	ldi	r30, 0x4A	; 74
    2230:	f4 e0       	ldi	r31, 0x04	; 4
    2232:	86 e0       	ldi	r24, 0x06	; 6
    2234:	86 87       	std	Z+14, r24	; 0x0e
    2236:	17 87       	std	Z+15, r17	; 0x0f
    2238:	d0 8b       	std	Z+16, r29	; 0x10
    223a:	c1 8b       	std	Z+17, r28	; 0x11
    223c:	78 94       	sei
    223e:	81 e0       	ldi	r24, 0x01	; 1
    2240:	df 91       	pop	r29
    2242:	cf 91       	pop	r28
    2244:	1f 91       	pop	r17
    2246:	08 95       	ret

00002248 <copro_setPositionParameters>:
    2248:	81 e0       	ldi	r24, 0x01	; 1
    224a:	08 95       	ret

0000224c <copro_resetOdometry>:
    224c:	f8 94       	cli
    224e:	e1 e8       	ldi	r30, 0x81	; 129
    2250:	f4 e0       	ldi	r31, 0x04	; 4
    2252:	25 85       	ldd	r18, Z+13	; 0x0d
    2254:	30 e0       	ldi	r19, 0x00	; 0
    2256:	32 2f       	mov	r19, r18
    2258:	22 27       	eor	r18, r18
    225a:	44 85       	ldd	r20, Z+12	; 0x0c
    225c:	24 0f       	add	r18, r20
    225e:	31 1d       	adc	r19, r1
    2260:	43 85       	ldd	r20, Z+11	; 0x0b
    2262:	50 e0       	ldi	r21, 0x00	; 0
    2264:	54 2f       	mov	r21, r20
    2266:	44 27       	eor	r20, r20
    2268:	e2 85       	ldd	r30, Z+10	; 0x0a
    226a:	4e 0f       	add	r20, r30
    226c:	51 1d       	adc	r21, r1
    226e:	fc 01       	movw	r30, r24
    2270:	e4 1b       	sub	r30, r20
    2272:	f5 0b       	sbc	r31, r21
    2274:	f0 93 47 04 	sts	0x0447, r31	; 0x800447 <copro_ticks_offset_l+0x1>
    2278:	e0 93 46 04 	sts	0x0446, r30	; 0x800446 <copro_ticks_offset_l>
    227c:	ab 01       	movw	r20, r22
    227e:	42 1b       	sub	r20, r18
    2280:	53 0b       	sbc	r21, r19
    2282:	50 93 45 04 	sts	0x0445, r21	; 0x800445 <copro_ticks_offset_r+0x1>
    2286:	40 93 44 04 	sts	0x0444, r20	; 0x800444 <copro_ticks_offset_r>
    228a:	90 93 60 04 	sts	0x0460, r25	; 0x800460 <copro_ticks_l+0x1>
    228e:	80 93 5f 04 	sts	0x045F, r24	; 0x80045f <copro_ticks_l>
    2292:	70 93 78 04 	sts	0x0478, r23	; 0x800478 <copro_ticks_r+0x1>
    2296:	60 93 77 04 	sts	0x0477, r22	; 0x800477 <copro_ticks_r>
    229a:	78 94       	sei
    229c:	81 e0       	ldi	r24, 0x01	; 1
    229e:	08 95       	ret

000022a0 <copro_ir_stop>:
    22a0:	81 e0       	ldi	r24, 0x01	; 1
    22a2:	0e 94 a1 0f 	call	0x1f42	; 0x1f42 <wait_copro>
    22a6:	f8 94       	cli
    22a8:	88 e0       	ldi	r24, 0x08	; 8
    22aa:	80 93 51 04 	sts	0x0451, r24	; 0x800451 <copro_commands+0x7>
    22ae:	78 94       	sei
    22b0:	81 e0       	ldi	r24, 0x01	; 1
    22b2:	08 95       	ret

000022b4 <copro_ir_startMeasure>:
    22b4:	81 e0       	ldi	r24, 0x01	; 1
    22b6:	0e 94 a1 0f 	call	0x1f42	; 0x1f42 <wait_copro>
    22ba:	f8 94       	cli
    22bc:	87 e0       	ldi	r24, 0x07	; 7
    22be:	80 93 51 04 	sts	0x0451, r24	; 0x800451 <copro_commands+0x7>
    22c2:	78 94       	sei
    22c4:	81 e0       	ldi	r24, 0x01	; 1
    22c6:	08 95       	ret

000022c8 <copro_transmitRC5>:
    22c8:	cf 93       	push	r28
    22ca:	df 93       	push	r29
    22cc:	d8 2f       	mov	r29, r24
    22ce:	c9 2f       	mov	r28, r25
    22d0:	81 e0       	ldi	r24, 0x01	; 1
    22d2:	0e 94 a1 0f 	call	0x1f42	; 0x1f42 <wait_copro>
    22d6:	f8 94       	cli
    22d8:	ea e4       	ldi	r30, 0x4A	; 74
    22da:	f4 e0       	ldi	r31, 0x04	; 4
    22dc:	89 e0       	ldi	r24, 0x09	; 9
    22de:	87 83       	std	Z+7, r24	; 0x07
    22e0:	d0 87       	std	Z+8, r29	; 0x08
    22e2:	c1 87       	std	Z+9, r28	; 0x09
    22e4:	78 94       	sei
    22e6:	81 e0       	ldi	r24, 0x01	; 1
    22e8:	df 91       	pop	r29
    22ea:	cf 91       	pop	r28
    22ec:	08 95       	ret

000022ee <bot_init>:
    22ee:	8f 9a       	sbi	0x11, 7	; 17
    22f0:	97 98       	cbi	0x12, 7	; 18
    22f2:	8a e0       	ldi	r24, 0x0A	; 10
    22f4:	90 e0       	ldi	r25, 0x00	; 0
    22f6:	0e 94 75 09 	call	0x12ea	; 0x12ea <delay>
    22fa:	97 9a       	sbi	0x12, 7	; 18
    22fc:	84 e6       	ldi	r24, 0x64	; 100
    22fe:	90 e0       	ldi	r25, 0x00	; 0
    2300:	0c 94 75 09 	jmp	0x12ea	; 0x12ea <delay>

00002304 <bot_update>:
    2304:	87 e0       	ldi	r24, 0x07	; 7
    2306:	0e 94 0d 12 	call	0x241a	; 0x241a <adc_read>
    230a:	90 93 a2 04 	sts	0x04A2, r25	; 0x8004a2 <bot_supply+0x1>
    230e:	80 93 a1 04 	sts	0x04A1, r24	; 0x8004a1 <bot_supply>
    2312:	08 95       	ret

00002314 <leds_init>:
    2314:	bf 9a       	sbi	0x17, 7	; 23
    2316:	c7 9a       	sbi	0x18, 7	; 24
    2318:	bd 9a       	sbi	0x17, 5	; 23
    231a:	be 9a       	sbi	0x17, 6	; 23
    231c:	8f ef       	ldi	r24, 0xFF	; 255
    231e:	82 b9       	out	0x02, r24	; 2
    2320:	84 bb       	out	0x14, r24	; 20
    2322:	08 95       	ret

00002324 <leds_set_status>:
    2324:	95 b3       	in	r25, 0x15	; 21
    2326:	21 e0       	ldi	r18, 0x01	; 1
    2328:	30 e0       	ldi	r19, 0x00	; 0
    232a:	06 2e       	mov	r0, r22
    232c:	01 c0       	rjmp	.+2      	; 0x2330 <leds_set_status+0xc>
    232e:	22 0f       	add	r18, r18
    2330:	0a 94       	dec	r0
    2332:	ea f7       	brpl	.-6      	; 0x232e <leds_set_status+0xa>
    2334:	80 ff       	sbrs	r24, 0
    2336:	02 c0       	rjmp	.+4      	; 0x233c <leds_set_status+0x18>
    2338:	29 2b       	or	r18, r25
    233a:	02 c0       	rjmp	.+4      	; 0x2340 <leds_set_status+0x1c>
    233c:	20 95       	com	r18
    233e:	29 23       	and	r18, r25
    2340:	25 bb       	out	0x15, r18	; 21
    2342:	23 b1       	in	r18, 0x03	; 3
    2344:	81 ff       	sbrs	r24, 1
    2346:	08 c0       	rjmp	.+16     	; 0x2358 <leds_set_status+0x34>
    2348:	81 e0       	ldi	r24, 0x01	; 1
    234a:	90 e0       	ldi	r25, 0x00	; 0
    234c:	01 c0       	rjmp	.+2      	; 0x2350 <leds_set_status+0x2c>
    234e:	88 0f       	add	r24, r24
    2350:	6a 95       	dec	r22
    2352:	ea f7       	brpl	.-6      	; 0x234e <leds_set_status+0x2a>
    2354:	82 2b       	or	r24, r18
    2356:	08 c0       	rjmp	.+16     	; 0x2368 <leds_set_status+0x44>
    2358:	81 e0       	ldi	r24, 0x01	; 1
    235a:	90 e0       	ldi	r25, 0x00	; 0
    235c:	01 c0       	rjmp	.+2      	; 0x2360 <leds_set_status+0x3c>
    235e:	88 0f       	add	r24, r24
    2360:	6a 95       	dec	r22
    2362:	ea f7       	brpl	.-6      	; 0x235e <leds_set_status+0x3a>
    2364:	80 95       	com	r24
    2366:	82 23       	and	r24, r18
    2368:	83 b9       	out	0x03, r24	; 3
    236a:	08 95       	ret

0000236c <leds_set_status_intensity>:
    236c:	90 93 f1 03 	sts	0x03F1, r25	; 0x8003f1 <pwm_channel_C+0x1>
    2370:	80 93 f0 03 	sts	0x03F0, r24	; 0x8003f0 <pwm_channel_C>
    2374:	08 95       	ret

00002376 <leds_get_status_intensity>:
    2376:	80 91 f0 03 	lds	r24, 0x03F0	; 0x8003f0 <pwm_channel_C>
    237a:	90 91 f1 03 	lds	r25, 0x03F1	; 0x8003f1 <pwm_channel_C+0x1>
    237e:	08 95       	ret

00002380 <leds_set_headlights>:
    2380:	90 93 eb 03 	sts	0x03EB, r25	; 0x8003eb <pwm_channel_A+0x1>
    2384:	80 93 ea 03 	sts	0x03EA, r24	; 0x8003ea <pwm_channel_A>
    2388:	08 95       	ret

0000238a <leds_get_headlights>:
    238a:	80 91 ea 03 	lds	r24, 0x03EA	; 0x8003ea <pwm_channel_A>
    238e:	90 91 eb 03 	lds	r25, 0x03EB	; 0x8003eb <pwm_channel_A+0x1>
    2392:	08 95       	ret

00002394 <leds_set_displaylight>:
    2394:	90 93 ed 03 	sts	0x03ED, r25	; 0x8003ed <pwm_channel_B+0x1>
    2398:	80 93 ec 03 	sts	0x03EC, r24	; 0x8003ec <pwm_channel_B>
    239c:	08 95       	ret

0000239e <leds_get_displaylight>:
    239e:	80 91 ec 03 	lds	r24, 0x03EC	; 0x8003ec <pwm_channel_B>
    23a2:	90 91 ed 03 	lds	r25, 0x03ED	; 0x8003ed <pwm_channel_B+0x1>
    23a6:	08 95       	ret

000023a8 <sound_init>:
    23a8:	bc 9a       	sbi	0x17, 4	; 23
    23aa:	08 95       	ret

000023ac <sound_tone>:
    23ac:	61 15       	cp	r22, r1
    23ae:	71 05       	cpc	r23, r1
    23b0:	09 f1       	breq	.+66     	; 0x23f4 <sound_tone+0x48>
    23b2:	c4 98       	cbi	0x18, 4	; 24
    23b4:	9b 01       	movw	r18, r22
    23b6:	28 1b       	sub	r18, r24
    23b8:	39 0b       	sbc	r19, r25
    23ba:	62 17       	cp	r22, r18
    23bc:	73 07       	cpc	r23, r19
    23be:	49 f0       	breq	.+18     	; 0x23d2 <sound_tone+0x26>
    23c0:	61 50       	subi	r22, 0x01	; 1
    23c2:	71 09       	sbc	r23, r1
    23c4:	45 e3       	ldi	r20, 0x35	; 53
    23c6:	4a 95       	dec	r20
    23c8:	f1 f7       	brne	.-4      	; 0x23c6 <sound_tone+0x1a>
    23ca:	00 00       	nop
    23cc:	61 15       	cp	r22, r1
    23ce:	71 05       	cpc	r23, r1
    23d0:	a1 f7       	brne	.-24     	; 0x23ba <sound_tone+0xe>
    23d2:	c4 9a       	sbi	0x18, 4	; 24
    23d4:	9b 01       	movw	r18, r22
    23d6:	28 1b       	sub	r18, r24
    23d8:	39 0b       	sbc	r19, r25
    23da:	61 15       	cp	r22, r1
    23dc:	71 05       	cpc	r23, r1
    23de:	31 f3       	breq	.-52     	; 0x23ac <sound_tone>
    23e0:	62 17       	cp	r22, r18
    23e2:	73 07       	cpc	r23, r19
    23e4:	19 f3       	breq	.-58     	; 0x23ac <sound_tone>
    23e6:	61 50       	subi	r22, 0x01	; 1
    23e8:	71 09       	sbc	r23, r1
    23ea:	45 e3       	ldi	r20, 0x35	; 53
    23ec:	4a 95       	dec	r20
    23ee:	f1 f7       	brne	.-4      	; 0x23ec <sound_tone+0x40>
    23f0:	00 00       	nop
    23f2:	f3 cf       	rjmp	.-26     	; 0x23da <sound_tone+0x2e>
    23f4:	08 95       	ret

000023f6 <adc_init>:
    23f6:	e1 e6       	ldi	r30, 0x61	; 97
    23f8:	f0 e0       	ldi	r31, 0x00	; 0
    23fa:	90 81       	ld	r25, Z
    23fc:	21 e0       	ldi	r18, 0x01	; 1
    23fe:	30 e0       	ldi	r19, 0x00	; 0
    2400:	01 c0       	rjmp	.+2      	; 0x2404 <adc_init+0xe>
    2402:	22 0f       	add	r18, r18
    2404:	8a 95       	dec	r24
    2406:	ea f7       	brpl	.-6      	; 0x2402 <adc_init+0xc>
    2408:	20 95       	com	r18
    240a:	92 23       	and	r25, r18
    240c:	90 83       	st	Z, r25
    240e:	e2 e6       	ldi	r30, 0x62	; 98
    2410:	f0 e0       	ldi	r31, 0x00	; 0
    2412:	80 81       	ld	r24, Z
    2414:	28 23       	and	r18, r24
    2416:	20 83       	st	Z, r18
    2418:	08 95       	ret

0000241a <adc_read>:
    241a:	90 e4       	ldi	r25, 0x40	; 64
    241c:	97 b9       	out	0x07, r25	; 7
    241e:	97 b1       	in	r25, 0x07	; 7
    2420:	87 70       	andi	r24, 0x07	; 7
    2422:	98 2b       	or	r25, r24
    2424:	97 b9       	out	0x07, r25	; 7
    2426:	87 ec       	ldi	r24, 0xC7	; 199
    2428:	86 b9       	out	0x06, r24	; 6
    242a:	36 9b       	sbis	0x06, 6	; 6
    242c:	02 c0       	rjmp	.+4      	; 0x2432 <adc_read+0x18>
    242e:	00 00       	nop
    2430:	fc cf       	rjmp	.-8      	; 0x242a <adc_read+0x10>
    2432:	24 b1       	in	r18, 0x04	; 4
    2434:	85 b1       	in	r24, 0x05	; 5
    2436:	90 e0       	ldi	r25, 0x00	; 0
    2438:	98 2f       	mov	r25, r24
    243a:	88 27       	eor	r24, r24
    243c:	82 0f       	add	r24, r18
    243e:	91 1d       	adc	r25, r1
    2440:	20 91 a3 04 	lds	r18, 0x04A3	; 0x8004a3 <adc_random_seed>
    2444:	30 91 a4 04 	lds	r19, 0x04A4	; 0x8004a4 <adc_random_seed+0x1>
    2448:	28 0f       	add	r18, r24
    244a:	39 1f       	adc	r19, r25
    244c:	30 93 a4 04 	sts	0x04A4, r19	; 0x8004a4 <adc_random_seed+0x1>
    2450:	20 93 a3 04 	sts	0x04A3, r18	; 0x8004a3 <adc_random_seed>
    2454:	08 95       	ret

00002456 <adc_get_random_seed>:
    2456:	80 91 a3 04 	lds	r24, 0x04A3	; 0x8004a3 <adc_random_seed>
    245a:	90 91 a4 04 	lds	r25, 0x04A4	; 0x8004a4 <adc_random_seed+0x1>
    245e:	08 95       	ret

00002460 <__cmpsf2>:
    2460:	0e 94 d6 12 	call	0x25ac	; 0x25ac <__fp_cmp>
    2464:	08 f4       	brcc	.+2      	; 0x2468 <__cmpsf2+0x8>
    2466:	81 e0       	ldi	r24, 0x01	; 1
    2468:	08 95       	ret

0000246a <__divsf3>:
    246a:	0e 94 49 12 	call	0x2492	; 0x2492 <__divsf3x>
    246e:	0c 94 11 13 	jmp	0x2622	; 0x2622 <__fp_round>
    2472:	0e 94 0a 13 	call	0x2614	; 0x2614 <__fp_pscB>
    2476:	58 f0       	brcs	.+22     	; 0x248e <__divsf3+0x24>
    2478:	0e 94 03 13 	call	0x2606	; 0x2606 <__fp_pscA>
    247c:	40 f0       	brcs	.+16     	; 0x248e <__divsf3+0x24>
    247e:	29 f4       	brne	.+10     	; 0x248a <__divsf3+0x20>
    2480:	5f 3f       	cpi	r21, 0xFF	; 255
    2482:	29 f0       	breq	.+10     	; 0x248e <__divsf3+0x24>
    2484:	0c 94 fa 12 	jmp	0x25f4	; 0x25f4 <__fp_inf>
    2488:	51 11       	cpse	r21, r1
    248a:	0c 94 45 13 	jmp	0x268a	; 0x268a <__fp_szero>
    248e:	0c 94 00 13 	jmp	0x2600	; 0x2600 <__fp_nan>

00002492 <__divsf3x>:
    2492:	0e 94 22 13 	call	0x2644	; 0x2644 <__fp_split3>
    2496:	68 f3       	brcs	.-38     	; 0x2472 <__divsf3+0x8>

00002498 <__divsf3_pse>:
    2498:	99 23       	and	r25, r25
    249a:	b1 f3       	breq	.-20     	; 0x2488 <__divsf3+0x1e>
    249c:	55 23       	and	r21, r21
    249e:	91 f3       	breq	.-28     	; 0x2484 <__divsf3+0x1a>
    24a0:	95 1b       	sub	r25, r21
    24a2:	55 0b       	sbc	r21, r21
    24a4:	bb 27       	eor	r27, r27
    24a6:	aa 27       	eor	r26, r26
    24a8:	62 17       	cp	r22, r18
    24aa:	73 07       	cpc	r23, r19
    24ac:	84 07       	cpc	r24, r20
    24ae:	38 f0       	brcs	.+14     	; 0x24be <__divsf3_pse+0x26>
    24b0:	9f 5f       	subi	r25, 0xFF	; 255
    24b2:	5f 4f       	sbci	r21, 0xFF	; 255
    24b4:	22 0f       	add	r18, r18
    24b6:	33 1f       	adc	r19, r19
    24b8:	44 1f       	adc	r20, r20
    24ba:	aa 1f       	adc	r26, r26
    24bc:	a9 f3       	breq	.-22     	; 0x24a8 <__divsf3_pse+0x10>
    24be:	35 d0       	rcall	.+106    	; 0x252a <__divsf3_pse+0x92>
    24c0:	0e 2e       	mov	r0, r30
    24c2:	3a f0       	brmi	.+14     	; 0x24d2 <__divsf3_pse+0x3a>
    24c4:	e0 e8       	ldi	r30, 0x80	; 128
    24c6:	32 d0       	rcall	.+100    	; 0x252c <__divsf3_pse+0x94>
    24c8:	91 50       	subi	r25, 0x01	; 1
    24ca:	50 40       	sbci	r21, 0x00	; 0
    24cc:	e6 95       	lsr	r30
    24ce:	00 1c       	adc	r0, r0
    24d0:	ca f7       	brpl	.-14     	; 0x24c4 <__divsf3_pse+0x2c>
    24d2:	2b d0       	rcall	.+86     	; 0x252a <__divsf3_pse+0x92>
    24d4:	fe 2f       	mov	r31, r30
    24d6:	29 d0       	rcall	.+82     	; 0x252a <__divsf3_pse+0x92>
    24d8:	66 0f       	add	r22, r22
    24da:	77 1f       	adc	r23, r23
    24dc:	88 1f       	adc	r24, r24
    24de:	bb 1f       	adc	r27, r27
    24e0:	26 17       	cp	r18, r22
    24e2:	37 07       	cpc	r19, r23
    24e4:	48 07       	cpc	r20, r24
    24e6:	ab 07       	cpc	r26, r27
    24e8:	b0 e8       	ldi	r27, 0x80	; 128
    24ea:	09 f0       	breq	.+2      	; 0x24ee <__divsf3_pse+0x56>
    24ec:	bb 0b       	sbc	r27, r27
    24ee:	80 2d       	mov	r24, r0
    24f0:	bf 01       	movw	r22, r30
    24f2:	ff 27       	eor	r31, r31
    24f4:	93 58       	subi	r25, 0x83	; 131
    24f6:	5f 4f       	sbci	r21, 0xFF	; 255
    24f8:	3a f0       	brmi	.+14     	; 0x2508 <__divsf3_pse+0x70>
    24fa:	9e 3f       	cpi	r25, 0xFE	; 254
    24fc:	51 05       	cpc	r21, r1
    24fe:	78 f0       	brcs	.+30     	; 0x251e <__divsf3_pse+0x86>
    2500:	0c 94 fa 12 	jmp	0x25f4	; 0x25f4 <__fp_inf>
    2504:	0c 94 45 13 	jmp	0x268a	; 0x268a <__fp_szero>
    2508:	5f 3f       	cpi	r21, 0xFF	; 255
    250a:	e4 f3       	brlt	.-8      	; 0x2504 <__divsf3_pse+0x6c>
    250c:	98 3e       	cpi	r25, 0xE8	; 232
    250e:	d4 f3       	brlt	.-12     	; 0x2504 <__divsf3_pse+0x6c>
    2510:	86 95       	lsr	r24
    2512:	77 95       	ror	r23
    2514:	67 95       	ror	r22
    2516:	b7 95       	ror	r27
    2518:	f7 95       	ror	r31
    251a:	9f 5f       	subi	r25, 0xFF	; 255
    251c:	c9 f7       	brne	.-14     	; 0x2510 <__divsf3_pse+0x78>
    251e:	88 0f       	add	r24, r24
    2520:	91 1d       	adc	r25, r1
    2522:	96 95       	lsr	r25
    2524:	87 95       	ror	r24
    2526:	97 f9       	bld	r25, 7
    2528:	08 95       	ret
    252a:	e1 e0       	ldi	r30, 0x01	; 1
    252c:	66 0f       	add	r22, r22
    252e:	77 1f       	adc	r23, r23
    2530:	88 1f       	adc	r24, r24
    2532:	bb 1f       	adc	r27, r27
    2534:	62 17       	cp	r22, r18
    2536:	73 07       	cpc	r23, r19
    2538:	84 07       	cpc	r24, r20
    253a:	ba 07       	cpc	r27, r26
    253c:	20 f0       	brcs	.+8      	; 0x2546 <__divsf3_pse+0xae>
    253e:	62 1b       	sub	r22, r18
    2540:	73 0b       	sbc	r23, r19
    2542:	84 0b       	sbc	r24, r20
    2544:	ba 0b       	sbc	r27, r26
    2546:	ee 1f       	adc	r30, r30
    2548:	88 f7       	brcc	.-30     	; 0x252c <__divsf3_pse+0x94>
    254a:	e0 95       	com	r30
    254c:	08 95       	ret

0000254e <__fixunssfsi>:
    254e:	0e 94 2a 13 	call	0x2654	; 0x2654 <__fp_splitA>
    2552:	88 f0       	brcs	.+34     	; 0x2576 <__fixunssfsi+0x28>
    2554:	9f 57       	subi	r25, 0x7F	; 127
    2556:	98 f0       	brcs	.+38     	; 0x257e <__fixunssfsi+0x30>
    2558:	b9 2f       	mov	r27, r25
    255a:	99 27       	eor	r25, r25
    255c:	b7 51       	subi	r27, 0x17	; 23
    255e:	b0 f0       	brcs	.+44     	; 0x258c <__fixunssfsi+0x3e>
    2560:	e1 f0       	breq	.+56     	; 0x259a <__fixunssfsi+0x4c>
    2562:	66 0f       	add	r22, r22
    2564:	77 1f       	adc	r23, r23
    2566:	88 1f       	adc	r24, r24
    2568:	99 1f       	adc	r25, r25
    256a:	1a f0       	brmi	.+6      	; 0x2572 <__fixunssfsi+0x24>
    256c:	ba 95       	dec	r27
    256e:	c9 f7       	brne	.-14     	; 0x2562 <__fixunssfsi+0x14>
    2570:	14 c0       	rjmp	.+40     	; 0x259a <__fixunssfsi+0x4c>
    2572:	b1 30       	cpi	r27, 0x01	; 1
    2574:	91 f0       	breq	.+36     	; 0x259a <__fixunssfsi+0x4c>
    2576:	0e 94 44 13 	call	0x2688	; 0x2688 <__fp_zero>
    257a:	b1 e0       	ldi	r27, 0x01	; 1
    257c:	08 95       	ret
    257e:	0c 94 44 13 	jmp	0x2688	; 0x2688 <__fp_zero>
    2582:	67 2f       	mov	r22, r23
    2584:	78 2f       	mov	r23, r24
    2586:	88 27       	eor	r24, r24
    2588:	b8 5f       	subi	r27, 0xF8	; 248
    258a:	39 f0       	breq	.+14     	; 0x259a <__fixunssfsi+0x4c>
    258c:	b9 3f       	cpi	r27, 0xF9	; 249
    258e:	cc f3       	brlt	.-14     	; 0x2582 <__fixunssfsi+0x34>
    2590:	86 95       	lsr	r24
    2592:	77 95       	ror	r23
    2594:	67 95       	ror	r22
    2596:	b3 95       	inc	r27
    2598:	d9 f7       	brne	.-10     	; 0x2590 <__fixunssfsi+0x42>
    259a:	3e f4       	brtc	.+14     	; 0x25aa <__fixunssfsi+0x5c>
    259c:	90 95       	com	r25
    259e:	80 95       	com	r24
    25a0:	70 95       	com	r23
    25a2:	61 95       	neg	r22
    25a4:	7f 4f       	sbci	r23, 0xFF	; 255
    25a6:	8f 4f       	sbci	r24, 0xFF	; 255
    25a8:	9f 4f       	sbci	r25, 0xFF	; 255
    25aa:	08 95       	ret

000025ac <__fp_cmp>:
    25ac:	99 0f       	add	r25, r25
    25ae:	00 08       	sbc	r0, r0
    25b0:	55 0f       	add	r21, r21
    25b2:	aa 0b       	sbc	r26, r26
    25b4:	e0 e8       	ldi	r30, 0x80	; 128
    25b6:	fe ef       	ldi	r31, 0xFE	; 254
    25b8:	16 16       	cp	r1, r22
    25ba:	17 06       	cpc	r1, r23
    25bc:	e8 07       	cpc	r30, r24
    25be:	f9 07       	cpc	r31, r25
    25c0:	c0 f0       	brcs	.+48     	; 0x25f2 <__fp_cmp+0x46>
    25c2:	12 16       	cp	r1, r18
    25c4:	13 06       	cpc	r1, r19
    25c6:	e4 07       	cpc	r30, r20
    25c8:	f5 07       	cpc	r31, r21
    25ca:	98 f0       	brcs	.+38     	; 0x25f2 <__fp_cmp+0x46>
    25cc:	62 1b       	sub	r22, r18
    25ce:	73 0b       	sbc	r23, r19
    25d0:	84 0b       	sbc	r24, r20
    25d2:	95 0b       	sbc	r25, r21
    25d4:	39 f4       	brne	.+14     	; 0x25e4 <__fp_cmp+0x38>
    25d6:	0a 26       	eor	r0, r26
    25d8:	61 f0       	breq	.+24     	; 0x25f2 <__fp_cmp+0x46>
    25da:	23 2b       	or	r18, r19
    25dc:	24 2b       	or	r18, r20
    25de:	25 2b       	or	r18, r21
    25e0:	21 f4       	brne	.+8      	; 0x25ea <__fp_cmp+0x3e>
    25e2:	08 95       	ret
    25e4:	0a 26       	eor	r0, r26
    25e6:	09 f4       	brne	.+2      	; 0x25ea <__fp_cmp+0x3e>
    25e8:	a1 40       	sbci	r26, 0x01	; 1
    25ea:	a6 95       	lsr	r26
    25ec:	8f ef       	ldi	r24, 0xFF	; 255
    25ee:	81 1d       	adc	r24, r1
    25f0:	81 1d       	adc	r24, r1
    25f2:	08 95       	ret

000025f4 <__fp_inf>:
    25f4:	97 f9       	bld	r25, 7
    25f6:	9f 67       	ori	r25, 0x7F	; 127
    25f8:	80 e8       	ldi	r24, 0x80	; 128
    25fa:	70 e0       	ldi	r23, 0x00	; 0
    25fc:	60 e0       	ldi	r22, 0x00	; 0
    25fe:	08 95       	ret

00002600 <__fp_nan>:
    2600:	9f ef       	ldi	r25, 0xFF	; 255
    2602:	80 ec       	ldi	r24, 0xC0	; 192
    2604:	08 95       	ret

00002606 <__fp_pscA>:
    2606:	00 24       	eor	r0, r0
    2608:	0a 94       	dec	r0
    260a:	16 16       	cp	r1, r22
    260c:	17 06       	cpc	r1, r23
    260e:	18 06       	cpc	r1, r24
    2610:	09 06       	cpc	r0, r25
    2612:	08 95       	ret

00002614 <__fp_pscB>:
    2614:	00 24       	eor	r0, r0
    2616:	0a 94       	dec	r0
    2618:	12 16       	cp	r1, r18
    261a:	13 06       	cpc	r1, r19
    261c:	14 06       	cpc	r1, r20
    261e:	05 06       	cpc	r0, r21
    2620:	08 95       	ret

00002622 <__fp_round>:
    2622:	09 2e       	mov	r0, r25
    2624:	03 94       	inc	r0
    2626:	00 0c       	add	r0, r0
    2628:	11 f4       	brne	.+4      	; 0x262e <__fp_round+0xc>
    262a:	88 23       	and	r24, r24
    262c:	52 f0       	brmi	.+20     	; 0x2642 <__fp_round+0x20>
    262e:	bb 0f       	add	r27, r27
    2630:	40 f4       	brcc	.+16     	; 0x2642 <__fp_round+0x20>
    2632:	bf 2b       	or	r27, r31
    2634:	11 f4       	brne	.+4      	; 0x263a <__fp_round+0x18>
    2636:	60 ff       	sbrs	r22, 0
    2638:	04 c0       	rjmp	.+8      	; 0x2642 <__fp_round+0x20>
    263a:	6f 5f       	subi	r22, 0xFF	; 255
    263c:	7f 4f       	sbci	r23, 0xFF	; 255
    263e:	8f 4f       	sbci	r24, 0xFF	; 255
    2640:	9f 4f       	sbci	r25, 0xFF	; 255
    2642:	08 95       	ret

00002644 <__fp_split3>:
    2644:	57 fd       	sbrc	r21, 7
    2646:	90 58       	subi	r25, 0x80	; 128
    2648:	44 0f       	add	r20, r20
    264a:	55 1f       	adc	r21, r21
    264c:	59 f0       	breq	.+22     	; 0x2664 <__fp_splitA+0x10>
    264e:	5f 3f       	cpi	r21, 0xFF	; 255
    2650:	71 f0       	breq	.+28     	; 0x266e <__fp_splitA+0x1a>
    2652:	47 95       	ror	r20

00002654 <__fp_splitA>:
    2654:	88 0f       	add	r24, r24
    2656:	97 fb       	bst	r25, 7
    2658:	99 1f       	adc	r25, r25
    265a:	61 f0       	breq	.+24     	; 0x2674 <__fp_splitA+0x20>
    265c:	9f 3f       	cpi	r25, 0xFF	; 255
    265e:	79 f0       	breq	.+30     	; 0x267e <__fp_splitA+0x2a>
    2660:	87 95       	ror	r24
    2662:	08 95       	ret
    2664:	12 16       	cp	r1, r18
    2666:	13 06       	cpc	r1, r19
    2668:	14 06       	cpc	r1, r20
    266a:	55 1f       	adc	r21, r21
    266c:	f2 cf       	rjmp	.-28     	; 0x2652 <__fp_split3+0xe>
    266e:	46 95       	lsr	r20
    2670:	f1 df       	rcall	.-30     	; 0x2654 <__fp_splitA>
    2672:	08 c0       	rjmp	.+16     	; 0x2684 <__fp_splitA+0x30>
    2674:	16 16       	cp	r1, r22
    2676:	17 06       	cpc	r1, r23
    2678:	18 06       	cpc	r1, r24
    267a:	99 1f       	adc	r25, r25
    267c:	f1 cf       	rjmp	.-30     	; 0x2660 <__fp_splitA+0xc>
    267e:	86 95       	lsr	r24
    2680:	71 05       	cpc	r23, r1
    2682:	61 05       	cpc	r22, r1
    2684:	08 94       	sec
    2686:	08 95       	ret

00002688 <__fp_zero>:
    2688:	e8 94       	clt

0000268a <__fp_szero>:
    268a:	bb 27       	eor	r27, r27
    268c:	66 27       	eor	r22, r22
    268e:	77 27       	eor	r23, r23
    2690:	cb 01       	movw	r24, r22
    2692:	97 f9       	bld	r25, 7
    2694:	08 95       	ret

00002696 <__gesf2>:
    2696:	0e 94 d6 12 	call	0x25ac	; 0x25ac <__fp_cmp>
    269a:	08 f4       	brcc	.+2      	; 0x269e <__gesf2+0x8>
    269c:	8f ef       	ldi	r24, 0xFF	; 255
    269e:	08 95       	ret

000026a0 <__mulsf3>:
    26a0:	0e 94 63 13 	call	0x26c6	; 0x26c6 <__mulsf3x>
    26a4:	0c 94 11 13 	jmp	0x2622	; 0x2622 <__fp_round>
    26a8:	0e 94 03 13 	call	0x2606	; 0x2606 <__fp_pscA>
    26ac:	38 f0       	brcs	.+14     	; 0x26bc <__mulsf3+0x1c>
    26ae:	0e 94 0a 13 	call	0x2614	; 0x2614 <__fp_pscB>
    26b2:	20 f0       	brcs	.+8      	; 0x26bc <__mulsf3+0x1c>
    26b4:	95 23       	and	r25, r21
    26b6:	11 f0       	breq	.+4      	; 0x26bc <__mulsf3+0x1c>
    26b8:	0c 94 fa 12 	jmp	0x25f4	; 0x25f4 <__fp_inf>
    26bc:	0c 94 00 13 	jmp	0x2600	; 0x2600 <__fp_nan>
    26c0:	11 24       	eor	r1, r1
    26c2:	0c 94 45 13 	jmp	0x268a	; 0x268a <__fp_szero>

000026c6 <__mulsf3x>:
    26c6:	0e 94 22 13 	call	0x2644	; 0x2644 <__fp_split3>
    26ca:	70 f3       	brcs	.-36     	; 0x26a8 <__mulsf3+0x8>

000026cc <__mulsf3_pse>:
    26cc:	95 9f       	mul	r25, r21
    26ce:	c1 f3       	breq	.-16     	; 0x26c0 <__mulsf3+0x20>
    26d0:	95 0f       	add	r25, r21
    26d2:	50 e0       	ldi	r21, 0x00	; 0
    26d4:	55 1f       	adc	r21, r21
    26d6:	62 9f       	mul	r22, r18
    26d8:	f0 01       	movw	r30, r0
    26da:	72 9f       	mul	r23, r18
    26dc:	bb 27       	eor	r27, r27
    26de:	f0 0d       	add	r31, r0
    26e0:	b1 1d       	adc	r27, r1
    26e2:	63 9f       	mul	r22, r19
    26e4:	aa 27       	eor	r26, r26
    26e6:	f0 0d       	add	r31, r0
    26e8:	b1 1d       	adc	r27, r1
    26ea:	aa 1f       	adc	r26, r26
    26ec:	64 9f       	mul	r22, r20
    26ee:	66 27       	eor	r22, r22
    26f0:	b0 0d       	add	r27, r0
    26f2:	a1 1d       	adc	r26, r1
    26f4:	66 1f       	adc	r22, r22
    26f6:	82 9f       	mul	r24, r18
    26f8:	22 27       	eor	r18, r18
    26fa:	b0 0d       	add	r27, r0
    26fc:	a1 1d       	adc	r26, r1
    26fe:	62 1f       	adc	r22, r18
    2700:	73 9f       	mul	r23, r19
    2702:	b0 0d       	add	r27, r0
    2704:	a1 1d       	adc	r26, r1
    2706:	62 1f       	adc	r22, r18
    2708:	83 9f       	mul	r24, r19
    270a:	a0 0d       	add	r26, r0
    270c:	61 1d       	adc	r22, r1
    270e:	22 1f       	adc	r18, r18
    2710:	74 9f       	mul	r23, r20
    2712:	33 27       	eor	r19, r19
    2714:	a0 0d       	add	r26, r0
    2716:	61 1d       	adc	r22, r1
    2718:	23 1f       	adc	r18, r19
    271a:	84 9f       	mul	r24, r20
    271c:	60 0d       	add	r22, r0
    271e:	21 1d       	adc	r18, r1
    2720:	82 2f       	mov	r24, r18
    2722:	76 2f       	mov	r23, r22
    2724:	6a 2f       	mov	r22, r26
    2726:	11 24       	eor	r1, r1
    2728:	9f 57       	subi	r25, 0x7F	; 127
    272a:	50 40       	sbci	r21, 0x00	; 0
    272c:	9a f0       	brmi	.+38     	; 0x2754 <__mulsf3_pse+0x88>
    272e:	f1 f0       	breq	.+60     	; 0x276c <__mulsf3_pse+0xa0>
    2730:	88 23       	and	r24, r24
    2732:	4a f0       	brmi	.+18     	; 0x2746 <__mulsf3_pse+0x7a>
    2734:	ee 0f       	add	r30, r30
    2736:	ff 1f       	adc	r31, r31
    2738:	bb 1f       	adc	r27, r27
    273a:	66 1f       	adc	r22, r22
    273c:	77 1f       	adc	r23, r23
    273e:	88 1f       	adc	r24, r24
    2740:	91 50       	subi	r25, 0x01	; 1
    2742:	50 40       	sbci	r21, 0x00	; 0
    2744:	a9 f7       	brne	.-22     	; 0x2730 <__mulsf3_pse+0x64>
    2746:	9e 3f       	cpi	r25, 0xFE	; 254
    2748:	51 05       	cpc	r21, r1
    274a:	80 f0       	brcs	.+32     	; 0x276c <__mulsf3_pse+0xa0>
    274c:	0c 94 fa 12 	jmp	0x25f4	; 0x25f4 <__fp_inf>
    2750:	0c 94 45 13 	jmp	0x268a	; 0x268a <__fp_szero>
    2754:	5f 3f       	cpi	r21, 0xFF	; 255
    2756:	e4 f3       	brlt	.-8      	; 0x2750 <__mulsf3_pse+0x84>
    2758:	98 3e       	cpi	r25, 0xE8	; 232
    275a:	d4 f3       	brlt	.-12     	; 0x2750 <__mulsf3_pse+0x84>
    275c:	86 95       	lsr	r24
    275e:	77 95       	ror	r23
    2760:	67 95       	ror	r22
    2762:	b7 95       	ror	r27
    2764:	f7 95       	ror	r31
    2766:	e7 95       	ror	r30
    2768:	9f 5f       	subi	r25, 0xFF	; 255
    276a:	c1 f7       	brne	.-16     	; 0x275c <__mulsf3_pse+0x90>
    276c:	fe 2b       	or	r31, r30
    276e:	88 0f       	add	r24, r24
    2770:	91 1d       	adc	r25, r1
    2772:	96 95       	lsr	r25
    2774:	87 95       	ror	r24
    2776:	97 f9       	bld	r25, 7
    2778:	08 95       	ret

0000277a <__divmodsi4>:
    277a:	05 2e       	mov	r0, r21
    277c:	97 fb       	bst	r25, 7
    277e:	1e f4       	brtc	.+6      	; 0x2786 <__divmodsi4+0xc>
    2780:	00 94       	com	r0
    2782:	0e 94 d4 13 	call	0x27a8	; 0x27a8 <__negsi2>
    2786:	57 fd       	sbrc	r21, 7
    2788:	07 d0       	rcall	.+14     	; 0x2798 <__divmodsi4_neg2>
    278a:	0e 94 dc 13 	call	0x27b8	; 0x27b8 <__udivmodsi4>
    278e:	07 fc       	sbrc	r0, 7
    2790:	03 d0       	rcall	.+6      	; 0x2798 <__divmodsi4_neg2>
    2792:	4e f4       	brtc	.+18     	; 0x27a6 <__divmodsi4_exit>
    2794:	0c 94 d4 13 	jmp	0x27a8	; 0x27a8 <__negsi2>

00002798 <__divmodsi4_neg2>:
    2798:	50 95       	com	r21
    279a:	40 95       	com	r20
    279c:	30 95       	com	r19
    279e:	21 95       	neg	r18
    27a0:	3f 4f       	sbci	r19, 0xFF	; 255
    27a2:	4f 4f       	sbci	r20, 0xFF	; 255
    27a4:	5f 4f       	sbci	r21, 0xFF	; 255

000027a6 <__divmodsi4_exit>:
    27a6:	08 95       	ret

000027a8 <__negsi2>:
    27a8:	90 95       	com	r25
    27aa:	80 95       	com	r24
    27ac:	70 95       	com	r23
    27ae:	61 95       	neg	r22
    27b0:	7f 4f       	sbci	r23, 0xFF	; 255
    27b2:	8f 4f       	sbci	r24, 0xFF	; 255
    27b4:	9f 4f       	sbci	r25, 0xFF	; 255
    27b6:	08 95       	ret

000027b8 <__udivmodsi4>:
    27b8:	a1 e2       	ldi	r26, 0x21	; 33
    27ba:	1a 2e       	mov	r1, r26
    27bc:	aa 1b       	sub	r26, r26
    27be:	bb 1b       	sub	r27, r27
    27c0:	fd 01       	movw	r30, r26
    27c2:	0d c0       	rjmp	.+26     	; 0x27de <__udivmodsi4_ep>

000027c4 <__udivmodsi4_loop>:
    27c4:	aa 1f       	adc	r26, r26
    27c6:	bb 1f       	adc	r27, r27
    27c8:	ee 1f       	adc	r30, r30
    27ca:	ff 1f       	adc	r31, r31
    27cc:	a2 17       	cp	r26, r18
    27ce:	b3 07       	cpc	r27, r19
    27d0:	e4 07       	cpc	r30, r20
    27d2:	f5 07       	cpc	r31, r21
    27d4:	20 f0       	brcs	.+8      	; 0x27de <__udivmodsi4_ep>
    27d6:	a2 1b       	sub	r26, r18
    27d8:	b3 0b       	sbc	r27, r19
    27da:	e4 0b       	sbc	r30, r20
    27dc:	f5 0b       	sbc	r31, r21

000027de <__udivmodsi4_ep>:
    27de:	66 1f       	adc	r22, r22
    27e0:	77 1f       	adc	r23, r23
    27e2:	88 1f       	adc	r24, r24
    27e4:	99 1f       	adc	r25, r25
    27e6:	1a 94       	dec	r1
    27e8:	69 f7       	brne	.-38     	; 0x27c4 <__udivmodsi4_loop>
    27ea:	60 95       	com	r22
    27ec:	70 95       	com	r23
    27ee:	80 95       	com	r24
    27f0:	90 95       	com	r25
    27f2:	9b 01       	movw	r18, r22
    27f4:	ac 01       	movw	r20, r24
    27f6:	bd 01       	movw	r22, r26
    27f8:	cf 01       	movw	r24, r30
    27fa:	08 95       	ret

000027fc <sprintf>:
    27fc:	0f 93       	push	r16
    27fe:	1f 93       	push	r17
    2800:	cf 93       	push	r28
    2802:	df 93       	push	r29
    2804:	cd b7       	in	r28, 0x3d	; 61
    2806:	de b7       	in	r29, 0x3e	; 62
    2808:	2e 97       	sbiw	r28, 0x0e	; 14
    280a:	0f b6       	in	r0, 0x3f	; 63
    280c:	f8 94       	cli
    280e:	de bf       	out	0x3e, r29	; 62
    2810:	0f be       	out	0x3f, r0	; 63
    2812:	cd bf       	out	0x3d, r28	; 61
    2814:	0d 89       	ldd	r16, Y+21	; 0x15
    2816:	1e 89       	ldd	r17, Y+22	; 0x16
    2818:	86 e0       	ldi	r24, 0x06	; 6
    281a:	8c 83       	std	Y+4, r24	; 0x04
    281c:	1a 83       	std	Y+2, r17	; 0x02
    281e:	09 83       	std	Y+1, r16	; 0x01
    2820:	8f ef       	ldi	r24, 0xFF	; 255
    2822:	9f e7       	ldi	r25, 0x7F	; 127
    2824:	9e 83       	std	Y+6, r25	; 0x06
    2826:	8d 83       	std	Y+5, r24	; 0x05
    2828:	ae 01       	movw	r20, r28
    282a:	47 5e       	subi	r20, 0xE7	; 231
    282c:	5f 4f       	sbci	r21, 0xFF	; 255
    282e:	6f 89       	ldd	r22, Y+23	; 0x17
    2830:	78 8d       	ldd	r23, Y+24	; 0x18
    2832:	ce 01       	movw	r24, r28
    2834:	01 96       	adiw	r24, 0x01	; 1
    2836:	0e 94 2d 14 	call	0x285a	; 0x285a <vfprintf>
    283a:	ef 81       	ldd	r30, Y+7	; 0x07
    283c:	f8 85       	ldd	r31, Y+8	; 0x08
    283e:	e0 0f       	add	r30, r16
    2840:	f1 1f       	adc	r31, r17
    2842:	10 82       	st	Z, r1
    2844:	2e 96       	adiw	r28, 0x0e	; 14
    2846:	0f b6       	in	r0, 0x3f	; 63
    2848:	f8 94       	cli
    284a:	de bf       	out	0x3e, r29	; 62
    284c:	0f be       	out	0x3f, r0	; 63
    284e:	cd bf       	out	0x3d, r28	; 61
    2850:	df 91       	pop	r29
    2852:	cf 91       	pop	r28
    2854:	1f 91       	pop	r17
    2856:	0f 91       	pop	r16
    2858:	08 95       	ret

0000285a <vfprintf>:
    285a:	2f 92       	push	r2
    285c:	3f 92       	push	r3
    285e:	4f 92       	push	r4
    2860:	5f 92       	push	r5
    2862:	6f 92       	push	r6
    2864:	7f 92       	push	r7
    2866:	8f 92       	push	r8
    2868:	9f 92       	push	r9
    286a:	af 92       	push	r10
    286c:	bf 92       	push	r11
    286e:	cf 92       	push	r12
    2870:	df 92       	push	r13
    2872:	ef 92       	push	r14
    2874:	ff 92       	push	r15
    2876:	0f 93       	push	r16
    2878:	1f 93       	push	r17
    287a:	cf 93       	push	r28
    287c:	df 93       	push	r29
    287e:	cd b7       	in	r28, 0x3d	; 61
    2880:	de b7       	in	r29, 0x3e	; 62
    2882:	2b 97       	sbiw	r28, 0x0b	; 11
    2884:	0f b6       	in	r0, 0x3f	; 63
    2886:	f8 94       	cli
    2888:	de bf       	out	0x3e, r29	; 62
    288a:	0f be       	out	0x3f, r0	; 63
    288c:	cd bf       	out	0x3d, r28	; 61
    288e:	6c 01       	movw	r12, r24
    2890:	7b 01       	movw	r14, r22
    2892:	8a 01       	movw	r16, r20
    2894:	fc 01       	movw	r30, r24
    2896:	17 82       	std	Z+7, r1	; 0x07
    2898:	16 82       	std	Z+6, r1	; 0x06
    289a:	83 81       	ldd	r24, Z+3	; 0x03
    289c:	81 ff       	sbrs	r24, 1
    289e:	cc c1       	rjmp	.+920    	; 0x2c38 <vfprintf+0x3de>
    28a0:	ce 01       	movw	r24, r28
    28a2:	01 96       	adiw	r24, 0x01	; 1
    28a4:	3c 01       	movw	r6, r24
    28a6:	f6 01       	movw	r30, r12
    28a8:	93 81       	ldd	r25, Z+3	; 0x03
    28aa:	f7 01       	movw	r30, r14
    28ac:	93 fd       	sbrc	r25, 3
    28ae:	85 91       	lpm	r24, Z+
    28b0:	93 ff       	sbrs	r25, 3
    28b2:	81 91       	ld	r24, Z+
    28b4:	7f 01       	movw	r14, r30
    28b6:	88 23       	and	r24, r24
    28b8:	09 f4       	brne	.+2      	; 0x28bc <vfprintf+0x62>
    28ba:	ba c1       	rjmp	.+884    	; 0x2c30 <vfprintf+0x3d6>
    28bc:	85 32       	cpi	r24, 0x25	; 37
    28be:	39 f4       	brne	.+14     	; 0x28ce <vfprintf+0x74>
    28c0:	93 fd       	sbrc	r25, 3
    28c2:	85 91       	lpm	r24, Z+
    28c4:	93 ff       	sbrs	r25, 3
    28c6:	81 91       	ld	r24, Z+
    28c8:	7f 01       	movw	r14, r30
    28ca:	85 32       	cpi	r24, 0x25	; 37
    28cc:	29 f4       	brne	.+10     	; 0x28d8 <vfprintf+0x7e>
    28ce:	b6 01       	movw	r22, r12
    28d0:	90 e0       	ldi	r25, 0x00	; 0
    28d2:	0e 94 4d 16 	call	0x2c9a	; 0x2c9a <fputc>
    28d6:	e7 cf       	rjmp	.-50     	; 0x28a6 <vfprintf+0x4c>
    28d8:	91 2c       	mov	r9, r1
    28da:	21 2c       	mov	r2, r1
    28dc:	31 2c       	mov	r3, r1
    28de:	ff e1       	ldi	r31, 0x1F	; 31
    28e0:	f3 15       	cp	r31, r3
    28e2:	d8 f0       	brcs	.+54     	; 0x291a <vfprintf+0xc0>
    28e4:	8b 32       	cpi	r24, 0x2B	; 43
    28e6:	79 f0       	breq	.+30     	; 0x2906 <vfprintf+0xac>
    28e8:	38 f4       	brcc	.+14     	; 0x28f8 <vfprintf+0x9e>
    28ea:	80 32       	cpi	r24, 0x20	; 32
    28ec:	79 f0       	breq	.+30     	; 0x290c <vfprintf+0xb2>
    28ee:	83 32       	cpi	r24, 0x23	; 35
    28f0:	a1 f4       	brne	.+40     	; 0x291a <vfprintf+0xc0>
    28f2:	23 2d       	mov	r18, r3
    28f4:	20 61       	ori	r18, 0x10	; 16
    28f6:	1d c0       	rjmp	.+58     	; 0x2932 <vfprintf+0xd8>
    28f8:	8d 32       	cpi	r24, 0x2D	; 45
    28fa:	61 f0       	breq	.+24     	; 0x2914 <vfprintf+0xba>
    28fc:	80 33       	cpi	r24, 0x30	; 48
    28fe:	69 f4       	brne	.+26     	; 0x291a <vfprintf+0xc0>
    2900:	23 2d       	mov	r18, r3
    2902:	21 60       	ori	r18, 0x01	; 1
    2904:	16 c0       	rjmp	.+44     	; 0x2932 <vfprintf+0xd8>
    2906:	83 2d       	mov	r24, r3
    2908:	82 60       	ori	r24, 0x02	; 2
    290a:	38 2e       	mov	r3, r24
    290c:	e3 2d       	mov	r30, r3
    290e:	e4 60       	ori	r30, 0x04	; 4
    2910:	3e 2e       	mov	r3, r30
    2912:	2a c0       	rjmp	.+84     	; 0x2968 <vfprintf+0x10e>
    2914:	f3 2d       	mov	r31, r3
    2916:	f8 60       	ori	r31, 0x08	; 8
    2918:	1d c0       	rjmp	.+58     	; 0x2954 <vfprintf+0xfa>
    291a:	37 fc       	sbrc	r3, 7
    291c:	2d c0       	rjmp	.+90     	; 0x2978 <vfprintf+0x11e>
    291e:	20 ed       	ldi	r18, 0xD0	; 208
    2920:	28 0f       	add	r18, r24
    2922:	2a 30       	cpi	r18, 0x0A	; 10
    2924:	40 f0       	brcs	.+16     	; 0x2936 <vfprintf+0xdc>
    2926:	8e 32       	cpi	r24, 0x2E	; 46
    2928:	b9 f4       	brne	.+46     	; 0x2958 <vfprintf+0xfe>
    292a:	36 fc       	sbrc	r3, 6
    292c:	81 c1       	rjmp	.+770    	; 0x2c30 <vfprintf+0x3d6>
    292e:	23 2d       	mov	r18, r3
    2930:	20 64       	ori	r18, 0x40	; 64
    2932:	32 2e       	mov	r3, r18
    2934:	19 c0       	rjmp	.+50     	; 0x2968 <vfprintf+0x10e>
    2936:	36 fe       	sbrs	r3, 6
    2938:	06 c0       	rjmp	.+12     	; 0x2946 <vfprintf+0xec>
    293a:	8a e0       	ldi	r24, 0x0A	; 10
    293c:	98 9e       	mul	r9, r24
    293e:	20 0d       	add	r18, r0
    2940:	11 24       	eor	r1, r1
    2942:	92 2e       	mov	r9, r18
    2944:	11 c0       	rjmp	.+34     	; 0x2968 <vfprintf+0x10e>
    2946:	ea e0       	ldi	r30, 0x0A	; 10
    2948:	2e 9e       	mul	r2, r30
    294a:	20 0d       	add	r18, r0
    294c:	11 24       	eor	r1, r1
    294e:	22 2e       	mov	r2, r18
    2950:	f3 2d       	mov	r31, r3
    2952:	f0 62       	ori	r31, 0x20	; 32
    2954:	3f 2e       	mov	r3, r31
    2956:	08 c0       	rjmp	.+16     	; 0x2968 <vfprintf+0x10e>
    2958:	8c 36       	cpi	r24, 0x6C	; 108
    295a:	21 f4       	brne	.+8      	; 0x2964 <vfprintf+0x10a>
    295c:	83 2d       	mov	r24, r3
    295e:	80 68       	ori	r24, 0x80	; 128
    2960:	38 2e       	mov	r3, r24
    2962:	02 c0       	rjmp	.+4      	; 0x2968 <vfprintf+0x10e>
    2964:	88 36       	cpi	r24, 0x68	; 104
    2966:	41 f4       	brne	.+16     	; 0x2978 <vfprintf+0x11e>
    2968:	f7 01       	movw	r30, r14
    296a:	93 fd       	sbrc	r25, 3
    296c:	85 91       	lpm	r24, Z+
    296e:	93 ff       	sbrs	r25, 3
    2970:	81 91       	ld	r24, Z+
    2972:	7f 01       	movw	r14, r30
    2974:	81 11       	cpse	r24, r1
    2976:	b3 cf       	rjmp	.-154    	; 0x28de <vfprintf+0x84>
    2978:	98 2f       	mov	r25, r24
    297a:	9f 7d       	andi	r25, 0xDF	; 223
    297c:	95 54       	subi	r25, 0x45	; 69
    297e:	93 30       	cpi	r25, 0x03	; 3
    2980:	28 f4       	brcc	.+10     	; 0x298c <vfprintf+0x132>
    2982:	0c 5f       	subi	r16, 0xFC	; 252
    2984:	1f 4f       	sbci	r17, 0xFF	; 255
    2986:	9f e3       	ldi	r25, 0x3F	; 63
    2988:	99 83       	std	Y+1, r25	; 0x01
    298a:	0d c0       	rjmp	.+26     	; 0x29a6 <vfprintf+0x14c>
    298c:	83 36       	cpi	r24, 0x63	; 99
    298e:	31 f0       	breq	.+12     	; 0x299c <vfprintf+0x142>
    2990:	83 37       	cpi	r24, 0x73	; 115
    2992:	71 f0       	breq	.+28     	; 0x29b0 <vfprintf+0x156>
    2994:	83 35       	cpi	r24, 0x53	; 83
    2996:	09 f0       	breq	.+2      	; 0x299a <vfprintf+0x140>
    2998:	59 c0       	rjmp	.+178    	; 0x2a4c <vfprintf+0x1f2>
    299a:	21 c0       	rjmp	.+66     	; 0x29de <vfprintf+0x184>
    299c:	f8 01       	movw	r30, r16
    299e:	80 81       	ld	r24, Z
    29a0:	89 83       	std	Y+1, r24	; 0x01
    29a2:	0e 5f       	subi	r16, 0xFE	; 254
    29a4:	1f 4f       	sbci	r17, 0xFF	; 255
    29a6:	88 24       	eor	r8, r8
    29a8:	83 94       	inc	r8
    29aa:	91 2c       	mov	r9, r1
    29ac:	53 01       	movw	r10, r6
    29ae:	13 c0       	rjmp	.+38     	; 0x29d6 <vfprintf+0x17c>
    29b0:	28 01       	movw	r4, r16
    29b2:	f2 e0       	ldi	r31, 0x02	; 2
    29b4:	4f 0e       	add	r4, r31
    29b6:	51 1c       	adc	r5, r1
    29b8:	f8 01       	movw	r30, r16
    29ba:	a0 80       	ld	r10, Z
    29bc:	b1 80       	ldd	r11, Z+1	; 0x01
    29be:	36 fe       	sbrs	r3, 6
    29c0:	03 c0       	rjmp	.+6      	; 0x29c8 <vfprintf+0x16e>
    29c2:	69 2d       	mov	r22, r9
    29c4:	70 e0       	ldi	r23, 0x00	; 0
    29c6:	02 c0       	rjmp	.+4      	; 0x29cc <vfprintf+0x172>
    29c8:	6f ef       	ldi	r22, 0xFF	; 255
    29ca:	7f ef       	ldi	r23, 0xFF	; 255
    29cc:	c5 01       	movw	r24, r10
    29ce:	0e 94 42 16 	call	0x2c84	; 0x2c84 <strnlen>
    29d2:	4c 01       	movw	r8, r24
    29d4:	82 01       	movw	r16, r4
    29d6:	f3 2d       	mov	r31, r3
    29d8:	ff 77       	andi	r31, 0x7F	; 127
    29da:	3f 2e       	mov	r3, r31
    29dc:	16 c0       	rjmp	.+44     	; 0x2a0a <vfprintf+0x1b0>
    29de:	28 01       	movw	r4, r16
    29e0:	22 e0       	ldi	r18, 0x02	; 2
    29e2:	42 0e       	add	r4, r18
    29e4:	51 1c       	adc	r5, r1
    29e6:	f8 01       	movw	r30, r16
    29e8:	a0 80       	ld	r10, Z
    29ea:	b1 80       	ldd	r11, Z+1	; 0x01
    29ec:	36 fe       	sbrs	r3, 6
    29ee:	03 c0       	rjmp	.+6      	; 0x29f6 <vfprintf+0x19c>
    29f0:	69 2d       	mov	r22, r9
    29f2:	70 e0       	ldi	r23, 0x00	; 0
    29f4:	02 c0       	rjmp	.+4      	; 0x29fa <vfprintf+0x1a0>
    29f6:	6f ef       	ldi	r22, 0xFF	; 255
    29f8:	7f ef       	ldi	r23, 0xFF	; 255
    29fa:	c5 01       	movw	r24, r10
    29fc:	0e 94 37 16 	call	0x2c6e	; 0x2c6e <strnlen_P>
    2a00:	4c 01       	movw	r8, r24
    2a02:	f3 2d       	mov	r31, r3
    2a04:	f0 68       	ori	r31, 0x80	; 128
    2a06:	3f 2e       	mov	r3, r31
    2a08:	82 01       	movw	r16, r4
    2a0a:	33 fc       	sbrc	r3, 3
    2a0c:	1b c0       	rjmp	.+54     	; 0x2a44 <vfprintf+0x1ea>
    2a0e:	82 2d       	mov	r24, r2
    2a10:	90 e0       	ldi	r25, 0x00	; 0
    2a12:	88 16       	cp	r8, r24
    2a14:	99 06       	cpc	r9, r25
    2a16:	b0 f4       	brcc	.+44     	; 0x2a44 <vfprintf+0x1ea>
    2a18:	b6 01       	movw	r22, r12
    2a1a:	80 e2       	ldi	r24, 0x20	; 32
    2a1c:	90 e0       	ldi	r25, 0x00	; 0
    2a1e:	0e 94 4d 16 	call	0x2c9a	; 0x2c9a <fputc>
    2a22:	2a 94       	dec	r2
    2a24:	f4 cf       	rjmp	.-24     	; 0x2a0e <vfprintf+0x1b4>
    2a26:	f5 01       	movw	r30, r10
    2a28:	37 fc       	sbrc	r3, 7
    2a2a:	85 91       	lpm	r24, Z+
    2a2c:	37 fe       	sbrs	r3, 7
    2a2e:	81 91       	ld	r24, Z+
    2a30:	5f 01       	movw	r10, r30
    2a32:	b6 01       	movw	r22, r12
    2a34:	90 e0       	ldi	r25, 0x00	; 0
    2a36:	0e 94 4d 16 	call	0x2c9a	; 0x2c9a <fputc>
    2a3a:	21 10       	cpse	r2, r1
    2a3c:	2a 94       	dec	r2
    2a3e:	21 e0       	ldi	r18, 0x01	; 1
    2a40:	82 1a       	sub	r8, r18
    2a42:	91 08       	sbc	r9, r1
    2a44:	81 14       	cp	r8, r1
    2a46:	91 04       	cpc	r9, r1
    2a48:	71 f7       	brne	.-36     	; 0x2a26 <vfprintf+0x1cc>
    2a4a:	e8 c0       	rjmp	.+464    	; 0x2c1c <vfprintf+0x3c2>
    2a4c:	84 36       	cpi	r24, 0x64	; 100
    2a4e:	11 f0       	breq	.+4      	; 0x2a54 <vfprintf+0x1fa>
    2a50:	89 36       	cpi	r24, 0x69	; 105
    2a52:	41 f5       	brne	.+80     	; 0x2aa4 <vfprintf+0x24a>
    2a54:	f8 01       	movw	r30, r16
    2a56:	37 fe       	sbrs	r3, 7
    2a58:	07 c0       	rjmp	.+14     	; 0x2a68 <vfprintf+0x20e>
    2a5a:	60 81       	ld	r22, Z
    2a5c:	71 81       	ldd	r23, Z+1	; 0x01
    2a5e:	82 81       	ldd	r24, Z+2	; 0x02
    2a60:	93 81       	ldd	r25, Z+3	; 0x03
    2a62:	0c 5f       	subi	r16, 0xFC	; 252
    2a64:	1f 4f       	sbci	r17, 0xFF	; 255
    2a66:	08 c0       	rjmp	.+16     	; 0x2a78 <vfprintf+0x21e>
    2a68:	60 81       	ld	r22, Z
    2a6a:	71 81       	ldd	r23, Z+1	; 0x01
    2a6c:	07 2e       	mov	r0, r23
    2a6e:	00 0c       	add	r0, r0
    2a70:	88 0b       	sbc	r24, r24
    2a72:	99 0b       	sbc	r25, r25
    2a74:	0e 5f       	subi	r16, 0xFE	; 254
    2a76:	1f 4f       	sbci	r17, 0xFF	; 255
    2a78:	f3 2d       	mov	r31, r3
    2a7a:	ff 76       	andi	r31, 0x6F	; 111
    2a7c:	3f 2e       	mov	r3, r31
    2a7e:	97 ff       	sbrs	r25, 7
    2a80:	09 c0       	rjmp	.+18     	; 0x2a94 <vfprintf+0x23a>
    2a82:	90 95       	com	r25
    2a84:	80 95       	com	r24
    2a86:	70 95       	com	r23
    2a88:	61 95       	neg	r22
    2a8a:	7f 4f       	sbci	r23, 0xFF	; 255
    2a8c:	8f 4f       	sbci	r24, 0xFF	; 255
    2a8e:	9f 4f       	sbci	r25, 0xFF	; 255
    2a90:	f0 68       	ori	r31, 0x80	; 128
    2a92:	3f 2e       	mov	r3, r31
    2a94:	2a e0       	ldi	r18, 0x0A	; 10
    2a96:	30 e0       	ldi	r19, 0x00	; 0
    2a98:	a3 01       	movw	r20, r6
    2a9a:	0e 94 89 16 	call	0x2d12	; 0x2d12 <__ultoa_invert>
    2a9e:	88 2e       	mov	r8, r24
    2aa0:	86 18       	sub	r8, r6
    2aa2:	45 c0       	rjmp	.+138    	; 0x2b2e <vfprintf+0x2d4>
    2aa4:	85 37       	cpi	r24, 0x75	; 117
    2aa6:	31 f4       	brne	.+12     	; 0x2ab4 <vfprintf+0x25a>
    2aa8:	23 2d       	mov	r18, r3
    2aaa:	2f 7e       	andi	r18, 0xEF	; 239
    2aac:	b2 2e       	mov	r11, r18
    2aae:	2a e0       	ldi	r18, 0x0A	; 10
    2ab0:	30 e0       	ldi	r19, 0x00	; 0
    2ab2:	25 c0       	rjmp	.+74     	; 0x2afe <vfprintf+0x2a4>
    2ab4:	93 2d       	mov	r25, r3
    2ab6:	99 7f       	andi	r25, 0xF9	; 249
    2ab8:	b9 2e       	mov	r11, r25
    2aba:	8f 36       	cpi	r24, 0x6F	; 111
    2abc:	c1 f0       	breq	.+48     	; 0x2aee <vfprintf+0x294>
    2abe:	18 f4       	brcc	.+6      	; 0x2ac6 <vfprintf+0x26c>
    2ac0:	88 35       	cpi	r24, 0x58	; 88
    2ac2:	79 f0       	breq	.+30     	; 0x2ae2 <vfprintf+0x288>
    2ac4:	b5 c0       	rjmp	.+362    	; 0x2c30 <vfprintf+0x3d6>
    2ac6:	80 37       	cpi	r24, 0x70	; 112
    2ac8:	19 f0       	breq	.+6      	; 0x2ad0 <vfprintf+0x276>
    2aca:	88 37       	cpi	r24, 0x78	; 120
    2acc:	21 f0       	breq	.+8      	; 0x2ad6 <vfprintf+0x27c>
    2ace:	b0 c0       	rjmp	.+352    	; 0x2c30 <vfprintf+0x3d6>
    2ad0:	e9 2f       	mov	r30, r25
    2ad2:	e0 61       	ori	r30, 0x10	; 16
    2ad4:	be 2e       	mov	r11, r30
    2ad6:	b4 fe       	sbrs	r11, 4
    2ad8:	0d c0       	rjmp	.+26     	; 0x2af4 <vfprintf+0x29a>
    2ada:	fb 2d       	mov	r31, r11
    2adc:	f4 60       	ori	r31, 0x04	; 4
    2ade:	bf 2e       	mov	r11, r31
    2ae0:	09 c0       	rjmp	.+18     	; 0x2af4 <vfprintf+0x29a>
    2ae2:	34 fe       	sbrs	r3, 4
    2ae4:	0a c0       	rjmp	.+20     	; 0x2afa <vfprintf+0x2a0>
    2ae6:	29 2f       	mov	r18, r25
    2ae8:	26 60       	ori	r18, 0x06	; 6
    2aea:	b2 2e       	mov	r11, r18
    2aec:	06 c0       	rjmp	.+12     	; 0x2afa <vfprintf+0x2a0>
    2aee:	28 e0       	ldi	r18, 0x08	; 8
    2af0:	30 e0       	ldi	r19, 0x00	; 0
    2af2:	05 c0       	rjmp	.+10     	; 0x2afe <vfprintf+0x2a4>
    2af4:	20 e1       	ldi	r18, 0x10	; 16
    2af6:	30 e0       	ldi	r19, 0x00	; 0
    2af8:	02 c0       	rjmp	.+4      	; 0x2afe <vfprintf+0x2a4>
    2afa:	20 e1       	ldi	r18, 0x10	; 16
    2afc:	32 e0       	ldi	r19, 0x02	; 2
    2afe:	f8 01       	movw	r30, r16
    2b00:	b7 fe       	sbrs	r11, 7
    2b02:	07 c0       	rjmp	.+14     	; 0x2b12 <vfprintf+0x2b8>
    2b04:	60 81       	ld	r22, Z
    2b06:	71 81       	ldd	r23, Z+1	; 0x01
    2b08:	82 81       	ldd	r24, Z+2	; 0x02
    2b0a:	93 81       	ldd	r25, Z+3	; 0x03
    2b0c:	0c 5f       	subi	r16, 0xFC	; 252
    2b0e:	1f 4f       	sbci	r17, 0xFF	; 255
    2b10:	06 c0       	rjmp	.+12     	; 0x2b1e <vfprintf+0x2c4>
    2b12:	60 81       	ld	r22, Z
    2b14:	71 81       	ldd	r23, Z+1	; 0x01
    2b16:	80 e0       	ldi	r24, 0x00	; 0
    2b18:	90 e0       	ldi	r25, 0x00	; 0
    2b1a:	0e 5f       	subi	r16, 0xFE	; 254
    2b1c:	1f 4f       	sbci	r17, 0xFF	; 255
    2b1e:	a3 01       	movw	r20, r6
    2b20:	0e 94 89 16 	call	0x2d12	; 0x2d12 <__ultoa_invert>
    2b24:	88 2e       	mov	r8, r24
    2b26:	86 18       	sub	r8, r6
    2b28:	fb 2d       	mov	r31, r11
    2b2a:	ff 77       	andi	r31, 0x7F	; 127
    2b2c:	3f 2e       	mov	r3, r31
    2b2e:	36 fe       	sbrs	r3, 6
    2b30:	0d c0       	rjmp	.+26     	; 0x2b4c <vfprintf+0x2f2>
    2b32:	23 2d       	mov	r18, r3
    2b34:	2e 7f       	andi	r18, 0xFE	; 254
    2b36:	a2 2e       	mov	r10, r18
    2b38:	89 14       	cp	r8, r9
    2b3a:	58 f4       	brcc	.+22     	; 0x2b52 <vfprintf+0x2f8>
    2b3c:	34 fe       	sbrs	r3, 4
    2b3e:	0b c0       	rjmp	.+22     	; 0x2b56 <vfprintf+0x2fc>
    2b40:	32 fc       	sbrc	r3, 2
    2b42:	09 c0       	rjmp	.+18     	; 0x2b56 <vfprintf+0x2fc>
    2b44:	83 2d       	mov	r24, r3
    2b46:	8e 7e       	andi	r24, 0xEE	; 238
    2b48:	a8 2e       	mov	r10, r24
    2b4a:	05 c0       	rjmp	.+10     	; 0x2b56 <vfprintf+0x2fc>
    2b4c:	b8 2c       	mov	r11, r8
    2b4e:	a3 2c       	mov	r10, r3
    2b50:	03 c0       	rjmp	.+6      	; 0x2b58 <vfprintf+0x2fe>
    2b52:	b8 2c       	mov	r11, r8
    2b54:	01 c0       	rjmp	.+2      	; 0x2b58 <vfprintf+0x2fe>
    2b56:	b9 2c       	mov	r11, r9
    2b58:	a4 fe       	sbrs	r10, 4
    2b5a:	0f c0       	rjmp	.+30     	; 0x2b7a <vfprintf+0x320>
    2b5c:	fe 01       	movw	r30, r28
    2b5e:	e8 0d       	add	r30, r8
    2b60:	f1 1d       	adc	r31, r1
    2b62:	80 81       	ld	r24, Z
    2b64:	80 33       	cpi	r24, 0x30	; 48
    2b66:	21 f4       	brne	.+8      	; 0x2b70 <vfprintf+0x316>
    2b68:	9a 2d       	mov	r25, r10
    2b6a:	99 7e       	andi	r25, 0xE9	; 233
    2b6c:	a9 2e       	mov	r10, r25
    2b6e:	09 c0       	rjmp	.+18     	; 0x2b82 <vfprintf+0x328>
    2b70:	a2 fe       	sbrs	r10, 2
    2b72:	06 c0       	rjmp	.+12     	; 0x2b80 <vfprintf+0x326>
    2b74:	b3 94       	inc	r11
    2b76:	b3 94       	inc	r11
    2b78:	04 c0       	rjmp	.+8      	; 0x2b82 <vfprintf+0x328>
    2b7a:	8a 2d       	mov	r24, r10
    2b7c:	86 78       	andi	r24, 0x86	; 134
    2b7e:	09 f0       	breq	.+2      	; 0x2b82 <vfprintf+0x328>
    2b80:	b3 94       	inc	r11
    2b82:	a3 fc       	sbrc	r10, 3
    2b84:	11 c0       	rjmp	.+34     	; 0x2ba8 <vfprintf+0x34e>
    2b86:	a0 fe       	sbrs	r10, 0
    2b88:	06 c0       	rjmp	.+12     	; 0x2b96 <vfprintf+0x33c>
    2b8a:	b2 14       	cp	r11, r2
    2b8c:	88 f4       	brcc	.+34     	; 0x2bb0 <vfprintf+0x356>
    2b8e:	28 0c       	add	r2, r8
    2b90:	92 2c       	mov	r9, r2
    2b92:	9b 18       	sub	r9, r11
    2b94:	0e c0       	rjmp	.+28     	; 0x2bb2 <vfprintf+0x358>
    2b96:	b2 14       	cp	r11, r2
    2b98:	60 f4       	brcc	.+24     	; 0x2bb2 <vfprintf+0x358>
    2b9a:	b6 01       	movw	r22, r12
    2b9c:	80 e2       	ldi	r24, 0x20	; 32
    2b9e:	90 e0       	ldi	r25, 0x00	; 0
    2ba0:	0e 94 4d 16 	call	0x2c9a	; 0x2c9a <fputc>
    2ba4:	b3 94       	inc	r11
    2ba6:	f7 cf       	rjmp	.-18     	; 0x2b96 <vfprintf+0x33c>
    2ba8:	b2 14       	cp	r11, r2
    2baa:	18 f4       	brcc	.+6      	; 0x2bb2 <vfprintf+0x358>
    2bac:	2b 18       	sub	r2, r11
    2bae:	02 c0       	rjmp	.+4      	; 0x2bb4 <vfprintf+0x35a>
    2bb0:	98 2c       	mov	r9, r8
    2bb2:	21 2c       	mov	r2, r1
    2bb4:	a4 fe       	sbrs	r10, 4
    2bb6:	10 c0       	rjmp	.+32     	; 0x2bd8 <vfprintf+0x37e>
    2bb8:	b6 01       	movw	r22, r12
    2bba:	80 e3       	ldi	r24, 0x30	; 48
    2bbc:	90 e0       	ldi	r25, 0x00	; 0
    2bbe:	0e 94 4d 16 	call	0x2c9a	; 0x2c9a <fputc>
    2bc2:	a2 fe       	sbrs	r10, 2
    2bc4:	17 c0       	rjmp	.+46     	; 0x2bf4 <vfprintf+0x39a>
    2bc6:	a1 fc       	sbrc	r10, 1
    2bc8:	03 c0       	rjmp	.+6      	; 0x2bd0 <vfprintf+0x376>
    2bca:	88 e7       	ldi	r24, 0x78	; 120
    2bcc:	90 e0       	ldi	r25, 0x00	; 0
    2bce:	02 c0       	rjmp	.+4      	; 0x2bd4 <vfprintf+0x37a>
    2bd0:	88 e5       	ldi	r24, 0x58	; 88
    2bd2:	90 e0       	ldi	r25, 0x00	; 0
    2bd4:	b6 01       	movw	r22, r12
    2bd6:	0c c0       	rjmp	.+24     	; 0x2bf0 <vfprintf+0x396>
    2bd8:	8a 2d       	mov	r24, r10
    2bda:	86 78       	andi	r24, 0x86	; 134
    2bdc:	59 f0       	breq	.+22     	; 0x2bf4 <vfprintf+0x39a>
    2bde:	a1 fe       	sbrs	r10, 1
    2be0:	02 c0       	rjmp	.+4      	; 0x2be6 <vfprintf+0x38c>
    2be2:	8b e2       	ldi	r24, 0x2B	; 43
    2be4:	01 c0       	rjmp	.+2      	; 0x2be8 <vfprintf+0x38e>
    2be6:	80 e2       	ldi	r24, 0x20	; 32
    2be8:	a7 fc       	sbrc	r10, 7
    2bea:	8d e2       	ldi	r24, 0x2D	; 45
    2bec:	b6 01       	movw	r22, r12
    2bee:	90 e0       	ldi	r25, 0x00	; 0
    2bf0:	0e 94 4d 16 	call	0x2c9a	; 0x2c9a <fputc>
    2bf4:	89 14       	cp	r8, r9
    2bf6:	38 f4       	brcc	.+14     	; 0x2c06 <vfprintf+0x3ac>
    2bf8:	b6 01       	movw	r22, r12
    2bfa:	80 e3       	ldi	r24, 0x30	; 48
    2bfc:	90 e0       	ldi	r25, 0x00	; 0
    2bfe:	0e 94 4d 16 	call	0x2c9a	; 0x2c9a <fputc>
    2c02:	9a 94       	dec	r9
    2c04:	f7 cf       	rjmp	.-18     	; 0x2bf4 <vfprintf+0x39a>
    2c06:	8a 94       	dec	r8
    2c08:	f3 01       	movw	r30, r6
    2c0a:	e8 0d       	add	r30, r8
    2c0c:	f1 1d       	adc	r31, r1
    2c0e:	80 81       	ld	r24, Z
    2c10:	b6 01       	movw	r22, r12
    2c12:	90 e0       	ldi	r25, 0x00	; 0
    2c14:	0e 94 4d 16 	call	0x2c9a	; 0x2c9a <fputc>
    2c18:	81 10       	cpse	r8, r1
    2c1a:	f5 cf       	rjmp	.-22     	; 0x2c06 <vfprintf+0x3ac>
    2c1c:	22 20       	and	r2, r2
    2c1e:	09 f4       	brne	.+2      	; 0x2c22 <vfprintf+0x3c8>
    2c20:	42 ce       	rjmp	.-892    	; 0x28a6 <vfprintf+0x4c>
    2c22:	b6 01       	movw	r22, r12
    2c24:	80 e2       	ldi	r24, 0x20	; 32
    2c26:	90 e0       	ldi	r25, 0x00	; 0
    2c28:	0e 94 4d 16 	call	0x2c9a	; 0x2c9a <fputc>
    2c2c:	2a 94       	dec	r2
    2c2e:	f6 cf       	rjmp	.-20     	; 0x2c1c <vfprintf+0x3c2>
    2c30:	f6 01       	movw	r30, r12
    2c32:	86 81       	ldd	r24, Z+6	; 0x06
    2c34:	97 81       	ldd	r25, Z+7	; 0x07
    2c36:	02 c0       	rjmp	.+4      	; 0x2c3c <vfprintf+0x3e2>
    2c38:	8f ef       	ldi	r24, 0xFF	; 255
    2c3a:	9f ef       	ldi	r25, 0xFF	; 255
    2c3c:	2b 96       	adiw	r28, 0x0b	; 11
    2c3e:	0f b6       	in	r0, 0x3f	; 63
    2c40:	f8 94       	cli
    2c42:	de bf       	out	0x3e, r29	; 62
    2c44:	0f be       	out	0x3f, r0	; 63
    2c46:	cd bf       	out	0x3d, r28	; 61
    2c48:	df 91       	pop	r29
    2c4a:	cf 91       	pop	r28
    2c4c:	1f 91       	pop	r17
    2c4e:	0f 91       	pop	r16
    2c50:	ff 90       	pop	r15
    2c52:	ef 90       	pop	r14
    2c54:	df 90       	pop	r13
    2c56:	cf 90       	pop	r12
    2c58:	bf 90       	pop	r11
    2c5a:	af 90       	pop	r10
    2c5c:	9f 90       	pop	r9
    2c5e:	8f 90       	pop	r8
    2c60:	7f 90       	pop	r7
    2c62:	6f 90       	pop	r6
    2c64:	5f 90       	pop	r5
    2c66:	4f 90       	pop	r4
    2c68:	3f 90       	pop	r3
    2c6a:	2f 90       	pop	r2
    2c6c:	08 95       	ret

00002c6e <strnlen_P>:
    2c6e:	fc 01       	movw	r30, r24
    2c70:	05 90       	lpm	r0, Z+
    2c72:	61 50       	subi	r22, 0x01	; 1
    2c74:	70 40       	sbci	r23, 0x00	; 0
    2c76:	01 10       	cpse	r0, r1
    2c78:	d8 f7       	brcc	.-10     	; 0x2c70 <strnlen_P+0x2>
    2c7a:	80 95       	com	r24
    2c7c:	90 95       	com	r25
    2c7e:	8e 0f       	add	r24, r30
    2c80:	9f 1f       	adc	r25, r31
    2c82:	08 95       	ret

00002c84 <strnlen>:
    2c84:	fc 01       	movw	r30, r24
    2c86:	61 50       	subi	r22, 0x01	; 1
    2c88:	70 40       	sbci	r23, 0x00	; 0
    2c8a:	01 90       	ld	r0, Z+
    2c8c:	01 10       	cpse	r0, r1
    2c8e:	d8 f7       	brcc	.-10     	; 0x2c86 <strnlen+0x2>
    2c90:	80 95       	com	r24
    2c92:	90 95       	com	r25
    2c94:	8e 0f       	add	r24, r30
    2c96:	9f 1f       	adc	r25, r31
    2c98:	08 95       	ret

00002c9a <fputc>:
    2c9a:	0f 93       	push	r16
    2c9c:	1f 93       	push	r17
    2c9e:	cf 93       	push	r28
    2ca0:	df 93       	push	r29
    2ca2:	fb 01       	movw	r30, r22
    2ca4:	23 81       	ldd	r18, Z+3	; 0x03
    2ca6:	21 fd       	sbrc	r18, 1
    2ca8:	03 c0       	rjmp	.+6      	; 0x2cb0 <fputc+0x16>
    2caa:	8f ef       	ldi	r24, 0xFF	; 255
    2cac:	9f ef       	ldi	r25, 0xFF	; 255
    2cae:	2c c0       	rjmp	.+88     	; 0x2d08 <fputc+0x6e>
    2cb0:	22 ff       	sbrs	r18, 2
    2cb2:	16 c0       	rjmp	.+44     	; 0x2ce0 <fputc+0x46>
    2cb4:	46 81       	ldd	r20, Z+6	; 0x06
    2cb6:	57 81       	ldd	r21, Z+7	; 0x07
    2cb8:	24 81       	ldd	r18, Z+4	; 0x04
    2cba:	35 81       	ldd	r19, Z+5	; 0x05
    2cbc:	42 17       	cp	r20, r18
    2cbe:	53 07       	cpc	r21, r19
    2cc0:	44 f4       	brge	.+16     	; 0x2cd2 <fputc+0x38>
    2cc2:	a0 81       	ld	r26, Z
    2cc4:	b1 81       	ldd	r27, Z+1	; 0x01
    2cc6:	9d 01       	movw	r18, r26
    2cc8:	2f 5f       	subi	r18, 0xFF	; 255
    2cca:	3f 4f       	sbci	r19, 0xFF	; 255
    2ccc:	31 83       	std	Z+1, r19	; 0x01
    2cce:	20 83       	st	Z, r18
    2cd0:	8c 93       	st	X, r24
    2cd2:	26 81       	ldd	r18, Z+6	; 0x06
    2cd4:	37 81       	ldd	r19, Z+7	; 0x07
    2cd6:	2f 5f       	subi	r18, 0xFF	; 255
    2cd8:	3f 4f       	sbci	r19, 0xFF	; 255
    2cda:	37 83       	std	Z+7, r19	; 0x07
    2cdc:	26 83       	std	Z+6, r18	; 0x06
    2cde:	14 c0       	rjmp	.+40     	; 0x2d08 <fputc+0x6e>
    2ce0:	8b 01       	movw	r16, r22
    2ce2:	ec 01       	movw	r28, r24
    2ce4:	fb 01       	movw	r30, r22
    2ce6:	00 84       	ldd	r0, Z+8	; 0x08
    2ce8:	f1 85       	ldd	r31, Z+9	; 0x09
    2cea:	e0 2d       	mov	r30, r0
    2cec:	09 95       	icall
    2cee:	89 2b       	or	r24, r25
    2cf0:	e1 f6       	brne	.-72     	; 0x2caa <fputc+0x10>
    2cf2:	d8 01       	movw	r26, r16
    2cf4:	16 96       	adiw	r26, 0x06	; 6
    2cf6:	8d 91       	ld	r24, X+
    2cf8:	9c 91       	ld	r25, X
    2cfa:	17 97       	sbiw	r26, 0x07	; 7
    2cfc:	01 96       	adiw	r24, 0x01	; 1
    2cfe:	17 96       	adiw	r26, 0x07	; 7
    2d00:	9c 93       	st	X, r25
    2d02:	8e 93       	st	-X, r24
    2d04:	16 97       	sbiw	r26, 0x06	; 6
    2d06:	ce 01       	movw	r24, r28
    2d08:	df 91       	pop	r29
    2d0a:	cf 91       	pop	r28
    2d0c:	1f 91       	pop	r17
    2d0e:	0f 91       	pop	r16
    2d10:	08 95       	ret

00002d12 <__ultoa_invert>:
    2d12:	fa 01       	movw	r30, r20
    2d14:	aa 27       	eor	r26, r26
    2d16:	28 30       	cpi	r18, 0x08	; 8
    2d18:	51 f1       	breq	.+84     	; 0x2d6e <__ultoa_invert+0x5c>
    2d1a:	20 31       	cpi	r18, 0x10	; 16
    2d1c:	81 f1       	breq	.+96     	; 0x2d7e <__ultoa_invert+0x6c>
    2d1e:	e8 94       	clt
    2d20:	6f 93       	push	r22
    2d22:	6e 7f       	andi	r22, 0xFE	; 254
    2d24:	6e 5f       	subi	r22, 0xFE	; 254
    2d26:	7f 4f       	sbci	r23, 0xFF	; 255
    2d28:	8f 4f       	sbci	r24, 0xFF	; 255
    2d2a:	9f 4f       	sbci	r25, 0xFF	; 255
    2d2c:	af 4f       	sbci	r26, 0xFF	; 255
    2d2e:	b1 e0       	ldi	r27, 0x01	; 1
    2d30:	3e d0       	rcall	.+124    	; 0x2dae <__ultoa_invert+0x9c>
    2d32:	b4 e0       	ldi	r27, 0x04	; 4
    2d34:	3c d0       	rcall	.+120    	; 0x2dae <__ultoa_invert+0x9c>
    2d36:	67 0f       	add	r22, r23
    2d38:	78 1f       	adc	r23, r24
    2d3a:	89 1f       	adc	r24, r25
    2d3c:	9a 1f       	adc	r25, r26
    2d3e:	a1 1d       	adc	r26, r1
    2d40:	68 0f       	add	r22, r24
    2d42:	79 1f       	adc	r23, r25
    2d44:	8a 1f       	adc	r24, r26
    2d46:	91 1d       	adc	r25, r1
    2d48:	a1 1d       	adc	r26, r1
    2d4a:	6a 0f       	add	r22, r26
    2d4c:	71 1d       	adc	r23, r1
    2d4e:	81 1d       	adc	r24, r1
    2d50:	91 1d       	adc	r25, r1
    2d52:	a1 1d       	adc	r26, r1
    2d54:	20 d0       	rcall	.+64     	; 0x2d96 <__ultoa_invert+0x84>
    2d56:	09 f4       	brne	.+2      	; 0x2d5a <__ultoa_invert+0x48>
    2d58:	68 94       	set
    2d5a:	3f 91       	pop	r19
    2d5c:	2a e0       	ldi	r18, 0x0A	; 10
    2d5e:	26 9f       	mul	r18, r22
    2d60:	11 24       	eor	r1, r1
    2d62:	30 19       	sub	r19, r0
    2d64:	30 5d       	subi	r19, 0xD0	; 208
    2d66:	31 93       	st	Z+, r19
    2d68:	de f6       	brtc	.-74     	; 0x2d20 <__ultoa_invert+0xe>
    2d6a:	cf 01       	movw	r24, r30
    2d6c:	08 95       	ret
    2d6e:	46 2f       	mov	r20, r22
    2d70:	47 70       	andi	r20, 0x07	; 7
    2d72:	40 5d       	subi	r20, 0xD0	; 208
    2d74:	41 93       	st	Z+, r20
    2d76:	b3 e0       	ldi	r27, 0x03	; 3
    2d78:	0f d0       	rcall	.+30     	; 0x2d98 <__ultoa_invert+0x86>
    2d7a:	c9 f7       	brne	.-14     	; 0x2d6e <__ultoa_invert+0x5c>
    2d7c:	f6 cf       	rjmp	.-20     	; 0x2d6a <__ultoa_invert+0x58>
    2d7e:	46 2f       	mov	r20, r22
    2d80:	4f 70       	andi	r20, 0x0F	; 15
    2d82:	40 5d       	subi	r20, 0xD0	; 208
    2d84:	4a 33       	cpi	r20, 0x3A	; 58
    2d86:	18 f0       	brcs	.+6      	; 0x2d8e <__ultoa_invert+0x7c>
    2d88:	49 5d       	subi	r20, 0xD9	; 217
    2d8a:	31 fd       	sbrc	r19, 1
    2d8c:	40 52       	subi	r20, 0x20	; 32
    2d8e:	41 93       	st	Z+, r20
    2d90:	02 d0       	rcall	.+4      	; 0x2d96 <__ultoa_invert+0x84>
    2d92:	a9 f7       	brne	.-22     	; 0x2d7e <__ultoa_invert+0x6c>
    2d94:	ea cf       	rjmp	.-44     	; 0x2d6a <__ultoa_invert+0x58>
    2d96:	b4 e0       	ldi	r27, 0x04	; 4
    2d98:	a6 95       	lsr	r26
    2d9a:	97 95       	ror	r25
    2d9c:	87 95       	ror	r24
    2d9e:	77 95       	ror	r23
    2da0:	67 95       	ror	r22
    2da2:	ba 95       	dec	r27
    2da4:	c9 f7       	brne	.-14     	; 0x2d98 <__ultoa_invert+0x86>
    2da6:	00 97       	sbiw	r24, 0x00	; 0
    2da8:	61 05       	cpc	r22, r1
    2daa:	71 05       	cpc	r23, r1
    2dac:	08 95       	ret
    2dae:	9b 01       	movw	r18, r22
    2db0:	ac 01       	movw	r20, r24
    2db2:	0a 2e       	mov	r0, r26
    2db4:	06 94       	lsr	r0
    2db6:	57 95       	ror	r21
    2db8:	47 95       	ror	r20
    2dba:	37 95       	ror	r19
    2dbc:	27 95       	ror	r18
    2dbe:	ba 95       	dec	r27
    2dc0:	c9 f7       	brne	.-14     	; 0x2db4 <__ultoa_invert+0xa2>
    2dc2:	62 0f       	add	r22, r18
    2dc4:	73 1f       	adc	r23, r19
    2dc6:	84 1f       	adc	r24, r20
    2dc8:	95 1f       	adc	r25, r21
    2dca:	a0 1d       	adc	r26, r0
    2dcc:	08 95       	ret

00002dce <_exit>:
    2dce:	f8 94       	cli

00002dd0 <__stop_program>:
    2dd0:	ff cf       	rjmp	.-2      	; 0x2dd0 <__stop_program>
